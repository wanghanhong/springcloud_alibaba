<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smart.device.install.mapper.TBaseBuildingMapper">

    <select id="selectBuildings" resultType="com.smart.device.common.install.entity.TBaseBuilding" parameterType="com.smart.device.common.install.entity.TBaseBuilding">
        select * from t_base_building t where t.delete_flag = 0
        <if test="vo.id != null ">
            and t.id = #{vo.id}
        </if>
        <if test="vo.buildingName != null and vo.buildingName != ''">
            and t.building_name like concat('%',#{vo.buildingName},'%')
        </if>
        <if test="vo.companyId != null ">
            and t.company_id = #{vo.companyId}
        </if>
        <if test="vo.province != null and vo.province != ''">
            and t.province = #{vo.province}
        </if>
        <if test="vo.city != null and vo.city != ''">
            and t.city = #{vo.city}
        </if>
        <if test="vo.county != null and vo.county != ''">
            and t.county = #{vo.county}
        </if>
        <if test="vo.town != null and vo.town != ''">
            and t.town = #{vo.town}
        </if>
    </select>

    <select id="baseBuildingList" parameterType="com.smart.device.common.install.entity.TBaseBuilding" resultType="com.smart.device.common.install.entity.TBaseBuilding">
        SELECT * from t_base_building t where t.delete_flag = 0
        <if test="vo.id != null ">
            and t.id = #{vo.id}
        </if>
        <if test="vo.companyId != null and vo.companyId != ''">
            and t.company_id = #{vo.companyId}
        </if>
        <if test="vo.companyName != null and vo.companyName != ''">
            and t.company_name like concat('%',#{vo.companyName},'%')
        </if>
        <if test="vo.province != null and vo.province != ''">
            and t.province = #{vo.province}
        </if>
        <if test="vo.city != null and vo.city != ''">
            and t.city = #{vo.city}
        </if>
        <if test="vo.county != null and vo.county != ''">
            and t.county = #{vo.county}
        </if>
        <if test="vo.town != null and vo.town != ''">
            and t.town = #{vo.town}
        </if>
        order by t.create_time desc
    </select>

    <resultMap id="myResultMap" type="com.smart.device.common.install.entity.TBaseBuilding">
        <id property="id" column="id"/>
        <result property="buildingName" column="building_name"/>
        <collection property="buildingSons" column="building_id"
                    javaType="ArrayList" ofType="com.smart.device.common.install.entity.TBaseBuildingSon">
            <id property="id" column="son_id"/>
            <result property="floorNum" column="floor_num"/>
            <result property="escapeRouteNum" column="escape_route_num"/>
            <result property="firehydrantNum" column="firehydrant_num"/>
            <result property="fireAllNum" column="fire_all_num"/>
            <!--<result property="smokeNum" column="smoke_num"/>-->
            <!--<result property="electricNum" column="waterpress_num"/>-->
            <!--<result property="waterpressNum" column="electric_num"/>-->
        </collection>
    </resultMap>

    <select id="baseBuildingAndSonList" resultMap="myResultMap" parameterType="java.lang.Long">
        SELECT t.id,t.building_name,t.company_id,t.floor_max,t.floor_min,t.floor_count,
        s.id son_id,s.building_id parent_id,s.floor_num,s.firehydrant_num,s.fire_all_num,
        s.escape_route_num,s.smoke_num,s.waterpress_num,s.electric_num
        from t_base_building t,t_base_building_son s where
        t.delete_flag = 0 and t.id =s.building_id
        <if test="companyId != null ">
            and t.company_id = #{companyId}
        </if>
        <if test="buildingId != null ">
            and t.id = #{buildingId}
        </if>
    </select>


    <select id="queryBuildCanDel" parameterType="java.lang.Long" resultType="java.lang.Integer">
        select sum(countx) from ( select count(*) countx  from t_base_firehydrant t where t.building_id = #{buildingId} UNION ALL
        select count(*) countx from t_manager_smoke t where t.building_id = #{buildingId} UNION ALL
        select count(*) countx from t_manager_waterpress t where t.building_id = #{buildingId} UNION ALL
        select count(*) countx from t_manager_electric t where t.building_id = #{buildingId} UNION ALL
        select count(*) countx from t_manager_cameras t where t.building_id = #{buildingId} ) t;
    </select>

    <select id="updateBuildingCompanyName" resultType="java.lang.Integer">
       update t_base_building set company_name = #{companyName} where company_id = #{companyId}
    </select>

</mapper>
