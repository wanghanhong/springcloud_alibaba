2021-04-08 09:06:51.093 febs [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-04-08 09:06:51.479 febs [restartedMain] INFO  c.a.n.c.c.i.LocalConfigInfoProcessor - LOCAL_SNAPSHOT_PATH:C:\Users\Dukzzz\nacos\config
2021-04-08 09:06:51.502 febs [restartedMain] INFO  c.a.nacos.client.config.impl.Limiter - limitTime:5.0
2021-04-08 09:06:51.929 febs [restartedMain] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-brd-sys2-local.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys2.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys2,DEFAULT_GROUP'}]
2021-04-08 09:06:51.932 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - The following profiles are active: local
2021-04-08 09:06:53.891 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-04-08 09:06:53.893 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-04-08 09:06:53.939 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 33ms. Found 0 Redis repository interfaces.
2021-04-08 09:06:54.207 febs [restartedMain] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=8c4fe861-2a7b-3271-bb5c-24bd86b9b2e5
2021-04-08 09:06:54.327 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [com.smart.brd.sys.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$68b60e38] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-08 09:06:54.390 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-08 09:06:54.449 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$856783ed] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-08 09:06:54.456 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-08 09:06:54.458 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-08 09:06:54.492 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [com.smart.brd.sys.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$a3753a34] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-08 09:06:54.771 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.smart.brd.sys.common.config.RedisConfig$$EnhancerBySpringCGLIB$$34d1d088] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-08 09:06:54.784 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-08 09:06:54.786 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [com.smart.brd.sys.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-08 09:06:54.823 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-08 09:06:54.830 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [com.smart.brd.sys.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$53d5245a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-08 09:06:54.833 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-08 09:06:54.838 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$59a17fb6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-08 09:06:54.845 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-08 09:06:54.846 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-08 09:06:54.848 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2021-04-08 09:06:54.853 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2021-04-08 09:06:55.139 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2021-04-08 09:06:55.139 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2021-04-08 09:06:55.139 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2021-04-08 09:06:55.139 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2021-04-08 09:06:55.139 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-08 09:06:55.149 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-08 09:06:55.157 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-08 09:06:55.619 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-08 09:06:55.626 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-08 09:06:55.651 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-08 09:06:55.654 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy144] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-08 09:06:55.659 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-08 09:06:55.660 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy145] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-08 09:06:55.661 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [com.smart.brd.sys.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-08 09:06:55.686 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [com.smart.brd.sys.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-08 09:06:55.699 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userTokenServiceImpl' of type [com.smart.brd.sys.system.usertoken.service.impl.UserTokenServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-08 09:06:55.704 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-08 09:06:55.704 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy148] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-08 09:06:55.706 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [com.smart.brd.sys.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-08 09:06:55.721 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-08 09:06:55.721 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy150] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-08 09:06:55.722 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [com.smart.brd.sys.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-08 09:06:55.763 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-08 09:06:55.763 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy152] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-08 09:06:55.764 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [com.smart.brd.sys.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-08 09:06:55.775 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-08 09:06:55.776 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [com.sun.proxy.$Proxy154] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-08 09:06:55.781 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-08 09:06:55.782 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy155] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-08 09:06:55.783 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [com.smart.brd.sys.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-08 09:06:55.796 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-08 09:06:55.798 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-08 09:06:55.800 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-08 09:06:55.805 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-08 09:06:55.806 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-08 09:06:55.809 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-08 09:06:55.812 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-08 09:06:55.814 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-08 09:06:55.820 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-08 09:06:55.822 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-08 09:06:55.825 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-08 09:06:55.827 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-08 09:06:55.847 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-08 09:06:55.869 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [com.smart.brd.sys.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-08 09:06:55.870 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [com.smart.brd.sys.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-08 09:06:55.870 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [com.smart.brd.sys.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-08 09:06:55.881 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-08 09:06:55.907 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-08 09:06:56.324 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 11101 (http)
2021-04-08 09:06:56.332 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-11101"]
2021-04-08 09:06:56.332 febs [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2021-04-08 09:06:56.332 febs [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.31]
2021-04-08 09:06:56.434 febs [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2021-04-08 09:06:56.434 febs [restartedMain] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4485 ms
2021-04-08 09:06:56.527 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-04-08 09:06:56.535 febs [restartedMain] INFO  c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3c76cf05
2021-04-08 09:06:57.174 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2021-04-08 09:06:57.183 febs [restartedMain] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-08 09:06:57.183 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.2 created.
2021-04-08 09:06:57.184 febs [restartedMain] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2021-04-08 09:06:57.184 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-08 09:06:57.184 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2021-04-08 09:06:57.184 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.2
2021-04-08 09:06:57.184 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@359a9ac4
2021-04-08 09:06:57.251 febs [restartedMain] INFO  p6spy - 2021-04-08 09:06:57 | 耗时 16 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2021-04-08 09:06:57.638 febs [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2021-04-08 09:06:57.967 febs [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-04-08 09:06:58.078 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2021-04-08 09:06:58.243 febs [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2021-04-08 09:06:58.268 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-04-08 09:06:58.484 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2021-04-08 09:06:58.497 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-04-08 09:06:58.497 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Environment :null
2021-04-08 09:06:58.498 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-04-08 09:06:59.188 febs [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2021-04-08 09:06:59.197 febs [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2021-04-08 09:06:59.229 febs [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2021-04-08 09:06:59.239 febs [restartedMain] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2021-04-08 09:06:59.239 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2021-04-08 09:06:59.253 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-11101"]
2021-04-08 09:06:59.276 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 11101 (http) with context path ''
2021-04-08 09:06:59.278 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"192.168.0.102","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":11101,"scheduled":false,"serviceName":"DEFAULT_GROUP@@brd-sys2","stopped":false,"weight":1.0} to beat map.
2021-04-08 09:06:59.330 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [REGISTER-SERVICE] public registering service DEFAULT_GROUP@@brd-sys2 with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"192.168.0.102","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":11101,"weight":1.0}
2021-04-08 09:06:59.358 febs [scheduling-1] INFO  c.s.brd.sys.common.task.CacheTask - delete expired user
2021-04-08 09:06:59.412 febs [restartedMain] INFO  c.a.c.n.r.NacosServiceRegistry - nacos registry, DEFAULT_GROUP brd-sys2 192.168.0.102:11101 register finished
2021-04-08 09:06:59.575 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - Started BrdSysApplication in 9.17 seconds (JVM running for 10.8)
2021-04-08 09:06:59.579 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - Redis连接中 ······
2021-04-08 09:06:59.587 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存初始化 ······
2021-04-08 09:06:59.587 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存用户数据 ······
2021-04-08 09:06:59.634 febs [restartedMain] INFO  p6spy - 2021-04-08 09:06:59 | 耗时 18 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user;
2021-04-08 09:06:59.667 febs [restartedMain] INFO  p6spy - 2021-04-08 09:06:59 | 耗时 21 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sysadmin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-08 09:06:59.840 febs [restartedMain] INFO  p6spy - 2021-04-08 09:06:59 | 耗时 8 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin';
2021-04-08 09:06:59.885 febs [restartedMain] INFO  p6spy - 2021-04-08 09:06:59 | 耗时 12 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'sysadmin' and m.perms is not null and m.perms <> '';
2021-04-08 09:06:59.932 febs [restartedMain] INFO  p6spy - 2021-04-08 09:06:59 | 耗时 10 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='-1';
2021-04-08 09:07:00.003 febs [restartedMain] INFO  p6spy - 2021-04-08 09:07:00 | 耗时 68 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengcheng1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-08 09:07:00.086 febs [restartedMain] INFO  p6spy - 2021-04-08 09:07:00 | 耗时 13 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengcheng1';
2021-04-08 09:07:00.109 febs [restartedMain] INFO  p6spy - 2021-04-08 09:07:00 | 耗时 7 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengcheng1' and m.perms is not null and m.perms <> '';
2021-04-08 09:07:00.145 febs [restartedMain] INFO  p6spy - 2021-04-08 09:07:00 | 耗时 15 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='163';
2021-04-08 09:07:00.232 febs [restartedMain] INFO  p6spy - 2021-04-08 09:07:00 | 耗时 75 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yulin1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-08 09:07:00.319 febs [restartedMain] INFO  p6spy - 2021-04-08 09:07:00 | 耗时 7 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yulin1';
2021-04-08 09:07:00.355 febs [restartedMain] INFO  p6spy - 2021-04-08 09:07:00 | 耗时 7 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yulin1' and m.perms is not null and m.perms <> '';
2021-04-08 09:07:00.410 febs [restartedMain] INFO  p6spy - 2021-04-08 09:07:00 | 耗时 21 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='164';
2021-04-08 09:07:00.517 febs [restartedMain] INFO  p6spy - 2021-04-08 09:07:00 | 耗时 76 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengchengyonghu1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-08 09:07:00.587 febs [restartedMain] INFO  p6spy - 2021-04-08 09:07:00 | 耗时 10 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengchengyonghu1';
2021-04-08 09:07:00.632 febs [restartedMain] INFO  p6spy - 2021-04-08 09:07:00 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengchengyonghu1' and m.perms is not null and m.perms <> '';
2021-04-08 09:07:00.649 febs [restartedMain] INFO  p6spy - 2021-04-08 09:07:00 | 耗时 15 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='173';
2021-04-08 09:07:00.741 febs [restartedMain] INFO  p6spy - 2021-04-08 09:07:00 | 耗时 69 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengchengyonghu2' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-08 09:07:00.819 febs [restartedMain] INFO  p6spy - 2021-04-08 09:07:00 | 耗时 11 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengchengyonghu2';
2021-04-08 09:07:00.873 febs [restartedMain] INFO  p6spy - 2021-04-08 09:07:00 | 耗时 19 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengchengyonghu2' and m.perms is not null and m.perms <> '';
2021-04-08 09:07:00.917 febs [restartedMain] INFO  p6spy - 2021-04-08 09:07:00 | 耗时 42 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='174';
2021-04-08 09:07:01.049 febs [restartedMain] INFO  p6spy - 2021-04-08 09:07:01 | 耗时 68 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengcheng' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-08 09:07:01.116 febs [restartedMain] INFO  p6spy - 2021-04-08 09:07:01 | 耗时 7 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengcheng';
2021-04-08 09:07:01.132 febs [restartedMain] INFO  p6spy - 2021-04-08 09:07:01 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengcheng' and m.perms is not null and m.perms <> '';
2021-04-08 09:07:01.154 febs [restartedMain] INFO  p6spy - 2021-04-08 09:07:01 | 耗时 21 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='175';
2021-04-08 09:07:01.233 febs [restartedMain] INFO  p6spy - 2021-04-08 09:07:01 | 耗时 64 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yulinyonghu1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-08 09:07:01.290 febs [restartedMain] INFO  p6spy - 2021-04-08 09:07:01 | 耗时 4 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yulinyonghu1';
2021-04-08 09:07:01.308 febs [restartedMain] INFO  p6spy - 2021-04-08 09:07:01 | 耗时 6 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yulinyonghu1' and m.perms is not null and m.perms <> '';
2021-04-08 09:07:01.318 febs [restartedMain] INFO  p6spy - 2021-04-08 09:07:01 | 耗时 8 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='178';
2021-04-08 09:07:01.410 febs [restartedMain] INFO  p6spy - 2021-04-08 09:07:01 | 耗时 72 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yulinyonghu2' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-08 09:07:01.527 febs [restartedMain] INFO  p6spy - 2021-04-08 09:07:01 | 耗时 14 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yulinyonghu2';
2021-04-08 09:07:01.566 febs [restartedMain] INFO  p6spy - 2021-04-08 09:07:01 | 耗时 12 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yulinyonghu2' and m.perms is not null and m.perms <> '';
2021-04-08 09:07:01.587 febs [restartedMain] INFO  p6spy - 2021-04-08 09:07:01 | 耗时 18 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='179';
2021-04-08 09:07:01.673 febs [restartedMain] INFO  p6spy - 2021-04-08 09:07:01 | 耗时 74 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'heyang1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-08 09:07:01.758 febs [restartedMain] INFO  p6spy - 2021-04-08 09:07:01 | 耗时 18 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'heyang1';
2021-04-08 09:07:01.788 febs [restartedMain] INFO  p6spy - 2021-04-08 09:07:01 | 耗时 7 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'heyang1' and m.perms is not null and m.perms <> '';
2021-04-08 09:07:01.825 febs [restartedMain] INFO  p6spy - 2021-04-08 09:07:01 | 耗时 14 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='180';
2021-04-08 09:07:01.913 febs [restartedMain] INFO  p6spy - 2021-04-08 09:07:01 | 耗时 67 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'linengyan' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-08 09:07:01.988 febs [restartedMain] INFO  p6spy - 2021-04-08 09:07:01 | 耗时 6 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'linengyan';
2021-04-08 09:07:02.023 febs [restartedMain] INFO  p6spy - 2021-04-08 09:07:02 | 耗时 15 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'linengyan' and m.perms is not null and m.perms <> '';
2021-04-08 09:07:02.049 febs [restartedMain] INFO  p6spy - 2021-04-08 09:07:02 | 耗时 6 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='183';
2021-04-08 09:07:02.149 febs [restartedMain] INFO  p6spy - 2021-04-08 09:07:02 | 耗时 74 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengcheng2' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-08 09:07:02.213 febs [restartedMain] INFO  p6spy - 2021-04-08 09:07:02 | 耗时 4 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengcheng2';
2021-04-08 09:07:02.250 febs [restartedMain] INFO  p6spy - 2021-04-08 09:07:02 | 耗时 12 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengcheng2' and m.perms is not null and m.perms <> '';
2021-04-08 09:07:02.278 febs [restartedMain] INFO  p6spy - 2021-04-08 09:07:02 | 耗时 9 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='184';
2021-04-08 09:07:02.367 febs [restartedMain] INFO  p6spy - 2021-04-08 09:07:02 | 耗时 70 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'zhangsansan' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-08 09:07:02.450 febs [restartedMain] INFO  p6spy - 2021-04-08 09:07:02 | 耗时 8 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'zhangsansan';
2021-04-08 09:07:02.482 febs [restartedMain] INFO  p6spy - 2021-04-08 09:07:02 | 耗时 10 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'zhangsansan' and m.perms is not null and m.perms <> '';
2021-04-08 09:07:02.490 febs [restartedMain] INFO  p6spy - 2021-04-08 09:07:02 | 耗时 6 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='185';
2021-04-08 09:07:02.719 febs [restartedMain] INFO  p6spy - 2021-04-08 09:07:02 | 耗时 203 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'bh' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-08 09:07:02.788 febs [restartedMain] INFO  p6spy - 2021-04-08 09:07:02 | 耗时 6 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'bh';
2021-04-08 09:07:02.827 febs [restartedMain] INFO  p6spy - 2021-04-08 09:07:02 | 耗时 24 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'bh' and m.perms is not null and m.perms <> '';
2021-04-08 09:07:02.834 febs [restartedMain] INFO  p6spy - 2021-04-08 09:07:02 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='186';
2021-04-08 09:07:02.869 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2021-04-08 09:07:02.870 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2021-04-08 09:07:02.870 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2021-04-08 09:07:02.870 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -                                                       
2021-04-08 09:07:02.870 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - FEBS 启动完毕，时间：2021-04-08T09:07:02.870
2021-04-08 09:07:02.876 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2+DEFAULT_GROUP
2021-04-08 09:07:02.876 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2, group=DEFAULT_GROUP, cnt=1
2021-04-08 09:07:02.877 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2.yaml+DEFAULT_GROUP
2021-04-08 09:07:02.877 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2.yaml, group=DEFAULT_GROUP, cnt=1
2021-04-08 09:07:02.877 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2-local.yaml+DEFAULT_GROUP
2021-04-08 09:07:02.877 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2-local.yaml, group=DEFAULT_GROUP, cnt=1
2021-04-08 09:09:23.648 febs [http-nio-11101-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-04-08 09:09:23.648 febs [http-nio-11101-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2021-04-08 09:09:23.659 febs [http-nio-11101-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 10 ms
2021-04-08 09:09:23.862 febs [http-nio-11101-exec-1] INFO  p6spy - 2021-04-08 09:09:23 | 耗时 50 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'chengcheng1';
2021-04-08 09:09:30.848 febs [http-nio-11101-exec-2] INFO  c.s.b.sys.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2021-04-08 09:09:31.005 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-04-08 09:09:31 | 耗时 8 ms | SQL 语句：
UPDATE t_user SET last_login_time='2021-04-08T09:09:30.989+0800', user_type=0 WHERE username = 'sysadmin';
2021-04-08 09:09:31.059 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-04-08 09:09:31 | 耗时 52 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sysadmin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-08 09:09:31.210 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-04-08 09:09:31 | 耗时 23 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'sysadmin', '2021-04-08T09:09:31.134+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1' );
2021-04-08 09:09:31.362 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-04-08 09:09:31 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='-1';
2021-04-08 09:09:31.489 febs [http-nio-11101-exec-4] INFO  p6spy - 2021-04-08 09:09:31 | 耗时 95 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-04-08 09:09:31.547 febs [http-nio-11101-exec-5] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-08 09:09:31.596 febs [http-nio-11101-exec-5] INFO  p6spy - 2021-04-08 09:09:31 | 耗时 26 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin') order by m.order_num;
2021-04-08 09:10:58.483 febs [http-nio-11101-exec-6] INFO  p6spy - 2021-04-08 09:10:58 | 耗时 59 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-04-08 09:10:58.633 febs [http-nio-11101-exec-7] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-08 09:10:58.646 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-08 09:10:58 | 耗时 11 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin') order by m.order_num;
2021-04-08 09:15:16.196 febs [http-nio-11101-exec-9] INFO  c.s.b.sys.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2021-04-08 09:15:16.223 febs [http-nio-11101-exec-9] INFO  p6spy - 2021-04-08 09:15:16 | 耗时 9 ms | SQL 语句：
UPDATE t_user SET last_login_time='2021-04-08T09:15:16.211+0800', user_type=0 WHERE username = 'sysadmin';
2021-04-08 09:15:16.277 febs [http-nio-11101-exec-9] INFO  p6spy - 2021-04-08 09:15:16 | 耗时 53 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sysadmin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-08 09:15:16.349 febs [http-nio-11101-exec-9] INFO  p6spy - 2021-04-08 09:15:16 | 耗时 7 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'sysadmin', '2021-04-08T09:15:16.340+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1' );
2021-04-08 09:15:16.394 febs [http-nio-11101-exec-9] INFO  p6spy - 2021-04-08 09:15:16 | 耗时 4 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='-1';
2021-04-08 09:15:16.441 febs [http-nio-11101-exec-8] INFO  p6spy - 2021-04-08 09:15:16 | 耗时 36 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-04-08 09:15:16.493 febs [http-nio-11101-exec-11] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-08 09:15:16.505 febs [http-nio-11101-exec-11] INFO  p6spy - 2021-04-08 09:15:16 | 耗时 9 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin') order by m.order_num;
