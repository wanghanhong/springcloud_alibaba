2021-05-27 09:02:41.559 febs [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-05-27 09:02:41.970 febs [restartedMain] INFO  c.a.n.c.c.i.LocalConfigInfoProcessor - LOCAL_SNAPSHOT_PATH:C:\Users\Dukzzz\nacos\config
2021-05-27 09:02:41.993 febs [restartedMain] INFO  c.a.nacos.client.config.impl.Limiter - limitTime:5.0
2021-05-27 09:02:42.020 febs [restartedMain] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-brd-sys-dukzzz.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys,DEFAULT_GROUP'}]
2021-05-27 09:02:42.034 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - The following profiles are active: dukzzz
2021-05-27 09:02:42.981 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-05-27 09:02:42.983 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-05-27 09:02:43.028 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 33ms. Found 0 Redis repository interfaces.
2021-05-27 09:02:43.245 febs [restartedMain] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=c33df720-08df-3a1d-b2f9-8753f48f7824
2021-05-27 09:02:43.314 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [com.smart.brd.sys.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$5184c3d8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:43.450 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:43.521 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$6e36398d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:43.529 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:43.532 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:43.567 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [com.smart.brd.sys.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$8c43efd4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:43.845 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.smart.brd.sys.common.config.RedisConfig$$EnhancerBySpringCGLIB$$1da08628] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:43.861 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:43.866 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [com.smart.brd.sys.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:43.905 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:43.911 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [com.smart.brd.sys.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$3ca3d9fa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:43.914 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:43.920 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$42703556] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:43.926 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:43.928 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:43.931 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2021-05-27 09:02:43.937 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2021-05-27 09:02:44.032 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2021-05-27 09:02:44.032 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2021-05-27 09:02:44.033 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2021-05-27 09:02:44.033 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2021-05-27 09:02:44.033 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:44.044 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:44.052 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:44.483 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:44.490 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:44.516 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:44.519 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy132] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:44.527 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:44.528 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy133] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:44.531 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [com.smart.brd.sys.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:44.579 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [com.smart.brd.sys.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:44.599 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userTokenServiceImpl' of type [com.smart.brd.sys.system.usertoken.service.impl.UserTokenServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:44.602 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:44.604 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy136] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:44.607 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [com.smart.brd.sys.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:44.629 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:44.630 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy138] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:44.636 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [com.smart.brd.sys.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:44.680 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:44.681 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy140] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:44.684 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [com.smart.brd.sys.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:44.703 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:44.705 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [com.sun.proxy.$Proxy142] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:44.711 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:44.712 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy143] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:44.743 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jedisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:44.803 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:44.823 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [com.smart.brd.sys.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:44.844 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:44.846 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:44.848 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:44.852 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:44.854 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:44.857 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:44.860 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:44.864 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:44.869 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:44.871 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:44.876 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:44.878 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:44.895 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:44.915 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [com.smart.brd.sys.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:44.916 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [com.smart.brd.sys.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:44.916 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [com.smart.brd.sys.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:44.926 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:44.943 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:02:45.320 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 10021 (http)
2021-05-27 09:02:45.328 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-10021"]
2021-05-27 09:02:45.328 febs [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2021-05-27 09:02:45.328 febs [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.31]
2021-05-27 09:02:45.426 febs [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2021-05-27 09:02:45.426 febs [restartedMain] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3375 ms
2021-05-27 09:02:45.530 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-05-27 09:02:45.540 febs [restartedMain] INFO  c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@472bf9ed
2021-05-27 09:02:46.077 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2021-05-27 09:02:46.088 febs [restartedMain] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-05-27 09:02:46.088 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.2 created.
2021-05-27 09:02:46.089 febs [restartedMain] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2021-05-27 09:02:46.090 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-05-27 09:02:46.090 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2021-05-27 09:02:46.090 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.2
2021-05-27 09:02:46.090 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@100f2ccc
2021-05-27 09:02:46.142 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:46 | 耗时 0 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2021-05-27 09:02:46.454 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2021-05-27 09:02:46.501 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-05-27 09:02:47.137 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2021-05-27 09:02:47.157 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-05-27 09:02:47.158 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Environment :null
2021-05-27 09:02:47.158 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-05-27 09:02:48.272 febs [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-05-27 09:02:48.380 febs [restartedMain] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2021-05-27 09:02:48.381 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2021-05-27 09:02:48.399 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-10021"]
2021-05-27 09:02:48.430 febs [scheduling-1] INFO  c.s.brd.sys.common.task.CacheTask - delete expired user
2021-05-27 09:02:48.441 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 10021 (http) with context path ''
2021-05-27 09:02:48.445 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"192.168.0.101","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":10021,"scheduled":false,"serviceName":"DEFAULT_GROUP@@brd-sys","stopped":false,"weight":1.0} to beat map.
2021-05-27 09:02:48.541 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [REGISTER-SERVICE] public registering service DEFAULT_GROUP@@brd-sys with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"192.168.0.101","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":10021,"weight":1.0}
2021-05-27 09:02:48.551 febs [restartedMain] INFO  c.a.c.n.r.NacosServiceRegistry - nacos registry, DEFAULT_GROUP brd-sys 192.168.0.101:10021 register finished
2021-05-27 09:02:48.756 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - Started BrdSysApplication in 8.215 seconds (JVM running for 9.578)
2021-05-27 09:02:48.760 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - Redis连接中 ······
2021-05-27 09:02:48.761 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存初始化 ······
2021-05-27 09:02:48.761 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存用户数据 ······
2021-05-27 09:02:48.787 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:48 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,username,password,pass_time,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user;
2021-05-27 09:02:48.798 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:48 | 耗时 1 ms | SQL 语句：
SELECT u.*, d.dept_id deptId, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sysadmin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-05-27 09:02:48.876 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:48 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin';
2021-05-27 09:02:48.887 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:48 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'sysadmin' and m.perms is not null and m.perms <> '';
2021-05-27 09:02:48.898 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:48 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='-1';
2021-05-27 09:02:48.899 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:48 | 耗时 0 ms | SQL 语句：
SELECT u.*, d.dept_id deptId, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-05-27 09:02:48.904 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:48 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin1';
2021-05-27 09:02:48.907 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:48 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin1' and m.perms is not null and m.perms <> '';
2021-05-27 09:02:48.910 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:48 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='240';
2021-05-27 09:02:48.914 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:48 | 耗时 0 ms | SQL 语句：
SELECT u.*, d.dept_id deptId, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin2' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-05-27 09:02:48.918 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:48 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin2';
2021-05-27 09:02:48.920 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:48 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin2' and m.perms is not null and m.perms <> '';
2021-05-27 09:02:48.924 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:48 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='267';
2021-05-27 09:02:48.926 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:48 | 耗时 0 ms | SQL 语句：
SELECT u.*, d.dept_id deptId, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'danong1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-05-27 09:02:48.929 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:48 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'danong1';
2021-05-27 09:02:48.933 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:48 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'danong1' and m.perms is not null and m.perms <> '';
2021-05-27 09:02:48.936 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:48 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='293';
2021-05-27 09:02:48.939 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:48 | 耗时 0 ms | SQL 语句：
SELECT u.*, d.dept_id deptId, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'dny18g1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-05-27 09:02:48.942 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:48 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'dny18g1';
2021-05-27 09:02:48.944 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:48 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'dny18g1' and m.perms is not null and m.perms <> '';
2021-05-27 09:02:48.947 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:48 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='294';
2021-05-27 09:02:48.949 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:48 | 耗时 0 ms | SQL 语句：
SELECT u.*, d.dept_id deptId, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'dn1wh1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-05-27 09:02:48.953 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:48 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'dn1wh1';
2021-05-27 09:02:48.955 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:48 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'dn1wh1' and m.perms is not null and m.perms <> '';
2021-05-27 09:02:48.957 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:48 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='296';
2021-05-27 09:02:48.960 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:48 | 耗时 1 ms | SQL 语句：
SELECT u.*, d.dept_id deptId, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'dn1yy1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-05-27 09:02:48.963 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:48 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'dn1yy1';
2021-05-27 09:02:48.967 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:48 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'dn1yy1' and m.perms is not null and m.perms <> '';
2021-05-27 09:02:48.970 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:48 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='306';
2021-05-27 09:02:48.972 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:48 | 耗时 0 ms | SQL 语句：
SELECT u.*, d.dept_id deptId, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'dny17g1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-05-27 09:02:48.975 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:48 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'dny17g1';
2021-05-27 09:02:48.978 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:48 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'dny17g1' and m.perms is not null and m.perms <> '';
2021-05-27 09:02:48.981 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:48 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='308';
2021-05-27 09:02:48.983 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:48 | 耗时 0 ms | SQL 语句：
SELECT u.*, d.dept_id deptId, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'dny17y1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-05-27 09:02:48.987 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:48 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'dny17y1';
2021-05-27 09:02:48.989 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:48 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'dny17y1' and m.perms is not null and m.perms <> '';
2021-05-27 09:02:48.991 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:48 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='309';
2021-05-27 09:02:48.994 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:48 | 耗时 0 ms | SQL 语句：
SELECT u.*, d.dept_id deptId, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'dny19g1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-05-27 09:02:48.997 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:48 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'dny19g1';
2021-05-27 09:02:48.999 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:48 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'dny19g1' and m.perms is not null and m.perms <> '';
2021-05-27 09:02:49.002 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:49 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='310';
2021-05-27 09:02:49.005 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:49 | 耗时 0 ms | SQL 语句：
SELECT u.*, d.dept_id deptId, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'dny19y1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-05-27 09:02:49.007 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:49 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'dny19y1';
2021-05-27 09:02:49.010 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:49 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'dny19y1' and m.perms is not null and m.perms <> '';
2021-05-27 09:02:49.013 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:49 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='311';
2021-05-27 09:02:49.016 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:49 | 耗时 0 ms | SQL 语句：
SELECT u.*, d.dept_id deptId, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'dny20g1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-05-27 09:02:49.020 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:49 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'dny20g1';
2021-05-27 09:02:49.022 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:49 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'dny20g1' and m.perms is not null and m.perms <> '';
2021-05-27 09:02:49.025 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:49 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='313';
2021-05-27 09:02:49.028 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:49 | 耗时 0 ms | SQL 语句：
SELECT u.*, d.dept_id deptId, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'gaojiguanliyuan' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-05-27 09:02:49.031 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:49 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'gaojiguanliyuan';
2021-05-27 09:02:49.035 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:49 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'gaojiguanliyuan' and m.perms is not null and m.perms <> '';
2021-05-27 09:02:49.037 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:49 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='315';
2021-05-27 09:02:49.041 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:49 | 耗时 1 ms | SQL 语句：
SELECT u.*, d.dept_id deptId, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin002' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-05-27 09:02:49.044 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:49 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin002';
2021-05-27 09:02:49.046 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:49 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin002' and m.perms is not null and m.perms <> '';
2021-05-27 09:02:49.049 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:49 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='317';
2021-05-27 09:02:49.052 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:49 | 耗时 0 ms | SQL 语句：
SELECT u.*, d.dept_id deptId, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin003' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-05-27 09:02:49.055 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:49 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin003';
2021-05-27 09:02:49.057 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:49 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin003' and m.perms is not null and m.perms <> '';
2021-05-27 09:02:49.060 febs [restartedMain] INFO  p6spy - 2021-05-27 09:02:49 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='318';
2021-05-27 09:02:49.061 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2021-05-27 09:02:49.061 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2021-05-27 09:02:49.061 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2021-05-27 09:02:49.061 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -                                                       
2021-05-27 09:02:49.061 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - FEBS 启动完毕，时间：2021-05-27T09:02:49.061
2021-05-27 09:02:49.063 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-192.168.206.128_8848] [subscribe] brd-sys+DEFAULT_GROUP
2021-05-27 09:02:49.064 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-192.168.206.128_8848] [add-listener] ok, tenant=, dataId=brd-sys, group=DEFAULT_GROUP, cnt=1
2021-05-27 09:02:49.064 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-192.168.206.128_8848] [subscribe] brd-sys-dukzzz.yaml+DEFAULT_GROUP
2021-05-27 09:02:49.064 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-192.168.206.128_8848] [add-listener] ok, tenant=, dataId=brd-sys-dukzzz.yaml, group=DEFAULT_GROUP, cnt=1
2021-05-27 09:02:49.064 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-192.168.206.128_8848] [subscribe] brd-sys.yaml+DEFAULT_GROUP
2021-05-27 09:02:49.064 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-192.168.206.128_8848] [add-listener] ok, tenant=, dataId=brd-sys.yaml, group=DEFAULT_GROUP, cnt=1
2021-05-27 09:06:31.881 febs [com.alibaba.nacos.client.Worker.longPolling.fixed-192.168.206.128_8848] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-192.168.206.128_8848] [polling-resp] config changed. dataId=brd-sys, group=DEFAULT_GROUP
2021-05-27 09:06:31.905 febs [com.alibaba.nacos.client.Worker.longPolling.fixed-192.168.206.128_8848] INFO  c.a.n.client.config.utils.JVMUtil - isMultiInstance:false
2021-05-27 09:06:31.907 febs [com.alibaba.nacos.client.Worker.longPolling.fixed-192.168.206.128_8848] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-192.168.206.128_8848] [data-received] dataId=brd-sys, group=DEFAULT_GROUP, tenant=null, md5=fe50a626c72fe1bcfd06ba21a5af7d66, content=server:
  port: 10021
  tomcat:
    accept-count: 500
    uri-encoding: UTF-8
    min-spare-thr...
2021-05-27 09:06:31.907 febs [com.alibaba.nacos.client.Worker.longPolling.fixed-192.168.206.128_8848] INFO  c.a.n.client.config.impl.CacheData - [fixed-192.168.206.128_8848] [notify-context] dataId=brd-sys, group=DEFAULT_GROUP, md5=fe50a626c72fe1bcfd06ba21a5af7d66
2021-05-27 09:06:32.111 febs [com.alibaba.nacos.client.Worker.longPolling.fixed-192.168.206.128_8848] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-05-27 09:06:32.310 febs [com.alibaba.nacos.client.Worker.longPolling.fixed-192.168.206.128_8848] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-05-27 09:06:32.329 febs [com.alibaba.nacos.client.Worker.longPolling.fixed-192.168.206.128_8848] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-brd-sys-dukzzz.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys,DEFAULT_GROUP'}]
2021-05-27 09:06:32.331 febs [com.alibaba.nacos.client.Worker.longPolling.fixed-192.168.206.128_8848] INFO  o.s.boot.SpringApplication - The following profiles are active: dukzzz
2021-05-27 09:06:32.339 febs [com.alibaba.nacos.client.Worker.longPolling.fixed-192.168.206.128_8848] INFO  o.s.boot.SpringApplication - Started application in 0.428 seconds (JVM running for 233.162)
2021-05-27 09:06:32.446 febs [com.alibaba.nacos.client.Worker.longPolling.fixed-192.168.206.128_8848] INFO  o.s.c.e.event.RefreshEventListener - Refresh keys changed: [spring.redis.password, mybatis-plus.configuration.jdbc-type-for-null]
2021-05-27 09:06:32.446 febs [com.alibaba.nacos.client.Worker.longPolling.fixed-192.168.206.128_8848] INFO  c.a.n.client.config.impl.CacheData - [fixed-192.168.206.128_8848] [notify-ok] dataId=brd-sys, group=DEFAULT_GROUP, md5=fe50a626c72fe1bcfd06ba21a5af7d66, listener=com.alibaba.cloud.nacos.refresh.NacosContextRefresher$1@2510b784 
2021-05-27 09:06:32.446 febs [com.alibaba.nacos.client.Worker.longPolling.fixed-192.168.206.128_8848] INFO  c.a.n.client.config.impl.CacheData - [fixed-192.168.206.128_8848] [notify-listener] time cost=539ms in ClientWorker, dataId=brd-sys, group=DEFAULT_GROUP, md5=fe50a626c72fe1bcfd06ba21a5af7d66, listener=com.alibaba.cloud.nacos.refresh.NacosContextRefresher$1@2510b784 
2021-05-27 09:36:42.520 febs [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-05-27 09:36:43.051 febs [restartedMain] INFO  c.a.n.c.c.i.LocalConfigInfoProcessor - LOCAL_SNAPSHOT_PATH:C:\Users\Dukzzz\nacos\config
2021-05-27 09:36:43.073 febs [restartedMain] INFO  c.a.nacos.client.config.impl.Limiter - limitTime:5.0
2021-05-27 09:36:43.093 febs [restartedMain] INFO  c.a.n.client.config.utils.JVMUtil - isMultiInstance:false
2021-05-27 09:36:43.118 febs [restartedMain] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-brd-sys-dukzzz.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys,DEFAULT_GROUP'}]
2021-05-27 09:36:43.123 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - The following profiles are active: dukzzz
2021-05-27 09:36:44.122 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-05-27 09:36:44.125 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-05-27 09:36:44.178 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 38ms. Found 0 Redis repository interfaces.
2021-05-27 09:36:44.439 febs [restartedMain] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=c33df720-08df-3a1d-b2f9-8753f48f7824
2021-05-27 09:36:44.521 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [com.smart.brd.sys.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$1fe5e3a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:44.636 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:44.719 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$1eafd3ef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:44.727 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:44.731 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:44.774 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [com.smart.brd.sys.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$3cbd8a36] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:45.072 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.smart.brd.sys.common.config.RedisConfig$$EnhancerBySpringCGLIB$$ce1a208a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:45.089 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:45.094 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [com.smart.brd.sys.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:45.138 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:45.145 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [com.smart.brd.sys.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$ed1d745c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:45.148 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:45.154 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$f2e9cfb8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:45.161 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:45.163 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:45.167 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2021-05-27 09:36:45.172 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2021-05-27 09:36:45.312 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2021-05-27 09:36:45.312 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2021-05-27 09:36:45.312 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2021-05-27 09:36:45.312 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2021-05-27 09:36:45.312 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:45.333 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:45.347 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:46.028 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:46.046 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:46.115 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:46.119 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy132] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:46.131 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:46.132 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy133] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:46.137 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [com.smart.brd.sys.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:46.206 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [com.smart.brd.sys.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:46.236 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userTokenServiceImpl' of type [com.smart.brd.sys.system.usertoken.service.impl.UserTokenServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:46.240 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:46.242 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy136] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:46.245 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [com.smart.brd.sys.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:46.269 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:46.270 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy138] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:46.279 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [com.smart.brd.sys.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:46.330 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:46.331 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy140] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:46.333 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [com.smart.brd.sys.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:46.349 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:46.350 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [com.sun.proxy.$Proxy142] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:46.356 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:46.357 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy143] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:46.387 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jedisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:46.464 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:46.485 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [com.smart.brd.sys.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:46.505 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:46.507 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:46.516 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:46.522 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:46.523 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:46.528 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:46.532 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:46.536 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:46.540 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:46.542 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:46.546 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:46.548 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:46.564 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:46.583 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [com.smart.brd.sys.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:46.584 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [com.smart.brd.sys.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:46.584 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [com.smart.brd.sys.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:46.594 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:46.611 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-05-27 09:36:47.013 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 10021 (http)
2021-05-27 09:36:47.020 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-10021"]
2021-05-27 09:36:47.021 febs [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2021-05-27 09:36:47.021 febs [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.31]
2021-05-27 09:36:47.111 febs [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2021-05-27 09:36:47.111 febs [restartedMain] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3959 ms
2021-05-27 09:36:47.197 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-05-27 09:36:47.204 febs [restartedMain] INFO  c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@6d10baec
2021-05-27 09:36:47.732 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2021-05-27 09:36:47.741 febs [restartedMain] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-05-27 09:36:47.741 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.2 created.
2021-05-27 09:36:47.742 febs [restartedMain] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2021-05-27 09:36:47.743 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-05-27 09:36:47.743 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2021-05-27 09:36:47.743 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.2
2021-05-27 09:36:47.743 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@7f453f99
2021-05-27 09:36:47.791 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:47 | 耗时 0 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2021-05-27 09:36:48.079 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2021-05-27 09:36:48.120 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-05-27 09:36:48.493 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2021-05-27 09:36:48.509 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-05-27 09:36:48.510 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Environment :null
2021-05-27 09:36:48.510 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-05-27 09:36:49.467 febs [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-05-27 09:36:49.556 febs [restartedMain] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2021-05-27 09:36:49.556 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2021-05-27 09:36:49.570 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-10021"]
2021-05-27 09:36:49.583 febs [scheduling-1] INFO  c.s.brd.sys.common.task.CacheTask - delete expired user
2021-05-27 09:36:49.591 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 10021 (http) with context path ''
2021-05-27 09:36:49.594 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"192.168.0.101","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":10021,"scheduled":false,"serviceName":"DEFAULT_GROUP@@brd-sys","stopped":false,"weight":1.0} to beat map.
2021-05-27 09:36:49.656 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [REGISTER-SERVICE] public registering service DEFAULT_GROUP@@brd-sys with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"192.168.0.101","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":10021,"weight":1.0}
2021-05-27 09:36:49.665 febs [restartedMain] INFO  c.a.c.n.r.NacosServiceRegistry - nacos registry, DEFAULT_GROUP brd-sys 192.168.0.101:10021 register finished
2021-05-27 09:36:49.844 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - Started BrdSysApplication in 8.448 seconds (JVM running for 9.501)
2021-05-27 09:36:49.848 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - Redis连接中 ······
2021-05-27 09:36:49.849 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存初始化 ······
2021-05-27 09:36:49.849 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存用户数据 ······
2021-05-27 09:36:49.873 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:49 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,username,password,pass_time,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user;
2021-05-27 09:36:49.883 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:49 | 耗时 1 ms | SQL 语句：
SELECT u.*, d.dept_id deptId, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sysadmin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-05-27 09:36:49.941 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:49 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin';
2021-05-27 09:36:49.952 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:49 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'sysadmin' and m.perms is not null and m.perms <> '';
2021-05-27 09:36:49.963 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:49 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='-1';
2021-05-27 09:36:49.965 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:49 | 耗时 0 ms | SQL 语句：
SELECT u.*, d.dept_id deptId, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-05-27 09:36:49.968 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:49 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin1';
2021-05-27 09:36:49.971 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:49 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin1' and m.perms is not null and m.perms <> '';
2021-05-27 09:36:49.974 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:49 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='240';
2021-05-27 09:36:49.978 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:49 | 耗时 0 ms | SQL 语句：
SELECT u.*, d.dept_id deptId, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin2' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-05-27 09:36:49.980 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:49 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin2';
2021-05-27 09:36:49.983 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:49 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin2' and m.perms is not null and m.perms <> '';
2021-05-27 09:36:49.986 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:49 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='267';
2021-05-27 09:36:49.988 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:49 | 耗时 0 ms | SQL 语句：
SELECT u.*, d.dept_id deptId, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'danong1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-05-27 09:36:49.992 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:49 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'danong1';
2021-05-27 09:36:49.994 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:49 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'danong1' and m.perms is not null and m.perms <> '';
2021-05-27 09:36:49.997 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:49 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='293';
2021-05-27 09:36:50.000 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:49 | 耗时 0 ms | SQL 语句：
SELECT u.*, d.dept_id deptId, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'dny18g1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-05-27 09:36:50.002 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:50 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'dny18g1';
2021-05-27 09:36:50.005 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:50 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'dny18g1' and m.perms is not null and m.perms <> '';
2021-05-27 09:36:50.007 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:50 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='294';
2021-05-27 09:36:50.009 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:50 | 耗时 0 ms | SQL 语句：
SELECT u.*, d.dept_id deptId, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'dn1wh1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-05-27 09:36:50.012 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:50 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'dn1wh1';
2021-05-27 09:36:50.014 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:50 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'dn1wh1' and m.perms is not null and m.perms <> '';
2021-05-27 09:36:50.016 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:50 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='296';
2021-05-27 09:36:50.018 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:50 | 耗时 0 ms | SQL 语句：
SELECT u.*, d.dept_id deptId, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'dn1yy1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-05-27 09:36:50.021 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:50 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'dn1yy1';
2021-05-27 09:36:50.024 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:50 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'dn1yy1' and m.perms is not null and m.perms <> '';
2021-05-27 09:36:50.026 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:50 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='306';
2021-05-27 09:36:50.028 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:50 | 耗时 0 ms | SQL 语句：
SELECT u.*, d.dept_id deptId, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'dny17g1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-05-27 09:36:50.030 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:50 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'dny17g1';
2021-05-27 09:36:50.033 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:50 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'dny17g1' and m.perms is not null and m.perms <> '';
2021-05-27 09:36:50.035 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:50 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='308';
2021-05-27 09:36:50.038 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:50 | 耗时 0 ms | SQL 语句：
SELECT u.*, d.dept_id deptId, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'dny17y1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-05-27 09:36:50.040 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:50 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'dny17y1';
2021-05-27 09:36:50.042 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:50 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'dny17y1' and m.perms is not null and m.perms <> '';
2021-05-27 09:36:50.044 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:50 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='309';
2021-05-27 09:36:50.047 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:50 | 耗时 0 ms | SQL 语句：
SELECT u.*, d.dept_id deptId, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'dny19g1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-05-27 09:36:50.049 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:50 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'dny19g1';
2021-05-27 09:36:50.052 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:50 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'dny19g1' and m.perms is not null and m.perms <> '';
2021-05-27 09:36:50.055 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:50 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='310';
2021-05-27 09:36:50.058 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:50 | 耗时 0 ms | SQL 语句：
SELECT u.*, d.dept_id deptId, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'dny19y1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-05-27 09:36:50.060 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:50 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'dny19y1';
2021-05-27 09:36:50.063 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:50 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'dny19y1' and m.perms is not null and m.perms <> '';
2021-05-27 09:36:50.066 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:50 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='311';
2021-05-27 09:36:50.068 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:50 | 耗时 0 ms | SQL 语句：
SELECT u.*, d.dept_id deptId, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'dny20g1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-05-27 09:36:50.070 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:50 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'dny20g1';
2021-05-27 09:36:50.074 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:50 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'dny20g1' and m.perms is not null and m.perms <> '';
2021-05-27 09:36:50.076 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:50 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='313';
2021-05-27 09:36:50.078 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:50 | 耗时 0 ms | SQL 语句：
SELECT u.*, d.dept_id deptId, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'gaojiguanliyuan' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-05-27 09:36:50.080 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:50 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'gaojiguanliyuan';
2021-05-27 09:36:50.083 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:50 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'gaojiguanliyuan' and m.perms is not null and m.perms <> '';
2021-05-27 09:36:50.086 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:50 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='315';
2021-05-27 09:36:50.088 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:50 | 耗时 0 ms | SQL 语句：
SELECT u.*, d.dept_id deptId, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin002' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-05-27 09:36:50.091 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:50 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin002';
2021-05-27 09:36:50.094 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:50 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin002' and m.perms is not null and m.perms <> '';
2021-05-27 09:36:50.096 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:50 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='317';
2021-05-27 09:36:50.098 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:50 | 耗时 0 ms | SQL 语句：
SELECT u.*, d.dept_id deptId, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin003' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-05-27 09:36:50.101 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:50 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin003';
2021-05-27 09:36:50.104 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:50 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin003' and m.perms is not null and m.perms <> '';
2021-05-27 09:36:50.106 febs [restartedMain] INFO  p6spy - 2021-05-27 09:36:50 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='318';
2021-05-27 09:36:50.108 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2021-05-27 09:36:50.108 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2021-05-27 09:36:50.108 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2021-05-27 09:36:50.108 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -                                                       
2021-05-27 09:36:50.108 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - FEBS 启动完毕，时间：2021-05-27T09:36:50.108
2021-05-27 09:36:50.117 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-192.168.206.128_8848] [subscribe] brd-sys+DEFAULT_GROUP
2021-05-27 09:36:50.117 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-192.168.206.128_8848] [add-listener] ok, tenant=, dataId=brd-sys, group=DEFAULT_GROUP, cnt=1
2021-05-27 09:36:50.117 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-192.168.206.128_8848] [subscribe] brd-sys-dukzzz.yaml+DEFAULT_GROUP
2021-05-27 09:36:50.117 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-192.168.206.128_8848] [add-listener] ok, tenant=, dataId=brd-sys-dukzzz.yaml, group=DEFAULT_GROUP, cnt=1
2021-05-27 09:36:50.118 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-192.168.206.128_8848] [subscribe] brd-sys.yaml+DEFAULT_GROUP
2021-05-27 09:36:50.118 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-192.168.206.128_8848] [add-listener] ok, tenant=, dataId=brd-sys.yaml, group=DEFAULT_GROUP, cnt=1
