2021-04-16 20:44:22.955 febs [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-04-16 20:44:24.328 febs [restartedMain] INFO  c.a.n.c.c.i.LocalConfigInfoProcessor - LOCAL_SNAPSHOT_PATH:C:\Users\Dukzzz\nacos\config
2021-04-16 20:44:24.346 febs [restartedMain] INFO  c.a.nacos.client.config.impl.Limiter - limitTime:5.0
2021-04-16 20:44:25.287 febs [restartedMain] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-brd-sys2-local.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys2.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys2,DEFAULT_GROUP'}]
2021-04-16 20:44:25.291 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - The following profiles are active: local
2021-04-16 20:44:27.343 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-04-16 20:44:27.346 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-04-16 20:44:27.389 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 31ms. Found 0 Redis repository interfaces.
2021-04-16 20:44:27.631 febs [restartedMain] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=507b0484-ab13-314f-bbd9-b7106f196c57
2021-04-16 20:44:27.778 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [com.smart.brd.sys.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$6a061d3a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:44:27.844 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:44:27.920 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$86b792ef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:44:27.928 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:44:27.931 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:44:27.967 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [com.smart.brd.sys.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$a4c54936] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:44:28.204 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.smart.brd.sys.common.config.RedisConfig$$EnhancerBySpringCGLIB$$3621df8a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:44:28.220 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:44:28.225 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [com.smart.brd.sys.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:44:28.264 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:44:28.270 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [com.smart.brd.sys.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$5525335c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:44:28.274 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:44:28.280 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$5af18eb8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:44:28.286 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:44:28.288 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:44:28.291 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2021-04-16 20:44:28.296 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2021-04-16 20:44:28.917 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2021-04-16 20:44:28.918 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2021-04-16 20:44:28.918 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2021-04-16 20:44:28.918 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2021-04-16 20:44:28.918 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:44:28.930 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:44:28.938 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:44:29.431 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:44:29.437 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:44:29.474 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:44:29.479 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy145] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:44:29.488 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:44:29.489 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy146] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:44:29.492 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [com.smart.brd.sys.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:44:29.533 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [com.smart.brd.sys.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:44:29.554 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userTokenServiceImpl' of type [com.smart.brd.sys.system.usertoken.service.impl.UserTokenServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:44:29.558 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:44:29.560 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy149] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:44:29.563 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [com.smart.brd.sys.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:44:29.585 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:44:29.585 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy151] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:44:29.591 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [com.smart.brd.sys.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:44:29.638 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:44:29.639 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy153] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:44:29.642 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [com.smart.brd.sys.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:44:29.661 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:44:29.662 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [com.sun.proxy.$Proxy155] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:44:29.670 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:44:29.671 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy156] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:44:29.675 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [com.smart.brd.sys.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:44:29.699 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:44:29.701 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:44:29.703 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:44:29.707 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:44:29.710 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:44:29.714 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:44:29.716 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:44:29.720 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:44:29.727 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:44:29.730 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:44:29.735 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:44:29.737 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:44:29.756 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:44:29.777 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [com.smart.brd.sys.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:44:29.777 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [com.smart.brd.sys.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:44:29.777 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [com.smart.brd.sys.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:44:29.799 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:44:29.817 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:44:30.205 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 11101 (http)
2021-04-16 20:44:30.213 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-11101"]
2021-04-16 20:44:30.214 febs [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2021-04-16 20:44:30.214 febs [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.31]
2021-04-16 20:44:30.305 febs [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2021-04-16 20:44:30.305 febs [restartedMain] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4996 ms
2021-04-16 20:44:30.401 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-04-16 20:44:30.409 febs [restartedMain] INFO  c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@363e304
2021-04-16 20:44:31.017 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2021-04-16 20:44:31.027 febs [restartedMain] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-16 20:44:31.027 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.2 created.
2021-04-16 20:44:31.028 febs [restartedMain] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2021-04-16 20:44:31.028 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-16 20:44:31.028 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2021-04-16 20:44:31.028 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.2
2021-04-16 20:44:31.028 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@7c72a1d8
2021-04-16 20:44:31.182 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:31 | 耗时 63 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2021-04-16 20:44:32.212 febs [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-04-16 20:44:32.336 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2021-04-16 20:44:32.377 febs [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2021-04-16 20:44:32.403 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-04-16 20:44:32.647 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2021-04-16 20:44:32.661 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-04-16 20:44:32.662 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Environment :null
2021-04-16 20:44:32.662 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-04-16 20:44:33.443 febs [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2021-04-16 20:44:33.452 febs [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2021-04-16 20:44:33.485 febs [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2021-04-16 20:44:33.497 febs [restartedMain] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2021-04-16 20:44:33.497 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2021-04-16 20:44:33.510 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-11101"]
2021-04-16 20:44:33.532 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 11101 (http) with context path ''
2021-04-16 20:44:33.535 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"192.168.0.4","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":11101,"scheduled":false,"serviceName":"DEFAULT_GROUP@@brd-sys2","stopped":false,"weight":1.0} to beat map.
2021-04-16 20:44:33.587 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [REGISTER-SERVICE] public registering service DEFAULT_GROUP@@brd-sys2 with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"192.168.0.4","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":11101,"weight":1.0}
2021-04-16 20:44:33.792 febs [restartedMain] INFO  c.a.c.n.r.NacosServiceRegistry - nacos registry, DEFAULT_GROUP brd-sys2 192.168.0.4:11101 register finished
2021-04-16 20:44:33.831 febs [scheduling-1] INFO  c.s.brd.sys.common.task.CacheTask - delete expired user
2021-04-16 20:44:33.915 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - Started BrdSysApplication in 12.562 seconds (JVM running for 14.724)
2021-04-16 20:44:33.919 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - Redis连接中 ······
2021-04-16 20:44:33.993 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存初始化 ······
2021-04-16 20:44:33.993 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存用户数据 ······
2021-04-16 20:44:34.268 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:34 | 耗时 127 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user;
2021-04-16 20:44:34.450 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:34 | 耗时 167 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sysadmin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-16 20:44:34.767 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:34 | 耗时 68 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin';
2021-04-16 20:44:35.072 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:35 | 耗时 64 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'sysadmin' and m.perms is not null and m.perms <> '';
2021-04-16 20:44:35.371 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:35 | 耗时 69 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='-1';
2021-04-16 20:44:35.513 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:35 | 耗时 139 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-16 20:44:35.727 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:35 | 耗时 37 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin1';
2021-04-16 20:44:35.932 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:35 | 耗时 133 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin1' and m.perms is not null and m.perms <> '';
2021-04-16 20:44:36.177 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:36 | 耗时 48 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='240';
2021-04-16 20:44:36.520 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:36 | 耗时 153 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'danong1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-16 20:44:36.705 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:36 | 耗时 38 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'danong1';
2021-04-16 20:44:36.891 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:36 | 耗时 113 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'danong1' and m.perms is not null and m.perms <> '';
2021-04-16 20:44:37.101 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:37 | 耗时 126 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='241';
2021-04-16 20:44:37.502 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:37 | 耗时 200 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yangguan8' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-16 20:44:37.750 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:37 | 耗时 75 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yangguan8';
2021-04-16 20:44:38.053 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:38 | 耗时 115 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yangguan8' and m.perms is not null and m.perms <> '';
2021-04-16 20:44:38.238 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:38 | 耗时 108 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='242';
2021-04-16 20:44:38.392 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:38 | 耗时 77 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yangguan2' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-16 20:44:38.547 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:38 | 耗时 40 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yangguan2';
2021-04-16 20:44:38.875 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:38 | 耗时 74 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yangguan2' and m.perms is not null and m.perms <> '';
2021-04-16 20:44:39.075 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:39 | 耗时 52 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='243';
2021-04-16 20:44:39.431 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:39 | 耗时 159 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yangzhiyuan21' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-16 20:44:39.620 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:39 | 耗时 41 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yangzhiyuan21';
2021-04-16 20:44:39.803 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:39 | 耗时 109 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yangzhiyuan21' and m.perms is not null and m.perms <> '';
2021-04-16 20:44:39.849 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:39 | 耗时 42 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='244';
2021-04-16 20:44:39.997 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:39 | 耗时 72 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yangzhiyuan22' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-16 20:44:40.164 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:40 | 耗时 36 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yangzhiyuan22';
2021-04-16 20:44:40.379 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:40 | 耗时 143 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yangzhiyuan22' and m.perms is not null and m.perms <> '';
2021-04-16 20:44:40.419 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:40 | 耗时 38 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='245';
2021-04-16 20:44:40.573 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:40 | 耗时 71 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yangguan3' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-16 20:44:40.733 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:40 | 耗时 35 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yangguan3';
2021-04-16 20:44:40.917 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:40 | 耗时 108 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yangguan3' and m.perms is not null and m.perms <> '';
2021-04-16 20:44:41.107 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:41 | 耗时 118 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='246';
2021-04-16 20:44:41.421 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:41 | 耗时 152 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yangzhiyuan11' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-16 20:44:41.602 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:41 | 耗时 36 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yangzhiyuan11';
2021-04-16 20:44:41.787 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:41 | 耗时 110 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yangzhiyuan11' and m.perms is not null and m.perms <> '';
2021-04-16 20:44:41.828 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:41 | 耗时 37 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='247';
2021-04-16 20:44:41.974 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:41 | 耗时 71 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yangzhiyuan12' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-16 20:44:42.132 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:42 | 耗时 37 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yangzhiyuan12';
2021-04-16 20:44:42.318 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:42 | 耗时 113 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yangzhiyuan12' and m.perms is not null and m.perms <> '';
2021-04-16 20:44:42.359 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:42 | 耗时 37 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='248';
2021-04-16 20:44:42.664 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:42 | 耗时 146 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yangzhiyuan31' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-16 20:44:42.887 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:42 | 耗时 74 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yangzhiyuan31';
2021-04-16 20:44:43.227 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:43 | 耗时 136 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yangzhiyuan31' and m.perms is not null and m.perms <> '';
2021-04-16 20:44:43.264 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:43 | 耗时 35 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='249';
2021-04-16 20:44:43.568 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:43 | 耗时 152 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yangzhiyuan32' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-16 20:44:43.754 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:43 | 耗时 36 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yangzhiyuan32';
2021-04-16 20:44:43.973 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:43 | 耗时 112 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yangzhiyuan32' and m.perms is not null and m.perms <> '';
2021-04-16 20:44:44.049 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:44 | 耗时 75 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='250';
2021-04-16 20:44:44.353 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:44 | 耗时 147 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yangguan4' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-16 20:44:44.534 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:44 | 耗时 37 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yangguan4';
2021-04-16 20:44:44.720 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:44 | 耗时 108 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yangguan4' and m.perms is not null and m.perms <> '';
2021-04-16 20:44:44.911 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:44 | 耗时 112 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='251';
2021-04-16 20:44:45.114 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:45 | 耗时 119 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yangzhiyuan41' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-16 20:44:45.619 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:45 | 耗时 321 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yangzhiyuan41';
2021-04-16 20:44:45.914 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:45 | 耗时 78 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yangzhiyuan41' and m.perms is not null and m.perms <> '';
2021-04-16 20:44:45.954 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:45 | 耗时 38 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='252';
2021-04-16 20:44:46.101 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:46 | 耗时 71 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'demo' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-16 20:44:46.267 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:46 | 耗时 35 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'demo';
2021-04-16 20:44:46.418 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:46 | 耗时 78 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'demo' and m.perms is not null and m.perms <> '';
2021-04-16 20:44:46.594 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:46 | 耗时 38 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='253';
2021-04-16 20:44:46.891 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:46 | 耗时 143 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengchengdemo' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-16 20:44:47.082 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:47 | 耗时 39 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengchengdemo';
2021-04-16 20:44:47.264 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:47 | 耗时 108 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengchengdemo' and m.perms is not null and m.perms <> '';
2021-04-16 20:44:47.450 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:47 | 耗时 110 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='254';
2021-04-16 20:44:47.601 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:47 | 耗时 72 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sanduo' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-16 20:44:47.776 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:47 | 耗时 54 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sanduo';
2021-04-16 20:44:47.960 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:47 | 耗时 40 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'sanduo' and m.perms is not null and m.perms <> '';
2021-04-16 20:44:48.027 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:48 | 耗时 66 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='255';
2021-04-16 20:44:48.293 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:48 | 耗时 72 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chenfeng' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-16 20:44:48.468 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:48 | 耗时 38 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chenfeng';
2021-04-16 20:44:48.664 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:48 | 耗时 115 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chenfeng' and m.perms is not null and m.perms <> '';
2021-04-16 20:44:48.700 febs [restartedMain] INFO  p6spy - 2021-04-16 20:44:48 | 耗时 35 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='256';
2021-04-16 20:44:48.772 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2021-04-16 20:44:48.773 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2021-04-16 20:44:48.773 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2021-04-16 20:44:48.773 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -                                                       
2021-04-16 20:44:48.773 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - FEBS 启动完毕，时间：2021-04-16T20:44:48.773
2021-04-16 20:44:48.775 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2+DEFAULT_GROUP
2021-04-16 20:44:48.776 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2, group=DEFAULT_GROUP, cnt=1
2021-04-16 20:44:48.776 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2.yaml+DEFAULT_GROUP
2021-04-16 20:44:48.776 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2.yaml, group=DEFAULT_GROUP, cnt=1
2021-04-16 20:44:48.776 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2-local.yaml+DEFAULT_GROUP
2021-04-16 20:44:48.776 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2-local.yaml, group=DEFAULT_GROUP, cnt=1
2021-04-16 20:51:55.205 febs [Thread-3] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2021-04-16 20:51:55.214 febs [Thread-3] INFO  c.a.c.n.r.NacosServiceRegistry - De-registering from Nacos Server now...
2021-04-16 20:51:55.214 febs [Thread-3] INFO  com.alibaba.nacos.client.naming - [BEAT] removing beat: DEFAULT_GROUP@@brd-sys2:192.168.0.4:11101 from beat map.
2021-04-16 20:51:55.215 febs [Thread-3] INFO  com.alibaba.nacos.client.naming - [DEREGISTER-SERVICE] public deregistering service DEFAULT_GROUP@@brd-sys2 with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"instanceIdGenerator":"simple","ip":"192.168.0.4","ipDeleteTimeout":30000,"metadata":{},"port":11101,"weight":1.0}
2021-04-16 20:51:55.449 febs [Thread-3] INFO  c.a.c.n.r.NacosServiceRegistry - De-registration finished.
2021-04-16 20:51:55.457 febs [Thread-3] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2021-04-16 20:51:55.464 febs [Thread-3] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2021-04-16 20:51:55.470 febs [Thread-3] INFO  o.s.j.e.a.AnnotationMBeanExporter - Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2021-04-16 20:51:55.474 febs [Thread-3] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2021-04-16 20:51:55.474 febs [Thread-3] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
2021-04-16 20:51:55.474 febs [Thread-3] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2021-04-16 20:51:55.475 febs [Thread-3] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-16 20:51:55.478 febs [Thread-3] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2021-04-16 20:51:55.479 febs [Thread-3] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2021-04-16 20:51:55.482 febs [Thread-3] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2021-04-16 20:56:21.748 febs [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-04-16 20:56:23.120 febs [restartedMain] INFO  c.a.n.c.c.i.LocalConfigInfoProcessor - LOCAL_SNAPSHOT_PATH:C:\Users\Dukzzz\nacos\config
2021-04-16 20:56:23.137 febs [restartedMain] INFO  c.a.nacos.client.config.impl.Limiter - limitTime:5.0
2021-04-16 20:56:23.977 febs [restartedMain] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-brd-sys2-local.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys2.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys2,DEFAULT_GROUP'}]
2021-04-16 20:56:23.980 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - The following profiles are active: local
2021-04-16 20:56:25.430 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-04-16 20:56:25.433 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-04-16 20:56:25.471 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 27ms. Found 0 Redis repository interfaces.
2021-04-16 20:56:25.703 febs [restartedMain] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=507b0484-ab13-314f-bbd9-b7106f196c57
2021-04-16 20:56:25.849 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [com.smart.brd.sys.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$61ef41cc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:56:25.912 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:56:25.976 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$7ea0b781] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:56:25.986 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:56:25.989 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:56:26.023 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [com.smart.brd.sys.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$9cae6dc8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:56:26.256 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.smart.brd.sys.common.config.RedisConfig$$EnhancerBySpringCGLIB$$2e0b041c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:56:26.271 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:56:26.276 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [com.smart.brd.sys.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:56:26.315 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:56:26.322 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [com.smart.brd.sys.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$4d0e57ee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:56:26.325 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:56:26.330 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$52dab34a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:56:26.337 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:56:26.338 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:56:26.342 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2021-04-16 20:56:26.346 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2021-04-16 20:56:27.010 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2021-04-16 20:56:27.010 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2021-04-16 20:56:27.010 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2021-04-16 20:56:27.010 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2021-04-16 20:56:27.010 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:56:27.021 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:56:27.029 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:56:27.421 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:56:27.428 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:56:27.457 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:56:27.460 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy145] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:56:27.469 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:56:27.470 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy146] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:56:27.473 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [com.smart.brd.sys.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:56:27.508 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [com.smart.brd.sys.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:56:27.525 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userTokenServiceImpl' of type [com.smart.brd.sys.system.usertoken.service.impl.UserTokenServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:56:27.528 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:56:27.529 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy149] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:56:27.534 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [com.smart.brd.sys.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:56:27.554 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:56:27.555 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy151] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:56:27.560 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [com.smart.brd.sys.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:56:27.605 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:56:27.606 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy153] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:56:27.608 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [com.smart.brd.sys.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:56:27.626 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:56:27.627 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [com.sun.proxy.$Proxy155] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:56:27.634 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:56:27.635 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy156] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:56:27.639 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [com.smart.brd.sys.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:56:27.659 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:56:27.660 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:56:27.663 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:56:27.666 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:56:27.668 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:56:27.671 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:56:27.673 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:56:27.678 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:56:27.683 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:56:27.686 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:56:27.690 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:56:27.692 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:56:27.707 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:56:27.728 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [com.smart.brd.sys.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:56:27.728 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [com.smart.brd.sys.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:56:27.728 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [com.smart.brd.sys.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:56:27.740 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:56:27.758 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-16 20:56:28.126 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 11101 (http)
2021-04-16 20:56:28.134 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-11101"]
2021-04-16 20:56:28.134 febs [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2021-04-16 20:56:28.134 febs [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.31]
2021-04-16 20:56:28.226 febs [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2021-04-16 20:56:28.226 febs [restartedMain] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4223 ms
2021-04-16 20:56:28.317 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-04-16 20:56:28.325 febs [restartedMain] INFO  c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@2b08081d
2021-04-16 20:56:28.885 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2021-04-16 20:56:28.893 febs [restartedMain] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-16 20:56:28.893 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.2 created.
2021-04-16 20:56:28.894 febs [restartedMain] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2021-04-16 20:56:28.894 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-16 20:56:28.894 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2021-04-16 20:56:28.894 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.2
2021-04-16 20:56:28.894 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@32555e62
2021-04-16 20:56:29.124 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:29 | 耗时 103 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2021-04-16 20:56:30.050 febs [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-04-16 20:56:30.175 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2021-04-16 20:56:30.216 febs [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2021-04-16 20:56:30.242 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-04-16 20:56:30.473 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2021-04-16 20:56:30.487 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-04-16 20:56:30.487 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Environment :null
2021-04-16 20:56:30.487 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-04-16 20:56:31.195 febs [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2021-04-16 20:56:31.203 febs [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2021-04-16 20:56:31.237 febs [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2021-04-16 20:56:31.248 febs [restartedMain] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2021-04-16 20:56:31.248 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2021-04-16 20:56:31.263 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-11101"]
2021-04-16 20:56:31.288 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 11101 (http) with context path ''
2021-04-16 20:56:31.290 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"192.168.0.4","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":11101,"scheduled":false,"serviceName":"DEFAULT_GROUP@@brd-sys2","stopped":false,"weight":1.0} to beat map.
2021-04-16 20:56:31.346 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [REGISTER-SERVICE] public registering service DEFAULT_GROUP@@brd-sys2 with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"192.168.0.4","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":11101,"weight":1.0}
2021-04-16 20:56:31.545 febs [restartedMain] INFO  c.a.c.n.r.NacosServiceRegistry - nacos registry, DEFAULT_GROUP brd-sys2 192.168.0.4:11101 register finished
2021-04-16 20:56:31.579 febs [scheduling-1] INFO  c.s.brd.sys.common.task.CacheTask - delete expired user
2021-04-16 20:56:31.682 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - Started BrdSysApplication in 11.657 seconds (JVM running for 13.786)
2021-04-16 20:56:31.685 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - Redis连接中 ······
2021-04-16 20:56:31.760 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存初始化 ······
2021-04-16 20:56:31.760 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存用户数据 ······
2021-04-16 20:56:31.981 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:31 | 耗时 152 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user;
2021-04-16 20:56:32.117 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:32 | 耗时 124 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sysadmin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-16 20:56:32.459 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:32 | 耗时 37 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin';
2021-04-16 20:56:32.660 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:32 | 耗时 36 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'sysadmin' and m.perms is not null and m.perms <> '';
2021-04-16 20:56:32.868 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:32 | 耗时 122 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='-1';
2021-04-16 20:56:33.021 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:33 | 耗时 150 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-16 20:56:33.208 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:33 | 耗时 35 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin1';
2021-04-16 20:56:33.388 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:33 | 耗时 107 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin1' and m.perms is not null and m.perms <> '';
2021-04-16 20:56:33.605 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:33 | 耗时 134 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='240';
2021-04-16 20:56:33.755 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:33 | 耗时 71 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'danong1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-16 20:56:33.915 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:33 | 耗时 38 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'danong1';
2021-04-16 20:56:34.105 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:34 | 耗时 107 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'danong1' and m.perms is not null and m.perms <> '';
2021-04-16 20:56:34.299 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:34 | 耗时 116 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='241';
2021-04-16 20:56:34.514 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:34 | 耗时 105 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yangguan8' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-16 20:56:34.733 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:34 | 耗时 35 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yangguan8';
2021-04-16 20:56:34.923 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:34 | 耗时 111 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yangguan8' and m.perms is not null and m.perms <> '';
2021-04-16 20:56:35.120 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:35 | 耗时 36 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='242';
2021-04-16 20:56:35.315 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:35 | 耗时 109 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yangguan2' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-16 20:56:35.500 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:35 | 耗时 35 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yangguan2';
2021-04-16 20:56:35.684 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:35 | 耗时 111 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yangguan2' and m.perms is not null and m.perms <> '';
2021-04-16 20:56:35.880 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:35 | 耗时 121 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='243';
2021-04-16 20:56:36.362 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:36 | 耗时 390 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yangzhiyuan21' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-16 20:56:36.660 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:36 | 耗时 72 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yangzhiyuan21';
2021-04-16 20:56:36.863 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:36 | 耗时 35 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yangzhiyuan21' and m.perms is not null and m.perms <> '';
2021-04-16 20:56:36.899 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:36 | 耗时 35 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='244';
2021-04-16 20:56:37.200 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:37 | 耗时 148 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yangzhiyuan22' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-16 20:56:37.478 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:37 | 耗时 81 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yangzhiyuan22';
2021-04-16 20:56:37.666 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:37 | 耗时 116 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yangzhiyuan22' and m.perms is not null and m.perms <> '';
2021-04-16 20:56:37.703 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:37 | 耗时 36 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='245';
2021-04-16 20:56:37.854 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:37 | 耗时 69 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yangguan3' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-16 20:56:38.021 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:38 | 耗时 36 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yangguan3';
2021-04-16 20:56:38.216 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:38 | 耗时 121 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yangguan3' and m.perms is not null and m.perms <> '';
2021-04-16 20:56:38.415 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:38 | 耗时 112 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='246';
2021-04-16 20:56:38.781 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:38 | 耗时 190 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yangzhiyuan11' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-16 20:56:38.996 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:38 | 耗时 42 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yangzhiyuan11';
2021-04-16 20:56:39.192 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:39 | 耗时 121 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yangzhiyuan11' and m.perms is not null and m.perms <> '';
2021-04-16 20:56:39.240 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:39 | 耗时 45 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='247';
2021-04-16 20:56:39.623 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:39 | 耗时 214 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yangzhiyuan12' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-16 20:56:39.933 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:39 | 耗时 124 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yangzhiyuan12';
2021-04-16 20:56:40.150 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:40 | 耗时 129 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yangzhiyuan12' and m.perms is not null and m.perms <> '';
2021-04-16 20:56:40.197 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:40 | 耗时 46 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='248';
2021-04-16 20:56:40.350 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:40 | 耗时 75 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yangzhiyuan31' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-16 20:56:40.518 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:40 | 耗时 35 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yangzhiyuan31';
2021-04-16 20:56:40.703 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:40 | 耗时 110 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yangzhiyuan31' and m.perms is not null and m.perms <> '';
2021-04-16 20:56:40.739 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:40 | 耗时 35 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='249';
2021-04-16 20:56:40.889 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:40 | 耗时 77 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yangzhiyuan32' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-16 20:56:41.070 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:41 | 耗时 61 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yangzhiyuan32';
2021-04-16 20:56:41.265 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:41 | 耗时 36 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yangzhiyuan32' and m.perms is not null and m.perms <> '';
2021-04-16 20:56:41.302 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:41 | 耗时 36 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='250';
2021-04-16 20:56:41.604 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:41 | 耗时 148 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yangguan4' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-16 20:56:41.902 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:41 | 耗时 80 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yangguan4';
2021-04-16 20:56:42.136 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:42 | 耗时 38 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yangguan4' and m.perms is not null and m.perms <> '';
2021-04-16 20:56:42.332 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:42 | 耗时 111 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='251';
2021-04-16 20:56:42.496 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:42 | 耗时 82 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yangzhiyuan41' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-16 20:56:42.660 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:42 | 耗时 38 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yangzhiyuan41';
2021-04-16 20:56:42.859 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:42 | 耗时 119 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yangzhiyuan41' and m.perms is not null and m.perms <> '';
2021-04-16 20:56:42.900 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:42 | 耗时 38 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='252';
2021-04-16 20:56:43.082 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:43 | 耗时 88 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'demo' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-16 20:56:43.228 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:43 | 耗时 35 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'demo';
2021-04-16 20:56:43.444 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:43 | 耗时 42 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'demo' and m.perms is not null and m.perms <> '';
2021-04-16 20:56:43.644 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:43 | 耗时 36 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='253';
2021-04-16 20:56:43.796 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:43 | 耗时 71 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengchengdemo' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-16 20:56:43.963 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:43 | 耗时 37 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengchengdemo';
2021-04-16 20:56:44.155 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:44 | 耗时 118 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengchengdemo' and m.perms is not null and m.perms <> '';
2021-04-16 20:56:44.369 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:44 | 耗时 35 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='254';
2021-04-16 20:56:44.526 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:44 | 耗时 77 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sanduo' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-16 20:56:44.686 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:44 | 耗时 35 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sanduo';
2021-04-16 20:56:44.872 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:44 | 耗时 73 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'sanduo' and m.perms is not null and m.perms <> '';
2021-04-16 20:56:44.949 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:44 | 耗时 74 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='255';
2021-04-16 20:56:45.247 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:45 | 耗时 152 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chenfeng' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-16 20:56:45.437 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:45 | 耗时 36 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chenfeng';
2021-04-16 20:56:45.628 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:45 | 耗时 119 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chenfeng' and m.perms is not null and m.perms <> '';
2021-04-16 20:56:45.665 febs [restartedMain] INFO  p6spy - 2021-04-16 20:56:45 | 耗时 36 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='256';
2021-04-16 20:56:45.761 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2021-04-16 20:56:45.761 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2021-04-16 20:56:45.762 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2021-04-16 20:56:45.762 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -                                                       
2021-04-16 20:56:45.762 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - FEBS 启动完毕，时间：2021-04-16T20:56:45.762
2021-04-16 20:56:45.766 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2+DEFAULT_GROUP
2021-04-16 20:56:45.766 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2, group=DEFAULT_GROUP, cnt=1
2021-04-16 20:56:45.766 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2.yaml+DEFAULT_GROUP
2021-04-16 20:56:45.766 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2.yaml, group=DEFAULT_GROUP, cnt=1
2021-04-16 20:56:45.767 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2-local.yaml+DEFAULT_GROUP
2021-04-16 20:56:45.767 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2-local.yaml, group=DEFAULT_GROUP, cnt=1
2021-04-16 20:58:30.329 febs [http-nio-11101-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-04-16 20:58:30.329 febs [http-nio-11101-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2021-04-16 20:58:30.344 febs [http-nio-11101-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 15 ms
2021-04-16 20:58:37.787 febs [http-nio-11101-exec-2] INFO  c.s.b.sys.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2021-04-16 20:58:38.713 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-04-16 20:58:38 | 耗时 73 ms | SQL 语句：
UPDATE t_user SET last_login_time='2021-04-16T20:58:38.622+0800', user_type=0 WHERE username = 'yangguan8';
2021-04-16 20:58:38.873 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-04-16 20:58:38 | 耗时 158 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yangguan8' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-16 20:58:39.238 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-04-16 20:58:39 | 耗时 117 ms | SQL 语句：
SELECT DEPT_ID,parent_id,type,dept_name,parent_id_name,order_num,create_time,modify_time,dept_code,tenant_id,dept_address,longitude,latitude,province,city,county,town FROM t_dept WHERE parent_id = 145714692612947968;
2021-04-16 20:58:39.536 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-04-16 20:58:39 | 耗时 207 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'yangguan8', '2021-04-16T20:58:39.279+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1' );
2021-04-16 20:58:39.711 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-04-16 20:58:39 | 耗时 46 ms | SQL 语句：
SELECT DEPT_ID,parent_id,type,dept_name,parent_id_name,order_num,create_time,modify_time,dept_code,tenant_id,dept_address,longitude,latitude,province,city,county,town FROM t_dept WHERE DEPT_ID = 145714692612947968;
2021-04-16 20:58:40.407 febs [http-nio-11101-exec-4] INFO  p6spy - 2021-04-16 20:58:40 | 耗时 100 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'yangguan8';
2021-04-16 20:58:40.558 febs [http-nio-11101-exec-3] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-16 20:58:40.665 febs [http-nio-11101-exec-3] INFO  p6spy - 2021-04-16 20:58:40 | 耗时 92 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yangguan8') order by m.order_num;
2021-04-16 21:01:02.156 febs [http-nio-11101-exec-5] INFO  p6spy - 2021-04-16 21:01:02 | 耗时 171 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'yangguan8';
2021-04-16 21:01:02.630 febs [http-nio-11101-exec-7] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-16 21:01:02.712 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-16 21:01:02 | 耗时 79 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yangguan8') order by m.order_num;
2021-04-16 21:04:36.272 febs [http-nio-11101-exec-6] INFO  p6spy - 2021-04-16 21:04:36 | 耗时 138 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'yangguan8';
2021-04-16 21:04:36.633 febs [http-nio-11101-exec-8] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-16 21:04:36.705 febs [http-nio-11101-exec-8] INFO  p6spy - 2021-04-16 21:04:36 | 耗时 70 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yangguan8') order by m.order_num;
2021-04-16 21:09:02.947 febs [http-nio-11101-exec-11] INFO  c.s.b.sys.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2021-04-16 21:09:03.565 febs [http-nio-11101-exec-11] INFO  p6spy - 2021-04-16 21:09:03 | 耗时 159 ms | SQL 语句：
UPDATE t_user SET last_login_time='2021-04-16T21:09:03.404+0800', user_type=0 WHERE username = 'chenfeng';
2021-04-16 21:09:03.720 febs [http-nio-11101-exec-11] INFO  p6spy - 2021-04-16 21:09:03 | 耗时 154 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chenfeng' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-16 21:09:04.063 febs [http-nio-11101-exec-11] INFO  p6spy - 2021-04-16 21:09:04 | 耗时 108 ms | SQL 语句：
SELECT DEPT_ID,parent_id,type,dept_name,parent_id_name,order_num,create_time,modify_time,dept_code,tenant_id,dept_address,longitude,latitude,province,city,county,town FROM t_dept WHERE parent_id = 145727008091930624;
2021-04-16 21:09:04.195 febs [http-nio-11101-exec-11] INFO  p6spy - 2021-04-16 21:09:04 | 耗时 89 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'chenfeng', '2021-04-16T21:09:04.103+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1' );
2021-04-16 21:09:04.347 febs [http-nio-11101-exec-11] INFO  p6spy - 2021-04-16 21:09:04 | 耗时 35 ms | SQL 语句：
SELECT DEPT_ID,parent_id,type,dept_name,parent_id_name,order_num,create_time,modify_time,dept_code,tenant_id,dept_address,longitude,latitude,province,city,county,town FROM t_dept WHERE DEPT_ID = 145727008091930624;
2021-04-16 21:09:04.706 febs [http-nio-11101-exec-11] INFO  p6spy - 2021-04-16 21:09:04 | 耗时 35 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chenfeng' and m.perms is not null and m.perms <> '';
2021-04-16 21:09:05.031 febs [http-nio-11101-exec-10] INFO  p6spy - 2021-04-16 21:09:05 | 耗时 79 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'chenfeng';
2021-04-16 21:09:05.184 febs [http-nio-11101-exec-13] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-16 21:09:05.235 febs [http-nio-11101-exec-13] INFO  p6spy - 2021-04-16 21:09:05 | 耗时 47 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chenfeng') order by m.order_num;
2021-04-16 21:14:50.558 febs [http-nio-11101-exec-18] INFO  c.s.b.sys.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2021-04-16 21:14:51.534 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-16 21:14:51 | 耗时 121 ms | SQL 语句：
UPDATE t_user SET last_login_time='2021-04-16T21:14:51.406+0800', user_type=0 WHERE username = 'yangguan8';
2021-04-16 21:14:51.684 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-16 21:14:51 | 耗时 148 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yangguan8' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-16 21:14:52.059 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-16 21:14:52 | 耗时 123 ms | SQL 语句：
SELECT DEPT_ID,parent_id,type,dept_name,parent_id_name,order_num,create_time,modify_time,dept_code,tenant_id,dept_address,longitude,latitude,province,city,county,town FROM t_dept WHERE parent_id = 145714692612947968;
2021-04-16 21:14:52.194 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-16 21:14:52 | 耗时 80 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'yangguan8', '2021-04-16T21:14:52.114+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1' );
2021-04-16 21:14:52.344 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-16 21:14:52 | 耗时 35 ms | SQL 语句：
SELECT DEPT_ID,parent_id,type,dept_name,parent_id_name,order_num,create_time,modify_time,dept_code,tenant_id,dept_address,longitude,latitude,province,city,county,town FROM t_dept WHERE DEPT_ID = 145714692612947968;
2021-04-16 21:14:52.987 febs [http-nio-11101-exec-17] INFO  p6spy - 2021-04-16 21:14:52 | 耗时 200 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'yangguan8';
2021-04-16 21:14:53.390 febs [http-nio-11101-exec-19] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-16 21:14:53.476 febs [http-nio-11101-exec-19] INFO  p6spy - 2021-04-16 21:14:53 | 耗时 81 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yangguan8') order by m.order_num;
2021-04-16 21:37:44.479 febs [http-nio-11101-exec-20] INFO  p6spy - 2021-04-16 21:37:44 | 耗时 125 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'yangguan8';
2021-04-16 21:37:44.847 febs [http-nio-11101-exec-16] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-16 21:37:44.923 febs [http-nio-11101-exec-16] INFO  p6spy - 2021-04-16 21:37:44 | 耗时 74 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yangguan8') order by m.order_num;
2021-04-16 21:38:07.061 febs [http-nio-11101-exec-23] INFO  p6spy - 2021-04-16 21:38:07 | 耗时 124 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'yangguan8';
2021-04-16 21:38:07.194 febs [http-nio-11101-exec-22] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-16 21:38:07.267 febs [http-nio-11101-exec-22] INFO  p6spy - 2021-04-16 21:38:07 | 耗时 70 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yangguan8') order by m.order_num;
2021-04-16 21:45:48.248 febs [http-nio-11101-exec-24] INFO  p6spy - 2021-04-16 21:45:48 | 耗时 123 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'yangguan8';
2021-04-16 21:45:48.598 febs [http-nio-11101-exec-25] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-16 21:45:48.673 febs [http-nio-11101-exec-25] INFO  p6spy - 2021-04-16 21:45:48 | 耗时 72 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yangguan8') order by m.order_num;
2021-04-16 21:48:46.133 febs [http-nio-11101-exec-30] INFO  p6spy - 2021-04-16 21:48:46 | 耗时 120 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'yangguan8';
2021-04-16 21:48:46.484 febs [http-nio-11101-exec-27] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-16 21:48:46.561 febs [http-nio-11101-exec-27] INFO  p6spy - 2021-04-16 21:48:46 | 耗时 74 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yangguan8') order by m.order_num;
2021-04-16 21:50:14.189 febs [http-nio-11101-exec-28] INFO  p6spy - 2021-04-16 21:50:14 | 耗时 126 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'yangguan8';
2021-04-16 21:50:14.438 febs [http-nio-11101-exec-29] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-16 21:50:14.513 febs [http-nio-11101-exec-29] INFO  p6spy - 2021-04-16 21:50:14 | 耗时 72 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yangguan8') order by m.order_num;
