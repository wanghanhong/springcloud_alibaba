2021-04-06 08:32:21.580 febs [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-04-06 08:32:21.976 febs [restartedMain] INFO  c.a.n.c.c.i.LocalConfigInfoProcessor - LOCAL_SNAPSHOT_PATH:C:\Users\Dukzzz\nacos\config
2021-04-06 08:32:21.994 febs [restartedMain] INFO  c.a.nacos.client.config.impl.Limiter - limitTime:5.0
2021-04-06 08:32:22.327 febs [restartedMain] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-brd-sys2-local.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys2.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys2,DEFAULT_GROUP'}]
2021-04-06 08:32:22.341 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - The following profiles are active: local
2021-04-06 08:32:24.362 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-04-06 08:32:24.364 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-04-06 08:32:24.404 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 30ms. Found 0 Redis repository interfaces.
2021-04-06 08:32:24.644 febs [restartedMain] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=8c4fe861-2a7b-3271-bb5c-24bd86b9b2e5
2021-04-06 08:32:24.766 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [com.smart.brd.sys.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$67a308f9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 08:32:24.833 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 08:32:24.904 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$84547eae] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 08:32:24.911 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 08:32:24.914 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 08:32:24.947 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [com.smart.brd.sys.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$a26234f5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 08:32:25.235 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.smart.brd.sys.common.config.RedisConfig$$EnhancerBySpringCGLIB$$33becb49] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 08:32:25.251 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 08:32:25.253 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [com.smart.brd.sys.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 08:32:25.295 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 08:32:25.300 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [com.smart.brd.sys.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$52c21f1b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 08:32:25.303 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 08:32:25.309 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$588e7a77] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 08:32:25.315 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 08:32:25.316 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 08:32:25.318 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2021-04-06 08:32:25.324 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2021-04-06 08:32:25.527 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2021-04-06 08:32:25.528 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2021-04-06 08:32:25.528 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2021-04-06 08:32:25.528 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2021-04-06 08:32:25.528 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 08:32:25.537 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 08:32:25.544 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 08:32:25.982 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 08:32:25.988 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 08:32:26.016 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 08:32:26.019 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy144] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 08:32:26.025 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 08:32:26.027 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy145] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 08:32:26.028 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [com.smart.brd.sys.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 08:32:26.055 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [com.smart.brd.sys.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 08:32:26.069 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userTokenServiceImpl' of type [com.smart.brd.sys.system.usertoken.service.impl.UserTokenServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 08:32:26.073 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 08:32:26.074 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy148] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 08:32:26.074 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [com.smart.brd.sys.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 08:32:26.092 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 08:32:26.092 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy150] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 08:32:26.093 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [com.smart.brd.sys.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 08:32:26.146 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 08:32:26.147 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy152] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 08:32:26.148 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [com.smart.brd.sys.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 08:32:26.160 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 08:32:26.160 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [com.sun.proxy.$Proxy154] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 08:32:26.166 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 08:32:26.167 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy155] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 08:32:26.168 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [com.smart.brd.sys.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 08:32:26.181 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 08:32:26.183 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 08:32:26.185 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 08:32:26.189 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 08:32:26.191 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 08:32:26.195 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 08:32:26.197 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 08:32:26.201 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 08:32:26.206 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 08:32:26.208 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 08:32:26.211 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 08:32:26.213 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 08:32:26.230 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 08:32:26.245 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [com.smart.brd.sys.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 08:32:26.246 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [com.smart.brd.sys.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 08:32:26.246 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [com.smart.brd.sys.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 08:32:26.254 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 08:32:26.273 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 08:32:26.638 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 11101 (http)
2021-04-06 08:32:26.644 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-11101"]
2021-04-06 08:32:26.645 febs [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2021-04-06 08:32:26.645 febs [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.31]
2021-04-06 08:32:26.739 febs [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2021-04-06 08:32:26.740 febs [restartedMain] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4383 ms
2021-04-06 08:32:26.828 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-04-06 08:32:26.834 febs [restartedMain] INFO  c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@7902d32c
2021-04-06 08:32:27.402 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2021-04-06 08:32:27.416 febs [restartedMain] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-06 08:32:27.416 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.2 created.
2021-04-06 08:32:27.417 febs [restartedMain] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2021-04-06 08:32:27.418 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-06 08:32:27.418 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2021-04-06 08:32:27.418 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.2
2021-04-06 08:32:27.418 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@386260e1
2021-04-06 08:32:27.530 febs [restartedMain] INFO  p6spy - 2021-04-06 08:32:27 | 耗时 39 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2021-04-06 08:32:28.248 febs [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-04-06 08:32:28.357 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2021-04-06 08:32:28.523 febs [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2021-04-06 08:32:28.546 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-04-06 08:32:28.764 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2021-04-06 08:32:28.776 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-04-06 08:32:28.776 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Environment :null
2021-04-06 08:32:28.777 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-04-06 08:32:29.449 febs [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2021-04-06 08:32:29.459 febs [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2021-04-06 08:32:29.489 febs [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2021-04-06 08:32:29.499 febs [restartedMain] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2021-04-06 08:32:29.499 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2021-04-06 08:32:29.513 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-11101"]
2021-04-06 08:32:29.545 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 11101 (http) with context path ''
2021-04-06 08:32:29.548 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"192.168.0.106","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":11101,"scheduled":false,"serviceName":"DEFAULT_GROUP@@brd-sys2","stopped":false,"weight":1.0} to beat map.
2021-04-06 08:32:29.600 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [REGISTER-SERVICE] public registering service DEFAULT_GROUP@@brd-sys2 with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"192.168.0.106","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":11101,"weight":1.0}
2021-04-06 08:32:29.621 febs [scheduling-1] INFO  c.s.brd.sys.common.task.CacheTask - delete expired user
2021-04-06 08:32:29.669 febs [restartedMain] INFO  c.a.c.n.r.NacosServiceRegistry - nacos registry, DEFAULT_GROUP brd-sys2 192.168.0.106:11101 register finished
2021-04-06 08:32:29.815 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - Started BrdSysApplication in 9.033 seconds (JVM running for 10.024)
2021-04-06 08:32:29.819 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - Redis连接中 ······
2021-04-06 08:32:29.826 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存初始化 ······
2021-04-06 08:32:29.826 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存用户数据 ······
2021-04-06 08:32:29.867 febs [restartedMain] INFO  p6spy - 2021-04-06 08:32:29 | 耗时 11 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user;
2021-04-06 08:32:29.890 febs [restartedMain] INFO  p6spy - 2021-04-06 08:32:29 | 耗时 14 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sysadmin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-06 08:32:30.043 febs [restartedMain] INFO  p6spy - 2021-04-06 08:32:30 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin';
2021-04-06 08:32:30.068 febs [restartedMain] INFO  p6spy - 2021-04-06 08:32:30 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'sysadmin' and m.perms is not null and m.perms <> '';
2021-04-06 08:32:30.090 febs [restartedMain] INFO  p6spy - 2021-04-06 08:32:30 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='-1';
2021-04-06 08:32:30.146 febs [restartedMain] INFO  p6spy - 2021-04-06 08:32:30 | 耗时 54 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengcheng1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-06 08:32:30.206 febs [restartedMain] INFO  p6spy - 2021-04-06 08:32:30 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengcheng1';
2021-04-06 08:32:30.225 febs [restartedMain] INFO  p6spy - 2021-04-06 08:32:30 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengcheng1' and m.perms is not null and m.perms <> '';
2021-04-06 08:32:30.242 febs [restartedMain] INFO  p6spy - 2021-04-06 08:32:30 | 耗时 4 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='163';
2021-04-06 08:32:30.308 febs [restartedMain] INFO  p6spy - 2021-04-06 08:32:30 | 耗时 54 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yulin1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-06 08:32:30.371 febs [restartedMain] INFO  p6spy - 2021-04-06 08:32:30 | 耗时 6 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yulin1';
2021-04-06 08:32:30.393 febs [restartedMain] INFO  p6spy - 2021-04-06 08:32:30 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yulin1' and m.perms is not null and m.perms <> '';
2021-04-06 08:32:30.409 febs [restartedMain] INFO  p6spy - 2021-04-06 08:32:30 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='164';
2021-04-06 08:32:30.476 febs [restartedMain] INFO  p6spy - 2021-04-06 08:32:30 | 耗时 55 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengchengyonghu1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-06 08:32:30.542 febs [restartedMain] INFO  p6spy - 2021-04-06 08:32:30 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengchengyonghu1';
2021-04-06 08:32:30.566 febs [restartedMain] INFO  p6spy - 2021-04-06 08:32:30 | 耗时 6 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengchengyonghu1' and m.perms is not null and m.perms <> '';
2021-04-06 08:32:30.576 febs [restartedMain] INFO  p6spy - 2021-04-06 08:32:30 | 耗时 6 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='173';
2021-04-06 08:32:30.646 febs [restartedMain] INFO  p6spy - 2021-04-06 08:32:30 | 耗时 54 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengchengyonghu2' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-06 08:32:30.706 febs [restartedMain] INFO  p6spy - 2021-04-06 08:32:30 | 耗时 6 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengchengyonghu2';
2021-04-06 08:32:30.726 febs [restartedMain] INFO  p6spy - 2021-04-06 08:32:30 | 耗时 6 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengchengyonghu2' and m.perms is not null and m.perms <> '';
2021-04-06 08:32:30.734 febs [restartedMain] INFO  p6spy - 2021-04-06 08:32:30 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='174';
2021-04-06 08:32:30.800 febs [restartedMain] INFO  p6spy - 2021-04-06 08:32:30 | 耗时 54 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengcheng' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-06 08:32:30.858 febs [restartedMain] INFO  p6spy - 2021-04-06 08:32:30 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengcheng';
2021-04-06 08:32:30.876 febs [restartedMain] INFO  p6spy - 2021-04-06 08:32:30 | 耗时 6 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengcheng' and m.perms is not null and m.perms <> '';
2021-04-06 08:32:30.883 febs [restartedMain] INFO  p6spy - 2021-04-06 08:32:30 | 耗时 6 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='175';
2021-04-06 08:32:30.947 febs [restartedMain] INFO  p6spy - 2021-04-06 08:32:30 | 耗时 52 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yulinyonghu1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-06 08:32:31.009 febs [restartedMain] INFO  p6spy - 2021-04-06 08:32:31 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yulinyonghu1';
2021-04-06 08:32:31.025 febs [restartedMain] INFO  p6spy - 2021-04-06 08:32:31 | 耗时 6 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yulinyonghu1' and m.perms is not null and m.perms <> '';
2021-04-06 08:32:31.032 febs [restartedMain] INFO  p6spy - 2021-04-06 08:32:31 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='178';
2021-04-06 08:32:31.096 febs [restartedMain] INFO  p6spy - 2021-04-06 08:32:31 | 耗时 53 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yulinyonghu2' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-06 08:32:31.154 febs [restartedMain] INFO  p6spy - 2021-04-06 08:32:31 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yulinyonghu2';
2021-04-06 08:32:31.170 febs [restartedMain] INFO  p6spy - 2021-04-06 08:32:31 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yulinyonghu2' and m.perms is not null and m.perms <> '';
2021-04-06 08:32:31.176 febs [restartedMain] INFO  p6spy - 2021-04-06 08:32:31 | 耗时 4 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='179';
2021-04-06 08:32:31.239 febs [restartedMain] INFO  p6spy - 2021-04-06 08:32:31 | 耗时 52 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'heyang1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-06 08:32:31.300 febs [restartedMain] INFO  p6spy - 2021-04-06 08:32:31 | 耗时 4 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'heyang1';
2021-04-06 08:32:31.316 febs [restartedMain] INFO  p6spy - 2021-04-06 08:32:31 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'heyang1' and m.perms is not null and m.perms <> '';
2021-04-06 08:32:31.334 febs [restartedMain] INFO  p6spy - 2021-04-06 08:32:31 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='180';
2021-04-06 08:32:31.344 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2021-04-06 08:32:31.344 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2021-04-06 08:32:31.344 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2021-04-06 08:32:31.344 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -                                                       
2021-04-06 08:32:31.344 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - FEBS 启动完毕，时间：2021-04-06T08:32:31.344
2021-04-06 08:32:31.346 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2+DEFAULT_GROUP
2021-04-06 08:32:31.346 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2, group=DEFAULT_GROUP, cnt=1
2021-04-06 08:32:31.346 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2.yaml+DEFAULT_GROUP
2021-04-06 08:32:31.346 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2.yaml, group=DEFAULT_GROUP, cnt=1
2021-04-06 08:32:31.347 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2-local.yaml+DEFAULT_GROUP
2021-04-06 08:32:31.347 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2-local.yaml, group=DEFAULT_GROUP, cnt=1
2021-04-06 08:35:11.729 febs [http-nio-11101-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-04-06 08:35:11.729 febs [http-nio-11101-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2021-04-06 08:35:11.741 febs [http-nio-11101-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 12 ms
2021-04-06 08:35:12.007 febs [http-nio-11101-exec-1] INFO  p6spy - 2021-04-06 08:35:12 | 耗时 66 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-04-06 08:35:16.380 febs [http-nio-11101-exec-5] INFO  c.s.b.sys.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2021-04-06 08:35:16.542 febs [http-nio-11101-exec-5] INFO  p6spy - 2021-04-06 08:35:16 | 耗时 9 ms | SQL 语句：
UPDATE t_user SET last_login_time='2021-04-06T08:35:16.526+0800', user_type=0 WHERE username = 'sysadmin';
2021-04-06 08:35:16.596 febs [http-nio-11101-exec-5] INFO  p6spy - 2021-04-06 08:35:16 | 耗时 52 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sysadmin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-06 08:35:16.796 febs [http-nio-11101-exec-5] INFO  p6spy - 2021-04-06 08:35:16 | 耗时 9 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'sysadmin', '2021-04-06T08:35:16.727+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1' );
2021-04-06 08:35:16.937 febs [http-nio-11101-exec-5] INFO  p6spy - 2021-04-06 08:35:16 | 耗时 4 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='-1';
2021-04-06 08:35:16.991 febs [http-nio-11101-exec-6] INFO  p6spy - 2021-04-06 08:35:16 | 耗时 27 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-04-06 08:35:17.048 febs [http-nio-11101-exec-8] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-06 08:35:17.077 febs [http-nio-11101-exec-8] INFO  p6spy - 2021-04-06 08:35:17 | 耗时 9 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin') order by m.order_num;
2021-04-06 08:40:13.008 febs [http-nio-11101-exec-4] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-06 08:40:13.112 febs [http-nio-11101-exec-4] INFO  p6spy - 2021-04-06 08:40:13 | 耗时 20 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 and u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-06 08:40:13.178 febs [http-nio-11101-exec-4] INFO  p6spy - 2021-04-06 08:40:13 | 耗时 58 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 and u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-04-06 09:03:28.312 febs [http-nio-11101-exec-10] INFO  c.s.b.sys.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2021-04-06 09:03:28.397 febs [http-nio-11101-exec-10] INFO  p6spy - 2021-04-06 09:03:28 | 耗时 9 ms | SQL 语句：
UPDATE t_user SET last_login_time='2021-04-06T09:03:28.386+0800', user_type=0 WHERE username = 'sysadmin';
2021-04-06 09:03:28.442 febs [http-nio-11101-exec-10] INFO  p6spy - 2021-04-06 09:03:28 | 耗时 43 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sysadmin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-06 09:03:28.531 febs [http-nio-11101-exec-10] INFO  p6spy - 2021-04-06 09:03:28 | 耗时 8 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'sysadmin', '2021-04-06T09:03:28.510+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1' );
2021-04-06 09:03:28.690 febs [http-nio-11101-exec-10] INFO  p6spy - 2021-04-06 09:03:28 | 耗时 16 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='-1';
2021-04-06 09:03:28.822 febs [http-nio-11101-exec-11] INFO  p6spy - 2021-04-06 09:03:28 | 耗时 75 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-04-06 09:03:28.898 febs [http-nio-11101-exec-7] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-06 09:03:28.912 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-06 09:03:28 | 耗时 10 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin') order by m.order_num;
2021-04-06 09:24:14.998 febs [http-nio-11101-exec-13] INFO  p6spy - 2021-04-06 09:24:14 | 耗时 16 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-04-06 09:24:15.062 febs [http-nio-11101-exec-9] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-06 09:24:15.082 febs [http-nio-11101-exec-9] INFO  p6spy - 2021-04-06 09:24:15 | 耗时 9 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin') order by m.order_num;
2021-04-06 13:50:00.073 febs [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-04-06 13:50:00.445 febs [restartedMain] INFO  c.a.n.c.c.i.LocalConfigInfoProcessor - LOCAL_SNAPSHOT_PATH:C:\Users\Dukzzz\nacos\config
2021-04-06 13:50:00.462 febs [restartedMain] INFO  c.a.nacos.client.config.impl.Limiter - limitTime:5.0
2021-04-06 13:50:00.909 febs [restartedMain] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-brd-sys2-local.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys2.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys2,DEFAULT_GROUP'}]
2021-04-06 13:50:00.914 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - The following profiles are active: local
2021-04-06 13:50:01.964 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-04-06 13:50:01.966 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-04-06 13:50:02.004 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 28ms. Found 0 Redis repository interfaces.
2021-04-06 13:50:02.231 febs [restartedMain] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=8c4fe861-2a7b-3271-bb5c-24bd86b9b2e5
2021-04-06 13:50:02.354 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [com.smart.brd.sys.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$e7b88e1f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 13:50:02.419 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 13:50:02.478 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$46a03d4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 13:50:02.485 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 13:50:02.487 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 13:50:02.521 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [com.smart.brd.sys.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$2277ba1b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 13:50:02.748 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.smart.brd.sys.common.config.RedisConfig$$EnhancerBySpringCGLIB$$b3d4506f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 13:50:02.761 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 13:50:02.764 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [com.smart.brd.sys.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 13:50:02.804 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 13:50:02.810 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [com.smart.brd.sys.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$d2d7a441] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 13:50:02.813 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 13:50:02.818 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$d8a3ff9d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 13:50:02.825 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 13:50:02.826 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 13:50:02.829 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2021-04-06 13:50:02.834 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2021-04-06 13:50:03.094 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2021-04-06 13:50:03.094 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2021-04-06 13:50:03.094 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2021-04-06 13:50:03.094 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2021-04-06 13:50:03.094 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 13:50:03.105 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 13:50:03.112 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 13:50:03.562 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 13:50:03.573 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 13:50:03.626 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 13:50:03.629 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy144] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 13:50:03.634 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 13:50:03.635 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy145] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 13:50:03.636 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [com.smart.brd.sys.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 13:50:03.663 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [com.smart.brd.sys.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 13:50:03.677 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userTokenServiceImpl' of type [com.smart.brd.sys.system.usertoken.service.impl.UserTokenServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 13:50:03.681 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 13:50:03.682 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy148] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 13:50:03.683 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [com.smart.brd.sys.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 13:50:03.699 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 13:50:03.700 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy150] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 13:50:03.701 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [com.smart.brd.sys.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 13:50:03.739 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 13:50:03.740 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy152] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 13:50:03.741 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [com.smart.brd.sys.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 13:50:03.753 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 13:50:03.754 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [com.sun.proxy.$Proxy154] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 13:50:03.758 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 13:50:03.759 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy155] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 13:50:03.760 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [com.smart.brd.sys.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 13:50:03.773 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 13:50:03.775 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 13:50:03.777 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 13:50:03.782 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 13:50:03.783 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 13:50:03.786 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 13:50:03.788 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 13:50:03.791 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 13:50:03.797 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 13:50:03.798 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 13:50:03.802 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 13:50:03.804 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 13:50:03.820 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 13:50:03.835 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [com.smart.brd.sys.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 13:50:03.835 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [com.smart.brd.sys.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 13:50:03.836 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [com.smart.brd.sys.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 13:50:03.843 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 13:50:03.857 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-06 13:50:04.228 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 11101 (http)
2021-04-06 13:50:04.236 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-11101"]
2021-04-06 13:50:04.237 febs [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2021-04-06 13:50:04.237 febs [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.31]
2021-04-06 13:50:04.320 febs [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2021-04-06 13:50:04.321 febs [restartedMain] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3389 ms
2021-04-06 13:50:04.406 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-04-06 13:50:04.414 febs [restartedMain] INFO  c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@6c02d8eb
2021-04-06 13:50:04.965 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2021-04-06 13:50:04.974 febs [restartedMain] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-06 13:50:04.974 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.2 created.
2021-04-06 13:50:04.974 febs [restartedMain] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2021-04-06 13:50:04.975 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-06 13:50:04.975 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2021-04-06 13:50:04.975 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.2
2021-04-06 13:50:04.975 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@2ab3250e
2021-04-06 13:50:05.026 febs [restartedMain] INFO  p6spy - 2021-04-06 13:50:05 | 耗时 5 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2021-04-06 13:50:05.431 febs [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2021-04-06 13:50:05.757 febs [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-04-06 13:50:05.868 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2021-04-06 13:50:05.914 febs [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2021-04-06 13:50:06.072 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-04-06 13:50:06.298 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2021-04-06 13:50:06.311 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-04-06 13:50:06.312 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Environment :null
2021-04-06 13:50:06.312 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-04-06 13:50:07.006 febs [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2021-04-06 13:50:07.016 febs [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2021-04-06 13:50:07.047 febs [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2021-04-06 13:50:07.058 febs [restartedMain] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2021-04-06 13:50:07.058 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2021-04-06 13:50:07.072 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-11101"]
2021-04-06 13:50:07.094 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 11101 (http) with context path ''
2021-04-06 13:50:07.097 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"192.168.0.106","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":11101,"scheduled":false,"serviceName":"DEFAULT_GROUP@@brd-sys2","stopped":false,"weight":1.0} to beat map.
2021-04-06 13:50:07.149 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [REGISTER-SERVICE] public registering service DEFAULT_GROUP@@brd-sys2 with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"192.168.0.106","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":11101,"weight":1.0}
2021-04-06 13:50:07.172 febs [scheduling-1] INFO  c.s.brd.sys.common.task.CacheTask - delete expired user
2021-04-06 13:50:07.224 febs [restartedMain] INFO  c.a.c.n.r.NacosServiceRegistry - nacos registry, DEFAULT_GROUP brd-sys2 192.168.0.106:11101 register finished
2021-04-06 13:50:07.358 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - Started BrdSysApplication in 8.114 seconds (JVM running for 8.91)
2021-04-06 13:50:07.362 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - Redis连接中 ······
2021-04-06 13:50:07.369 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存初始化 ······
2021-04-06 13:50:07.369 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存用户数据 ······
2021-04-06 13:50:07.409 febs [restartedMain] INFO  p6spy - 2021-04-06 13:50:07 | 耗时 10 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user;
2021-04-06 13:50:07.426 febs [restartedMain] INFO  p6spy - 2021-04-06 13:50:07 | 耗时 9 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sysadmin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-06 13:50:07.544 febs [restartedMain] INFO  p6spy - 2021-04-06 13:50:07 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin';
2021-04-06 13:50:07.573 febs [restartedMain] INFO  p6spy - 2021-04-06 13:50:07 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'sysadmin' and m.perms is not null and m.perms <> '';
2021-04-06 13:50:07.601 febs [restartedMain] INFO  p6spy - 2021-04-06 13:50:07 | 耗时 8 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='-1';
2021-04-06 13:50:07.656 febs [restartedMain] INFO  p6spy - 2021-04-06 13:50:07 | 耗时 53 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengcheng1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-06 13:50:07.718 febs [restartedMain] INFO  p6spy - 2021-04-06 13:50:07 | 耗时 6 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengcheng1';
2021-04-06 13:50:07.742 febs [restartedMain] INFO  p6spy - 2021-04-06 13:50:07 | 耗时 13 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengcheng1' and m.perms is not null and m.perms <> '';
2021-04-06 13:50:07.759 febs [restartedMain] INFO  p6spy - 2021-04-06 13:50:07 | 耗时 4 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='163';
2021-04-06 13:50:07.827 febs [restartedMain] INFO  p6spy - 2021-04-06 13:50:07 | 耗时 56 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yulin1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-06 13:50:07.889 febs [restartedMain] INFO  p6spy - 2021-04-06 13:50:07 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yulin1';
2021-04-06 13:50:07.908 febs [restartedMain] INFO  p6spy - 2021-04-06 13:50:07 | 耗时 7 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yulin1' and m.perms is not null and m.perms <> '';
2021-04-06 13:50:07.932 febs [restartedMain] INFO  p6spy - 2021-04-06 13:50:07 | 耗时 10 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='164';
2021-04-06 13:50:07.997 febs [restartedMain] INFO  p6spy - 2021-04-06 13:50:07 | 耗时 53 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengchengyonghu1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-06 13:50:08.060 febs [restartedMain] INFO  p6spy - 2021-04-06 13:50:08 | 耗时 7 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengchengyonghu1';
2021-04-06 13:50:08.078 febs [restartedMain] INFO  p6spy - 2021-04-06 13:50:08 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengchengyonghu1' and m.perms is not null and m.perms <> '';
2021-04-06 13:50:08.084 febs [restartedMain] INFO  p6spy - 2021-04-06 13:50:08 | 耗时 4 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='173';
2021-04-06 13:50:08.151 febs [restartedMain] INFO  p6spy - 2021-04-06 13:50:08 | 耗时 54 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengchengyonghu2' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-06 13:50:08.217 febs [restartedMain] INFO  p6spy - 2021-04-06 13:50:08 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengchengyonghu2';
2021-04-06 13:50:08.239 febs [restartedMain] INFO  p6spy - 2021-04-06 13:50:08 | 耗时 6 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengchengyonghu2' and m.perms is not null and m.perms <> '';
2021-04-06 13:50:08.249 febs [restartedMain] INFO  p6spy - 2021-04-06 13:50:08 | 耗时 8 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='174';
2021-04-06 13:50:08.313 febs [restartedMain] INFO  p6spy - 2021-04-06 13:50:08 | 耗时 53 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengcheng' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-06 13:50:08.374 febs [restartedMain] INFO  p6spy - 2021-04-06 13:50:08 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengcheng';
2021-04-06 13:50:08.393 febs [restartedMain] INFO  p6spy - 2021-04-06 13:50:08 | 耗时 6 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengcheng' and m.perms is not null and m.perms <> '';
2021-04-06 13:50:08.402 febs [restartedMain] INFO  p6spy - 2021-04-06 13:50:08 | 耗时 6 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='175';
2021-04-06 13:50:08.466 febs [restartedMain] INFO  p6spy - 2021-04-06 13:50:08 | 耗时 52 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yulinyonghu1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-06 13:50:08.526 febs [restartedMain] INFO  p6spy - 2021-04-06 13:50:08 | 耗时 6 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yulinyonghu1';
2021-04-06 13:50:08.541 febs [restartedMain] INFO  p6spy - 2021-04-06 13:50:08 | 耗时 4 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yulinyonghu1' and m.perms is not null and m.perms <> '';
2021-04-06 13:50:08.548 febs [restartedMain] INFO  p6spy - 2021-04-06 13:50:08 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='178';
2021-04-06 13:50:08.616 febs [restartedMain] INFO  p6spy - 2021-04-06 13:50:08 | 耗时 56 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yulinyonghu2' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-06 13:50:08.674 febs [restartedMain] INFO  p6spy - 2021-04-06 13:50:08 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yulinyonghu2';
2021-04-06 13:50:08.696 febs [restartedMain] INFO  p6spy - 2021-04-06 13:50:08 | 耗时 10 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yulinyonghu2' and m.perms is not null and m.perms <> '';
2021-04-06 13:50:08.702 febs [restartedMain] INFO  p6spy - 2021-04-06 13:50:08 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='179';
2021-04-06 13:50:08.769 febs [restartedMain] INFO  p6spy - 2021-04-06 13:50:08 | 耗时 55 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'heyang1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-06 13:50:08.849 febs [restartedMain] INFO  p6spy - 2021-04-06 13:50:08 | 耗时 7 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'heyang1';
2021-04-06 13:50:08.870 febs [restartedMain] INFO  p6spy - 2021-04-06 13:50:08 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'heyang1' and m.perms is not null and m.perms <> '';
2021-04-06 13:50:08.894 febs [restartedMain] INFO  p6spy - 2021-04-06 13:50:08 | 耗时 8 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='180';
2021-04-06 13:50:08.907 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2021-04-06 13:50:08.907 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2021-04-06 13:50:08.907 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2021-04-06 13:50:08.907 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -                                                       
2021-04-06 13:50:08.907 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - FEBS 启动完毕，时间：2021-04-06T13:50:08.907
2021-04-06 13:50:08.910 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2+DEFAULT_GROUP
2021-04-06 13:50:08.911 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2, group=DEFAULT_GROUP, cnt=1
2021-04-06 13:50:08.911 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2.yaml+DEFAULT_GROUP
2021-04-06 13:50:08.911 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2.yaml, group=DEFAULT_GROUP, cnt=1
2021-04-06 13:50:08.911 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2-local.yaml+DEFAULT_GROUP
2021-04-06 13:50:08.911 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2-local.yaml, group=DEFAULT_GROUP, cnt=1
2021-04-06 13:51:04.673 febs [http-nio-11101-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-04-06 13:51:04.673 febs [http-nio-11101-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2021-04-06 13:51:04.682 febs [http-nio-11101-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 9 ms
2021-04-06 13:51:14.820 febs [http-nio-11101-exec-3] INFO  c.s.b.sys.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2021-04-06 13:51:15.010 febs [http-nio-11101-exec-3] INFO  p6spy - 2021-04-06 13:51:15 | 耗时 125 ms | SQL 语句：
UPDATE t_user SET last_login_time='2021-04-06T13:51:14.867+0800', user_type=0 WHERE username = 'sysadmin';
2021-04-06 13:51:15.029 febs [http-nio-11101-exec-3] INFO  p6spy - 2021-04-06 13:51:15 | 耗时 18 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sysadmin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-06 13:51:15.149 febs [http-nio-11101-exec-3] INFO  p6spy - 2021-04-06 13:51:15 | 耗时 12 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'sysadmin', '2021-04-06T13:51:15.118+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1' );
2021-04-06 13:51:15.306 febs [http-nio-11101-exec-3] INFO  p6spy - 2021-04-06 13:51:15 | 耗时 46 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='-1';
2021-04-06 13:51:15.416 febs [http-nio-11101-exec-4] INFO  p6spy - 2021-04-06 13:51:15 | 耗时 52 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-04-06 13:51:15.525 febs [http-nio-11101-exec-6] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-06 13:51:15.551 febs [http-nio-11101-exec-6] INFO  p6spy - 2021-04-06 13:51:15 | 耗时 10 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin') order by m.order_num;
2021-04-06 13:51:15.921 febs [http-nio-11101-exec-5] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-06 13:51:16.031 febs [http-nio-11101-exec-5] INFO  p6spy - 2021-04-06 13:51:16 | 耗时 50 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 and u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-06 13:51:16.103 febs [http-nio-11101-exec-5] INFO  p6spy - 2021-04-06 13:51:16 | 耗时 64 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 and u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-04-06 13:51:31.039 febs [http-nio-11101-exec-9] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-06 13:51:31.062 febs [http-nio-11101-exec-9] INFO  p6spy - 2021-04-06 13:51:31 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role ) TOTAL;
2021-04-06 13:51:31.068 febs [http-nio-11101-exec-9] INFO  p6spy - 2021-04-06 13:51:31 | 耗时 4 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role LIMIT 0,10;
2021-04-06 13:51:45.652 febs [http-nio-11101-exec-7] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-06 13:51:45.701 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-06 13:51:45 | 耗时 16 ms | SQL 语句：
SELECT role_id,menu_id FROM t_role_menu WHERE role_id = '1';
2021-04-06 13:51:45.710 febs [http-nio-11101-exec-8] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-06 13:51:45.746 febs [http-nio-11101-exec-8] INFO  p6spy - 2021-04-06 13:51:45 | 耗时 27 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu ORDER BY order_num ASC;
2021-04-06 13:53:44.573 febs [http-nio-11101-exec-11] INFO  c.s.b.sys.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2021-04-06 13:53:44.609 febs [http-nio-11101-exec-11] INFO  p6spy - 2021-04-06 13:53:44 | 耗时 10 ms | SQL 语句：
UPDATE t_user SET last_login_time='2021-04-06T13:53:44.597+0800', user_type=0 WHERE username = 'chengcheng1';
2021-04-06 13:53:44.667 febs [http-nio-11101-exec-11] INFO  p6spy - 2021-04-06 13:53:44 | 耗时 57 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengcheng1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-06 13:53:44.750 febs [http-nio-11101-exec-11] INFO  p6spy - 2021-04-06 13:53:44 | 耗时 9 ms | SQL 语句：
SELECT DEPT_ID,parent_id,type,dept_name,order_num,create_time,modify_time,dept_code,tenant_id,dept_address,longitude,latitude,province,city,county,town FROM t_dept WHERE parent_id = 140558060232900608;
2021-04-06 13:53:44.766 febs [http-nio-11101-exec-11] INFO  p6spy - 2021-04-06 13:53:44 | 耗时 9 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'chengcheng1', '2021-04-06T13:53:44.755+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1' );
2021-04-06 13:53:45.241 febs [http-nio-11101-exec-12] INFO  p6spy - 2021-04-06 13:53:45 | 耗时 61 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'chengcheng1';
2021-04-06 13:53:45.437 febs [http-nio-11101-exec-13] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-06 13:53:45.450 febs [http-nio-11101-exec-13] INFO  p6spy - 2021-04-06 13:53:45 | 耗时 10 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengcheng1') order by m.order_num;
2021-04-06 13:53:45.682 febs [http-nio-11101-exec-14] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-06 13:53:45.693 febs [http-nio-11101-exec-14] INFO  p6spy - 2021-04-06 13:53:45 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role WHERE create_dept = 140558060232900608 ) TOTAL;
2021-04-06 13:53:45.700 febs [http-nio-11101-exec-14] INFO  p6spy - 2021-04-06 13:53:45 | 耗时 5 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role WHERE create_dept = 140558060232900608 LIMIT 0,10;
2021-04-06 13:53:53.999 febs [http-nio-11101-exec-15] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-06 13:53:54.022 febs [http-nio-11101-exec-15] INFO  p6spy - 2021-04-06 13:53:54 | 耗时 10 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu ORDER BY order_num ASC;
2021-04-06 13:53:54.028 febs [http-nio-11101-exec-16] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-06 13:53:54.076 febs [http-nio-11101-exec-16] INFO  p6spy - 2021-04-06 13:53:54 | 耗时 43 ms | SQL 语句：
SELECT role_id,menu_id FROM t_role_menu WHERE role_id = '28';
2021-04-06 14:04:00.283 febs [http-nio-11101-exec-18] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-06 14:04:00.293 febs [http-nio-11101-exec-17] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-06 14:04:00.310 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-06 14:04:00 | 耗时 9 ms | SQL 语句：
SELECT role_id,menu_id FROM t_role_menu WHERE role_id = '28';
2021-04-06 14:04:00.315 febs [http-nio-11101-exec-17] INFO  p6spy - 2021-04-06 14:04:00 | 耗时 9 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu ORDER BY order_num ASC;
2021-04-06 14:05:28.288 febs [http-nio-11101-exec-19] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-06 14:05:28.306 febs [http-nio-11101-exec-19] INFO  p6spy - 2021-04-06 14:05:28 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 and (u.dept_id = 140558060232900608 or u.create_dept = 140558060232900608) and u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-06 14:05:28.347 febs [http-nio-11101-exec-19] INFO  p6spy - 2021-04-06 14:05:28 | 耗时 39 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 and (u.dept_id = 140558060232900608 or u.create_dept = 140558060232900608) and u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-04-06 14:05:34.688 febs [http-nio-11101-exec-21] INFO  c.s.b.sys.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2021-04-06 14:05:34.775 febs [http-nio-11101-exec-21] INFO  p6spy - 2021-04-06 14:05:34 | 耗时 52 ms | SQL 语句：
UPDATE t_user SET last_login_time='2021-04-06T14:05:34.721+0800', user_type=0 WHERE username = 'sysadmin';
2021-04-06 14:05:34.830 febs [http-nio-11101-exec-21] INFO  p6spy - 2021-04-06 14:05:34 | 耗时 54 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sysadmin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-06 14:05:34.937 febs [http-nio-11101-exec-21] INFO  p6spy - 2021-04-06 14:05:34 | 耗时 10 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'sysadmin', '2021-04-06T14:05:34.924+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1' );
2021-04-06 14:05:35.187 febs [http-nio-11101-exec-21] INFO  p6spy - 2021-04-06 14:05:35 | 耗时 6 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='-1';
2021-04-06 14:05:35.234 febs [http-nio-11101-exec-22] INFO  p6spy - 2021-04-06 14:05:35 | 耗时 19 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-04-06 14:05:35.577 febs [http-nio-11101-exec-23] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-06 14:05:35.590 febs [http-nio-11101-exec-23] INFO  p6spy - 2021-04-06 14:05:35 | 耗时 10 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin') order by m.order_num;
2021-04-06 14:05:35.854 febs [http-nio-11101-exec-24] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-06 14:05:35.885 febs [http-nio-11101-exec-24] INFO  p6spy - 2021-04-06 14:05:35 | 耗时 26 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 and u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-06 14:05:35.905 febs [http-nio-11101-exec-24] INFO  p6spy - 2021-04-06 14:05:35 | 耗时 18 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 and u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-04-06 14:05:38.625 febs [http-nio-11101-exec-25] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-06 14:05:38.638 febs [http-nio-11101-exec-25] INFO  p6spy - 2021-04-06 14:05:38 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role ) TOTAL;
2021-04-06 14:05:38.644 febs [http-nio-11101-exec-25] INFO  p6spy - 2021-04-06 14:05:38 | 耗时 5 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role LIMIT 0,10;
2021-04-06 14:05:40.033 febs [http-nio-11101-exec-26] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-06 14:05:40.064 febs [http-nio-11101-exec-26] INFO  p6spy - 2021-04-06 14:05:40 | 耗时 12 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu ORDER BY order_num ASC;
2021-04-06 14:05:40.301 febs [http-nio-11101-exec-27] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-06 14:05:40.311 febs [http-nio-11101-exec-27] INFO  p6spy - 2021-04-06 14:05:40 | 耗时 6 ms | SQL 语句：
SELECT role_id,menu_id FROM t_role_menu WHERE role_id = '1';
2021-04-06 14:05:51.910 febs [http-nio-11101-exec-29] INFO  c.s.b.sys.common.aspect.LimitAspect - IP:127.0.0.1 第 2 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2021-04-06 14:05:51.956 febs [http-nio-11101-exec-29] INFO  p6spy - 2021-04-06 14:05:51 | 耗时 10 ms | SQL 语句：
UPDATE t_user SET last_login_time='2021-04-06T14:05:51.944+0800', user_type=0 WHERE username = 'chengcheng1';
2021-04-06 14:05:51.967 febs [http-nio-11101-exec-29] INFO  p6spy - 2021-04-06 14:05:51 | 耗时 10 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengcheng1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-06 14:05:52.042 febs [http-nio-11101-exec-29] INFO  p6spy - 2021-04-06 14:05:52 | 耗时 6 ms | SQL 语句：
SELECT DEPT_ID,parent_id,type,dept_name,order_num,create_time,modify_time,dept_code,tenant_id,dept_address,longitude,latitude,province,city,county,town FROM t_dept WHERE parent_id = 140558060232900608;
2021-04-06 14:05:52.061 febs [http-nio-11101-exec-29] INFO  p6spy - 2021-04-06 14:05:52 | 耗时 10 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'chengcheng1', '2021-04-06T14:05:52.049+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1' );
2021-04-06 14:05:52.636 febs [http-nio-11101-exec-30] INFO  p6spy - 2021-04-06 14:05:52 | 耗时 81 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'chengcheng1';
2021-04-06 14:05:52.879 febs [http-nio-11101-exec-31] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-06 14:05:52.931 febs [http-nio-11101-exec-31] INFO  p6spy - 2021-04-06 14:05:52 | 耗时 45 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengcheng1') order by m.order_num;
2021-04-06 14:05:53.151 febs [http-nio-11101-exec-32] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-06 14:05:53.162 febs [http-nio-11101-exec-32] INFO  p6spy - 2021-04-06 14:05:53 | 耗时 7 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role WHERE create_dept = 140558060232900608 ) TOTAL;
2021-04-06 14:05:53.169 febs [http-nio-11101-exec-32] INFO  p6spy - 2021-04-06 14:05:53 | 耗时 6 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role WHERE create_dept = 140558060232900608 LIMIT 0,10;
2021-04-06 14:05:58.607 febs [http-nio-11101-exec-33] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-06 14:05:58.633 febs [http-nio-11101-exec-33] INFO  p6spy - 2021-04-06 14:05:58 | 耗时 9 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu ORDER BY order_num ASC;
2021-04-06 14:05:58.637 febs [http-nio-11101-exec-34] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-06 14:05:58.686 febs [http-nio-11101-exec-34] INFO  p6spy - 2021-04-06 14:05:58 | 耗时 46 ms | SQL 语句：
SELECT role_id,menu_id FROM t_role_menu WHERE role_id = '28';
2021-04-06 14:17:19.455 febs [http-nio-11101-exec-35] INFO  p6spy - 2021-04-06 14:17:19 | 耗时 66 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'chengcheng1';
2021-04-06 14:17:19.607 febs [http-nio-11101-exec-36] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-06 14:17:19.620 febs [http-nio-11101-exec-36] INFO  p6spy - 2021-04-06 14:17:19 | 耗时 11 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengcheng1') order by m.order_num;
2021-04-06 14:26:21.623 febs [http-nio-11101-exec-37] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-06 14:26:21.674 febs [http-nio-11101-exec-37] INFO  p6spy - 2021-04-06 14:26:21 | 耗时 26 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 and (u.dept_id = 140558060232900608 or u.create_dept = 140558060232900608) and u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-06 14:26:21.806 febs [http-nio-11101-exec-37] INFO  p6spy - 2021-04-06 14:26:21 | 耗时 131 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 and (u.dept_id = 140558060232900608 or u.create_dept = 140558060232900608) and u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-04-06 14:26:23.105 febs [http-nio-11101-exec-38] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-06 14:26:23.153 febs [http-nio-11101-exec-38] INFO  p6spy - 2021-04-06 14:26:23 | 耗时 29 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role WHERE create_dept = 140558060232900608 ) TOTAL;
2021-04-06 14:26:23.235 febs [http-nio-11101-exec-38] INFO  p6spy - 2021-04-06 14:26:23 | 耗时 79 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role WHERE create_dept = 140558060232900608 LIMIT 0,10;
2021-04-06 14:26:28.639 febs [http-nio-11101-exec-39] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-06 14:26:28.680 febs [http-nio-11101-exec-39] INFO  p6spy - 2021-04-06 14:26:28 | 耗时 24 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu ORDER BY order_num ASC;
2021-04-06 14:26:28.955 febs [http-nio-11101-exec-40] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-06 14:26:28.976 febs [http-nio-11101-exec-40] INFO  p6spy - 2021-04-06 14:26:28 | 耗时 18 ms | SQL 语句：
SELECT role_id,menu_id FROM t_role_menu WHERE role_id = '28';
