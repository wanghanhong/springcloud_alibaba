2021-03-31 11:12:11.915 febs [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-03-31 11:12:12.371 febs [restartedMain] INFO  c.a.n.c.c.i.LocalConfigInfoProcessor - LOCAL_SNAPSHOT_PATH:C:\Users\Dukzzz\nacos\config
2021-03-31 11:12:12.392 febs [restartedMain] INFO  c.a.nacos.client.config.impl.Limiter - limitTime:5.0
2021-03-31 11:12:12.799 febs [restartedMain] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-brd-sys2-local.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys2.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys2,DEFAULT_GROUP'}]
2021-03-31 11:12:12.850 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - The following profiles are active: local
2021-03-31 11:12:16.089 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-03-31 11:12:16.091 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-03-31 11:12:16.141 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 37ms. Found 0 Redis repository interfaces.
2021-03-31 11:12:16.710 febs [restartedMain] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=05c68cbb-8ddd-3dc7-b64b-af42b1b4e22c
2021-03-31 11:12:16.935 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [com.smart.brd.sys.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$68fbe668] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 11:12:17.054 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 11:12:17.144 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$85ad5c1d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 11:12:17.159 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 11:12:17.200 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 11:12:17.250 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [com.smart.brd.sys.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$a3bb1264] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 11:12:17.559 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.smart.brd.sys.common.config.RedisConfig$$EnhancerBySpringCGLIB$$3517a8b8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 11:12:17.586 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 11:12:17.590 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [com.smart.brd.sys.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 11:12:17.670 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 11:12:17.681 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [com.smart.brd.sys.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$541afc8a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 11:12:17.687 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 11:12:17.699 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$59e757e6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 11:12:17.716 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 11:12:17.724 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 11:12:17.728 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2021-03-31 11:12:17.738 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2021-03-31 11:12:18.073 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2021-03-31 11:12:18.073 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2021-03-31 11:12:18.073 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2021-03-31 11:12:18.073 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2021-03-31 11:12:18.073 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 11:12:18.086 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 11:12:18.096 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 11:12:18.966 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 11:12:19.021 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 11:12:19.101 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 11:12:19.107 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy144] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 11:12:19.117 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 11:12:19.118 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy145] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 11:12:19.120 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [com.smart.brd.sys.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 11:12:19.181 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [com.smart.brd.sys.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 11:12:19.222 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 11:12:19.224 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy148] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 11:12:19.226 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [com.smart.brd.sys.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 11:12:19.269 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 11:12:19.271 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy150] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 11:12:19.273 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [com.smart.brd.sys.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 11:12:19.378 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 11:12:19.380 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy152] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 11:12:19.383 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [com.smart.brd.sys.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 11:12:19.427 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 11:12:19.430 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [com.sun.proxy.$Proxy154] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 11:12:19.442 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 11:12:19.445 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy155] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 11:12:19.447 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [com.smart.brd.sys.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 11:12:19.488 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 11:12:19.492 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 11:12:19.499 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 11:12:19.514 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 11:12:19.518 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 11:12:19.529 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 11:12:19.536 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 11:12:19.544 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 11:12:19.558 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 11:12:19.563 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 11:12:19.575 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 11:12:19.580 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 11:12:19.622 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 11:12:19.664 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [com.smart.brd.sys.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 11:12:19.665 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [com.smart.brd.sys.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 11:12:19.665 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [com.smart.brd.sys.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 11:12:19.722 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 11:12:19.773 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 11:12:20.680 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 11101 (http)
2021-03-31 11:12:20.700 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-11101"]
2021-03-31 11:12:20.702 febs [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2021-03-31 11:12:20.702 febs [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.31]
2021-03-31 11:12:21.016 febs [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2021-03-31 11:12:21.016 febs [restartedMain] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 8125 ms
2021-03-31 11:12:21.259 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-03-31 11:12:21.272 febs [restartedMain] INFO  c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3571647c
2021-03-31 11:12:22.072 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2021-03-31 11:12:22.088 febs [restartedMain] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-03-31 11:12:22.088 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.2 created.
2021-03-31 11:12:22.089 febs [restartedMain] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2021-03-31 11:12:22.090 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-03-31 11:12:22.090 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2021-03-31 11:12:22.091 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.2
2021-03-31 11:12:22.091 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@41ec95f1
2021-03-31 11:12:22.166 febs [restartedMain] INFO  p6spy - 2021-03-31 11:12:22 | 耗时 5 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2021-03-31 11:12:23.033 febs [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-03-31 11:12:23.164 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2021-03-31 11:12:23.357 febs [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2021-03-31 11:12:23.385 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-03-31 11:12:23.630 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2021-03-31 11:12:23.644 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-03-31 11:12:23.645 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Environment :null
2021-03-31 11:12:23.645 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-03-31 11:12:24.477 febs [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2021-03-31 11:12:24.486 febs [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2021-03-31 11:12:24.521 febs [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2021-03-31 11:12:24.535 febs [restartedMain] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2021-03-31 11:12:24.535 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2021-03-31 11:12:24.556 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-11101"]
2021-03-31 11:12:24.579 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 11101 (http) with context path ''
2021-03-31 11:12:24.581 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"192.168.0.103","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":11101,"scheduled":false,"serviceName":"DEFAULT_GROUP@@brd-sys2","stopped":false,"weight":1.0} to beat map.
2021-03-31 11:12:24.679 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [REGISTER-SERVICE] public registering service DEFAULT_GROUP@@brd-sys2 with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"192.168.0.103","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":11101,"weight":1.0}
2021-03-31 11:12:24.702 febs [scheduling-1] INFO  c.s.brd.sys.common.task.CacheTask - delete expired user
2021-03-31 11:12:24.761 febs [restartedMain] INFO  c.a.c.n.r.NacosServiceRegistry - nacos registry, DEFAULT_GROUP brd-sys2 192.168.0.103:11101 register finished
2021-03-31 11:12:24.918 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - Started BrdSysApplication in 13.978 seconds (JVM running for 15.247)
2021-03-31 11:12:24.921 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - Redis连接中 ······
2021-03-31 11:12:24.926 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存初始化 ······
2021-03-31 11:12:24.926 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存用户数据 ······
2021-03-31 11:12:24.979 febs [restartedMain] INFO  p6spy - 2021-03-31 11:12:24 | 耗时 20 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,province,city,county,town,housing FROM t_user;
2021-03-31 11:12:25.009 febs [restartedMain] INFO  p6spy - 2021-03-31 11:12:25 | 耗时 11 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sysadmin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-03-31 11:12:25.165 febs [restartedMain] INFO  p6spy - 2021-03-31 11:12:25 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin';
2021-03-31 11:12:25.193 febs [restartedMain] INFO  p6spy - 2021-03-31 11:12:25 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'sysadmin' and m.perms is not null and m.perms <> '';
2021-03-31 11:12:25.206 febs [restartedMain] INFO  p6spy - 2021-03-31 11:12:25 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='-1';
2021-03-31 11:12:25.234 febs [restartedMain] INFO  p6spy - 2021-03-31 11:12:25 | 耗时 24 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'nanlu' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-03-31 11:12:25.295 febs [restartedMain] INFO  p6spy - 2021-03-31 11:12:25 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'nanlu';
2021-03-31 11:12:25.317 febs [restartedMain] INFO  p6spy - 2021-03-31 11:12:25 | 耗时 6 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'nanlu' and m.perms is not null and m.perms <> '';
2021-03-31 11:12:25.327 febs [restartedMain] INFO  p6spy - 2021-03-31 11:12:25 | 耗时 6 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1';
2021-03-31 11:12:25.361 febs [restartedMain] INFO  p6spy - 2021-03-31 11:12:25 | 耗时 29 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'zhangsan' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-03-31 11:12:25.422 febs [restartedMain] INFO  p6spy - 2021-03-31 11:12:25 | 耗时 6 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'zhangsan';
2021-03-31 11:12:25.429 febs [restartedMain] INFO  p6spy - 2021-03-31 11:12:25 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'zhangsan' and m.perms is not null and m.perms <> '';
2021-03-31 11:12:25.438 febs [restartedMain] INFO  p6spy - 2021-03-31 11:12:25 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='118';
2021-03-31 11:12:25.484 febs [restartedMain] INFO  p6spy - 2021-03-31 11:12:25 | 耗时 30 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'wangminghui' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-03-31 11:12:25.548 febs [restartedMain] INFO  p6spy - 2021-03-31 11:12:25 | 耗时 6 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'wangminghui';
2021-03-31 11:12:25.568 febs [restartedMain] INFO  p6spy - 2021-03-31 11:12:25 | 耗时 6 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'wangminghui' and m.perms is not null and m.perms <> '';
2021-03-31 11:12:25.576 febs [restartedMain] INFO  p6spy - 2021-03-31 11:12:25 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='124';
2021-03-31 11:12:25.627 febs [restartedMain] INFO  p6spy - 2021-03-31 11:12:25 | 耗时 34 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'wangfenfen1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-03-31 11:12:25.684 febs [restartedMain] INFO  p6spy - 2021-03-31 11:12:25 | 耗时 4 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'wangfenfen1';
2021-03-31 11:12:25.698 febs [restartedMain] INFO  p6spy - 2021-03-31 11:12:25 | 耗时 4 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'wangfenfen1' and m.perms is not null and m.perms <> '';
2021-03-31 11:12:25.706 febs [restartedMain] INFO  p6spy - 2021-03-31 11:12:25 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='128';
2021-03-31 11:12:25.749 febs [restartedMain] INFO  p6spy - 2021-03-31 11:12:25 | 耗时 28 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'cf' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-03-31 11:12:25.812 febs [restartedMain] INFO  p6spy - 2021-03-31 11:12:25 | 耗时 6 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'cf';
2021-03-31 11:12:25.840 febs [restartedMain] INFO  p6spy - 2021-03-31 11:12:25 | 耗时 7 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'cf' and m.perms is not null and m.perms <> '';
2021-03-31 11:12:25.849 febs [restartedMain] INFO  p6spy - 2021-03-31 11:12:25 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='132';
2021-03-31 11:12:25.862 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2021-03-31 11:12:25.862 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2021-03-31 11:12:25.862 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2021-03-31 11:12:25.862 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -                                                       
2021-03-31 11:12:25.862 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - FEBS 启动完毕，时间：2021-03-31T11:12:25.862
2021-03-31 11:12:25.869 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2+DEFAULT_GROUP
2021-03-31 11:12:25.870 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2, group=DEFAULT_GROUP, cnt=1
2021-03-31 11:12:25.870 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2.yaml+DEFAULT_GROUP
2021-03-31 11:12:25.870 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2.yaml, group=DEFAULT_GROUP, cnt=1
2021-03-31 11:12:25.871 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2-local.yaml+DEFAULT_GROUP
2021-03-31 11:12:25.871 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2-local.yaml, group=DEFAULT_GROUP, cnt=1
2021-03-31 11:12:44.106 febs [http-nio-11101-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-03-31 11:12:44.106 febs [http-nio-11101-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2021-03-31 11:12:44.130 febs [http-nio-11101-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 24 ms
2021-03-31 11:12:48.098 febs [http-nio-11101-exec-3] INFO  c.s.b.sys.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2021-03-31 11:12:48.290 febs [http-nio-11101-exec-3] INFO  p6spy - 2021-03-31 11:12:48 | 耗时 17 ms | SQL 语句：
UPDATE t_user SET last_login_time='2021-03-31T11:12:48.225+0800', user_type=0 WHERE username = 'nanlu';
2021-03-31 11:12:48.324 febs [http-nio-11101-exec-3] INFO  p6spy - 2021-03-31 11:12:48 | 耗时 30 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'nanlu' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-03-31 11:12:48.408 febs [http-nio-11101-exec-3] INFO  p6spy - 2021-03-31 11:12:48 | 耗时 6 ms | SQL 语句：
SELECT DEPT_ID,parent_id,type,dept_name,order_num,create_time,modify_time,dept_code,tenant_id,dept_address,longitude,latitude,province,city,county,town FROM t_dept WHERE parent_id = 1;
2021-03-31 11:12:48.426 febs [http-nio-11101-exec-3] INFO  p6spy - 2021-03-31 11:12:48 | 耗时 7 ms | SQL 语句：
SELECT DEPT_ID,parent_id,type,dept_name,order_num,create_time,modify_time,dept_code,tenant_id,dept_address,longitude,latitude,province,city,county,town FROM t_dept WHERE parent_id = 138100648351629312;
2021-03-31 11:12:48.645 febs [http-nio-11101-exec-3] INFO  p6spy - 2021-03-31 11:12:48 | 耗时 15 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'nanlu', '2021-03-31T11:12:48.488+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1' );
2021-03-31 11:12:49.005 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-03-31 11:12:49 | 耗时 55 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,province,city,county,town,housing FROM t_user WHERE username = 'nanlu';
2021-03-31 11:12:49.069 febs [http-nio-11101-exec-4] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 11:12:49.177 febs [http-nio-11101-exec-4] INFO  p6spy - 2021-03-31 11:12:49 | 耗时 25 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'nanlu') order by m.order_num;
2021-03-31 11:12:54.852 febs [http-nio-11101-exec-6] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 11:12:55.107 febs [http-nio-11101-exec-6] INFO  p6spy - 2021-03-31 11:12:55 | 耗时 14 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-03-31 11:12:55.245 febs [http-nio-11101-exec-6] INFO  p6spy - 2021-03-31 11:12:55 | 耗时 88 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-03-31 11:14:13.748 febs [http-nio-11101-exec-5] INFO  p6spy - 2021-03-31 11:14:13 | 耗时 50 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,province,city,county,town,housing FROM t_user WHERE username = 'nanlu';
2021-03-31 11:14:13.841 febs [http-nio-11101-exec-7] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 11:14:13.857 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-03-31 11:14:13 | 耗时 11 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'nanlu') order by m.order_num;
2021-03-31 11:14:14.497 febs [http-nio-11101-exec-8] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 11:14:14.539 febs [http-nio-11101-exec-8] INFO  p6spy - 2021-03-31 11:14:14 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-03-31 11:14:14.605 febs [http-nio-11101-exec-8] INFO  p6spy - 2021-03-31 11:14:14 | 耗时 63 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-03-31 11:14:25.085 febs [http-nio-11101-exec-9] INFO  p6spy - 2021-03-31 11:14:25 | 耗时 53 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,province,city,county,town,housing FROM t_user WHERE username = 'nanlu';
2021-03-31 11:14:25.176 febs [http-nio-11101-exec-10] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 11:14:25.189 febs [http-nio-11101-exec-10] INFO  p6spy - 2021-03-31 11:14:25 | 耗时 10 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'nanlu') order by m.order_num;
2021-03-31 11:14:25.751 febs [http-nio-11101-exec-14] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 11:14:25.788 febs [http-nio-11101-exec-14] INFO  p6spy - 2021-03-31 11:14:25 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-03-31 11:14:25.848 febs [http-nio-11101-exec-14] INFO  p6spy - 2021-03-31 11:14:25 | 耗时 57 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-03-31 11:17:20.160 febs [http-nio-11101-exec-12] INFO  p6spy - 2021-03-31 11:17:20 | 耗时 59 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,province,city,county,town,housing FROM t_user WHERE username = 'nanlu';
2021-03-31 11:17:20.313 febs [http-nio-11101-exec-13] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 11:17:20.331 febs [http-nio-11101-exec-13] INFO  p6spy - 2021-03-31 11:17:20 | 耗时 11 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'nanlu') order by m.order_num;
2021-03-31 13:36:54.528 febs [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-03-31 13:36:54.903 febs [restartedMain] INFO  c.a.n.c.c.i.LocalConfigInfoProcessor - LOCAL_SNAPSHOT_PATH:C:\Users\Dukzzz\nacos\config
2021-03-31 13:36:54.926 febs [restartedMain] INFO  c.a.nacos.client.config.impl.Limiter - limitTime:5.0
2021-03-31 13:36:55.272 febs [restartedMain] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-brd-sys2-local.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys2.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys2,DEFAULT_GROUP'}]
2021-03-31 13:36:55.276 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - The following profiles are active: local
2021-03-31 13:36:56.371 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-03-31 13:36:56.374 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-03-31 13:36:56.413 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 27ms. Found 0 Redis repository interfaces.
2021-03-31 13:36:56.661 febs [restartedMain] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=05c68cbb-8ddd-3dc7-b64b-af42b1b4e22c
2021-03-31 13:36:56.815 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [com.smart.brd.sys.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$2de8039b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 13:36:56.881 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 13:36:56.948 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$4a997950] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 13:36:56.956 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 13:36:56.959 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 13:36:56.993 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [com.smart.brd.sys.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$68a72f97] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 13:36:57.247 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.smart.brd.sys.common.config.RedisConfig$$EnhancerBySpringCGLIB$$fa03c5eb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 13:36:57.261 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 13:36:57.263 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [com.smart.brd.sys.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 13:36:57.305 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 13:36:57.311 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [com.smart.brd.sys.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$190719bd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 13:36:57.313 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 13:36:57.318 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$1ed37519] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 13:36:57.326 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 13:36:57.328 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 13:36:57.331 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2021-03-31 13:36:57.338 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2021-03-31 13:36:57.540 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2021-03-31 13:36:57.540 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2021-03-31 13:36:57.540 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2021-03-31 13:36:57.540 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2021-03-31 13:36:57.540 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 13:36:57.550 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 13:36:57.557 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 13:36:57.988 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 13:36:57.994 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 13:36:58.019 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 13:36:58.022 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy144] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 13:36:58.027 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 13:36:58.028 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy145] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 13:36:58.029 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [com.smart.brd.sys.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 13:36:58.055 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [com.smart.brd.sys.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 13:36:58.070 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 13:36:58.071 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy148] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 13:36:58.072 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [com.smart.brd.sys.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 13:36:58.089 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 13:36:58.091 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy150] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 13:36:58.092 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [com.smart.brd.sys.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 13:36:58.131 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 13:36:58.132 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy152] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 13:36:58.133 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [com.smart.brd.sys.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 13:36:58.149 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 13:36:58.150 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [com.sun.proxy.$Proxy154] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 13:36:58.154 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 13:36:58.156 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy155] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 13:36:58.157 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [com.smart.brd.sys.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 13:36:58.170 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 13:36:58.172 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 13:36:58.174 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 13:36:58.179 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 13:36:58.180 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 13:36:58.184 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 13:36:58.186 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 13:36:58.190 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 13:36:58.195 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 13:36:58.197 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 13:36:58.202 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 13:36:58.204 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 13:36:58.221 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 13:36:58.235 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [com.smart.brd.sys.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 13:36:58.235 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [com.smart.brd.sys.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 13:36:58.235 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [com.smart.brd.sys.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 13:36:58.242 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 13:36:58.255 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-31 13:36:58.629 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 11101 (http)
2021-03-31 13:36:58.637 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-11101"]
2021-03-31 13:36:58.638 febs [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2021-03-31 13:36:58.638 febs [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.31]
2021-03-31 13:36:58.738 febs [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2021-03-31 13:36:58.739 febs [restartedMain] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3432 ms
2021-03-31 13:36:58.833 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-03-31 13:36:58.841 febs [restartedMain] INFO  c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@59d911e8
2021-03-31 13:36:59.424 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2021-03-31 13:36:59.435 febs [restartedMain] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-03-31 13:36:59.435 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.2 created.
2021-03-31 13:36:59.436 febs [restartedMain] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2021-03-31 13:36:59.436 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-03-31 13:36:59.436 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2021-03-31 13:36:59.436 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.2
2021-03-31 13:36:59.436 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@3c4c0a28
2021-03-31 13:36:59.491 febs [restartedMain] INFO  p6spy - 2021-03-31 13:36:59 | 耗时 5 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2021-03-31 13:36:59.889 febs [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2021-03-31 13:37:00.219 febs [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-03-31 13:37:00.336 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2021-03-31 13:37:00.385 febs [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2021-03-31 13:37:00.412 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-03-31 13:37:00.766 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2021-03-31 13:37:00.778 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-03-31 13:37:00.779 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Environment :null
2021-03-31 13:37:00.779 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-03-31 13:37:01.484 febs [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2021-03-31 13:37:01.495 febs [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2021-03-31 13:37:01.528 febs [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2021-03-31 13:37:01.539 febs [restartedMain] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2021-03-31 13:37:01.540 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2021-03-31 13:37:01.554 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-11101"]
2021-03-31 13:37:01.578 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 11101 (http) with context path ''
2021-03-31 13:37:01.582 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"192.168.0.103","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":11101,"scheduled":false,"serviceName":"DEFAULT_GROUP@@brd-sys2","stopped":false,"weight":1.0} to beat map.
2021-03-31 13:37:01.643 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [REGISTER-SERVICE] public registering service DEFAULT_GROUP@@brd-sys2 with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"192.168.0.103","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":11101,"weight":1.0}
2021-03-31 13:37:01.662 febs [scheduling-1] INFO  c.s.brd.sys.common.task.CacheTask - delete expired user
2021-03-31 13:37:01.708 febs [restartedMain] INFO  c.a.c.n.r.NacosServiceRegistry - nacos registry, DEFAULT_GROUP brd-sys2 192.168.0.103:11101 register finished
2021-03-31 13:37:01.845 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - Started BrdSysApplication in 8.144 seconds (JVM running for 9.289)
2021-03-31 13:37:01.849 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - Redis连接中 ······
2021-03-31 13:37:01.854 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存初始化 ······
2021-03-31 13:37:01.854 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存用户数据 ······
2021-03-31 13:37:01.895 febs [restartedMain] INFO  p6spy - 2021-03-31 13:37:01 | 耗时 10 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,province,city,county,town,housing FROM t_user;
2021-03-31 13:37:01.913 febs [restartedMain] INFO  p6spy - 2021-03-31 13:37:01 | 耗时 8 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sysadmin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-03-31 13:37:02.070 febs [restartedMain] INFO  p6spy - 2021-03-31 13:37:02 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin';
2021-03-31 13:37:02.098 febs [restartedMain] INFO  p6spy - 2021-03-31 13:37:02 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'sysadmin' and m.perms is not null and m.perms <> '';
2021-03-31 13:37:02.119 febs [restartedMain] INFO  p6spy - 2021-03-31 13:37:02 | 耗时 4 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='-1';
2021-03-31 13:37:02.176 febs [restartedMain] INFO  p6spy - 2021-03-31 13:37:02 | 耗时 55 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'nanlu' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-03-31 13:37:02.240 febs [restartedMain] INFO  p6spy - 2021-03-31 13:37:02 | 耗时 11 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'nanlu';
2021-03-31 13:37:02.262 febs [restartedMain] INFO  p6spy - 2021-03-31 13:37:02 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'nanlu' and m.perms is not null and m.perms <> '';
2021-03-31 13:37:02.285 febs [restartedMain] INFO  p6spy - 2021-03-31 13:37:02 | 耗时 10 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1';
2021-03-31 13:37:02.344 febs [restartedMain] INFO  p6spy - 2021-03-31 13:37:02 | 耗时 57 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'zhangsan' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-03-31 13:37:02.419 febs [restartedMain] INFO  p6spy - 2021-03-31 13:37:02 | 耗时 8 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'zhangsan';
2021-03-31 13:37:02.428 febs [restartedMain] INFO  p6spy - 2021-03-31 13:37:02 | 耗时 6 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'zhangsan' and m.perms is not null and m.perms <> '';
2021-03-31 13:37:02.434 febs [restartedMain] INFO  p6spy - 2021-03-31 13:37:02 | 耗时 4 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='118';
2021-03-31 13:37:02.506 febs [restartedMain] INFO  p6spy - 2021-03-31 13:37:02 | 耗时 55 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'wangminghui' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-03-31 13:37:02.569 febs [restartedMain] INFO  p6spy - 2021-03-31 13:37:02 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'wangminghui';
2021-03-31 13:37:02.591 febs [restartedMain] INFO  p6spy - 2021-03-31 13:37:02 | 耗时 9 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'wangminghui' and m.perms is not null and m.perms <> '';
2021-03-31 13:37:02.607 febs [restartedMain] INFO  p6spy - 2021-03-31 13:37:02 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='124';
2021-03-31 13:37:02.676 febs [restartedMain] INFO  p6spy - 2021-03-31 13:37:02 | 耗时 54 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'wangfenfen1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-03-31 13:37:02.737 febs [restartedMain] INFO  p6spy - 2021-03-31 13:37:02 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'wangfenfen1';
2021-03-31 13:37:02.761 febs [restartedMain] INFO  p6spy - 2021-03-31 13:37:02 | 耗时 4 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'wangfenfen1' and m.perms is not null and m.perms <> '';
2021-03-31 13:37:02.790 febs [restartedMain] INFO  p6spy - 2021-03-31 13:37:02 | 耗时 8 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='128';
2021-03-31 13:37:02.856 febs [restartedMain] INFO  p6spy - 2021-03-31 13:37:02 | 耗时 54 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'cf' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-03-31 13:37:02.913 febs [restartedMain] INFO  p6spy - 2021-03-31 13:37:02 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'cf';
2021-03-31 13:37:02.929 febs [restartedMain] INFO  p6spy - 2021-03-31 13:37:02 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'cf' and m.perms is not null and m.perms <> '';
2021-03-31 13:37:02.949 febs [restartedMain] INFO  p6spy - 2021-03-31 13:37:02 | 耗时 6 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='132';
2021-03-31 13:37:03.016 febs [restartedMain] INFO  p6spy - 2021-03-31 13:37:03 | 耗时 56 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'Wang' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-03-31 13:37:03.073 febs [restartedMain] INFO  p6spy - 2021-03-31 13:37:03 | 耗时 4 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'Wang';
2021-03-31 13:37:03.089 febs [restartedMain] INFO  p6spy - 2021-03-31 13:37:03 | 耗时 4 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'Wang' and m.perms is not null and m.perms <> '';
2021-03-31 13:37:03.104 febs [restartedMain] INFO  p6spy - 2021-03-31 13:37:03 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='133';
2021-03-31 13:37:03.169 febs [restartedMain] INFO  p6spy - 2021-03-31 13:37:03 | 耗时 53 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'wangfen' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-03-31 13:37:03.231 febs [restartedMain] INFO  p6spy - 2021-03-31 13:37:03 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'wangfen';
2021-03-31 13:37:03.250 febs [restartedMain] INFO  p6spy - 2021-03-31 13:37:03 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'wangfen' and m.perms is not null and m.perms <> '';
2021-03-31 13:37:03.269 febs [restartedMain] INFO  p6spy - 2021-03-31 13:37:03 | 耗时 4 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='134';
2021-03-31 13:37:03.332 febs [restartedMain] INFO  p6spy - 2021-03-31 13:37:03 | 耗时 53 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fanyu1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-03-31 13:37:03.393 febs [restartedMain] INFO  p6spy - 2021-03-31 13:37:03 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fanyu1';
2021-03-31 13:37:03.410 febs [restartedMain] INFO  p6spy - 2021-03-31 13:37:03 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'fanyu1' and m.perms is not null and m.perms <> '';
2021-03-31 13:37:03.426 febs [restartedMain] INFO  p6spy - 2021-03-31 13:37:03 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='136';
2021-03-31 13:37:03.490 febs [restartedMain] INFO  p6spy - 2021-03-31 13:37:03 | 耗时 53 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'zheng' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-03-31 13:37:03.550 febs [restartedMain] INFO  p6spy - 2021-03-31 13:37:03 | 耗时 4 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'zheng';
2021-03-31 13:37:03.566 febs [restartedMain] INFO  p6spy - 2021-03-31 13:37:03 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'zheng' and m.perms is not null and m.perms <> '';
2021-03-31 13:37:03.585 febs [restartedMain] INFO  p6spy - 2021-03-31 13:37:03 | 耗时 6 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='137';
2021-03-31 13:37:03.659 febs [restartedMain] INFO  p6spy - 2021-03-31 13:37:03 | 耗时 57 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'like' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-03-31 13:37:03.718 febs [restartedMain] INFO  p6spy - 2021-03-31 13:37:03 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'like';
2021-03-31 13:37:03.735 febs [restartedMain] INFO  p6spy - 2021-03-31 13:37:03 | 耗时 6 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'like' and m.perms is not null and m.perms <> '';
2021-03-31 13:37:03.758 febs [restartedMain] INFO  p6spy - 2021-03-31 13:37:03 | 耗时 6 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='138';
2021-03-31 13:37:03.829 febs [restartedMain] INFO  p6spy - 2021-03-31 13:37:03 | 耗时 56 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'test' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-03-31 13:37:03.890 febs [restartedMain] INFO  p6spy - 2021-03-31 13:37:03 | 耗时 7 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'test';
2021-03-31 13:37:03.906 febs [restartedMain] INFO  p6spy - 2021-03-31 13:37:03 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'test' and m.perms is not null and m.perms <> '';
2021-03-31 13:37:03.925 febs [restartedMain] INFO  p6spy - 2021-03-31 13:37:03 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='139';
2021-03-31 13:37:03.941 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2021-03-31 13:37:03.941 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2021-03-31 13:37:03.941 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2021-03-31 13:37:03.941 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -                                                       
2021-03-31 13:37:03.941 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - FEBS 启动完毕，时间：2021-03-31T13:37:03.941
2021-03-31 13:37:03.943 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2+DEFAULT_GROUP
2021-03-31 13:37:03.944 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2, group=DEFAULT_GROUP, cnt=1
2021-03-31 13:37:03.944 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2.yaml+DEFAULT_GROUP
2021-03-31 13:37:03.944 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2.yaml, group=DEFAULT_GROUP, cnt=1
2021-03-31 13:37:03.944 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2-local.yaml+DEFAULT_GROUP
2021-03-31 13:37:03.944 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2-local.yaml, group=DEFAULT_GROUP, cnt=1
2021-03-31 13:37:32.959 febs [http-nio-11101-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-03-31 13:37:32.959 febs [http-nio-11101-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2021-03-31 13:37:32.967 febs [http-nio-11101-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 8 ms
2021-03-31 13:37:36.370 febs [http-nio-11101-exec-3] INFO  c.s.b.sys.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2021-03-31 13:37:36.466 febs [http-nio-11101-exec-3] INFO  p6spy - 2021-03-31 13:37:36 | 耗时 49 ms | SQL 语句：
UPDATE t_user SET last_login_time='2021-03-31T13:37:36.400+0800', user_type=0 WHERE username = 'sysadmin';
2021-03-31 13:37:36.520 febs [http-nio-11101-exec-3] INFO  p6spy - 2021-03-31 13:37:36 | 耗时 52 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sysadmin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-03-31 13:37:36.605 febs [http-nio-11101-exec-3] INFO  p6spy - 2021-03-31 13:37:36 | 耗时 9 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'sysadmin', '2021-03-31T13:37:36.589+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1' );
2021-03-31 13:37:36.750 febs [http-nio-11101-exec-3] INFO  p6spy - 2021-03-31 13:37:36 | 耗时 4 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='-1';
2021-03-31 13:37:37.149 febs [http-nio-11101-exec-4] INFO  p6spy - 2021-03-31 13:37:37 | 耗时 58 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-03-31 13:37:37.353 febs [http-nio-11101-exec-2] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 13:37:37.380 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-03-31 13:37:37 | 耗时 11 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin') order by m.order_num;
2021-03-31 13:37:37.580 febs [http-nio-11101-exec-6] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 13:37:42.012 febs [http-nio-11101-exec-5] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 13:37:42.075 febs [http-nio-11101-exec-5] INFO  p6spy - 2021-03-31 13:37:42 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-03-31 13:37:42.178 febs [http-nio-11101-exec-5] INFO  p6spy - 2021-03-31 13:37:42 | 耗时 96 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-03-31 13:37:53.613 febs [http-nio-11101-exec-7] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 13:37:53.648 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-03-31 13:37:53 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role ) TOTAL;
2021-03-31 13:37:53.654 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-03-31 13:37:53 | 耗时 4 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role LIMIT 0,10;
2021-03-31 13:38:00.886 febs [http-nio-11101-exec-8] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 13:38:00.911 febs [http-nio-11101-exec-8] INFO  p6spy - 2021-03-31 13:38:00 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-03-31 13:38:00.955 febs [http-nio-11101-exec-8] INFO  p6spy - 2021-03-31 13:38:00 | 耗时 43 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-03-31 13:41:01.697 febs [http-nio-11101-exec-9] INFO  p6spy - 2021-03-31 13:41:01 | 耗时 53 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-03-31 13:41:01.846 febs [http-nio-11101-exec-10] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 13:41:01.858 febs [http-nio-11101-exec-10] INFO  p6spy - 2021-03-31 13:41:01 | 耗时 9 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin') order by m.order_num;
2021-03-31 13:41:07.679 febs [http-nio-11101-exec-11] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 13:41:07.703 febs [http-nio-11101-exec-11] INFO  p6spy - 2021-03-31 13:41:07 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role ) TOTAL;
2021-03-31 13:41:07.708 febs [http-nio-11101-exec-11] INFO  p6spy - 2021-03-31 13:41:07 | 耗时 4 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role LIMIT 0,10;
2021-03-31 13:41:09.653 febs [http-nio-11101-exec-12] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 13:41:09.677 febs [http-nio-11101-exec-12] INFO  p6spy - 2021-03-31 13:41:09 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-03-31 13:41:09.719 febs [http-nio-11101-exec-12] INFO  p6spy - 2021-03-31 13:41:09 | 耗时 41 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-03-31 13:41:14.333 febs [http-nio-11101-exec-13] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 13:41:14.358 febs [http-nio-11101-exec-13] INFO  p6spy - 2021-03-31 13:41:14 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-03-31 13:41:14.396 febs [http-nio-11101-exec-13] INFO  p6spy - 2021-03-31 13:41:14 | 耗时 36 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 10,10;
2021-03-31 13:41:16.190 febs [http-nio-11101-exec-14] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 13:41:16.215 febs [http-nio-11101-exec-14] INFO  p6spy - 2021-03-31 13:41:16 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-03-31 13:41:16.263 febs [http-nio-11101-exec-14] INFO  p6spy - 2021-03-31 13:41:16 | 耗时 46 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-03-31 13:41:19.263 febs [http-nio-11101-exec-15] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 13:41:19.285 febs [http-nio-11101-exec-15] INFO  p6spy - 2021-03-31 13:41:19 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-03-31 13:41:19.327 febs [http-nio-11101-exec-15] INFO  p6spy - 2021-03-31 13:41:19 | 耗时 40 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 10,10;
2021-03-31 13:41:59.005 febs [http-nio-11101-exec-17] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 13:41:59.026 febs [http-nio-11101-exec-17] INFO  p6spy - 2021-03-31 13:41:59 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role ) TOTAL;
2021-03-31 13:41:59.032 febs [http-nio-11101-exec-17] INFO  p6spy - 2021-03-31 13:41:59 | 耗时 4 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role LIMIT 0,10;
2021-03-31 13:42:00.848 febs [http-nio-11101-exec-16] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 13:42:00.874 febs [http-nio-11101-exec-16] INFO  p6spy - 2021-03-31 13:42:00 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-03-31 13:42:00.917 febs [http-nio-11101-exec-16] INFO  p6spy - 2021-03-31 13:42:00 | 耗时 42 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-03-31 13:42:02.714 febs [http-nio-11101-exec-18] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 13:42:02.736 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-03-31 13:42:02 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role ) TOTAL;
2021-03-31 13:42:02.742 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-03-31 13:42:02 | 耗时 4 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role LIMIT 0,10;
2021-03-31 13:42:03.081 febs [http-nio-11101-exec-21] INFO  p6spy - 2021-03-31 13:42:03 | 耗时 57 ms | SQL 语句：
SELECT DEPT_ID,parent_id,type,dept_name,order_num,create_time,modify_time,dept_code,tenant_id,dept_address,longitude,latitude,province,city,county,town FROM t_dept ORDER BY order_num ASC;
2021-03-31 13:42:13.214 febs [http-nio-11101-exec-20] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 13:42:13.266 febs [http-nio-11101-exec-20] INFO  p6spy - 2021-03-31 13:42:13 | 耗时 34 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,province,city,county,town,housing FROM t_user WHERE username = '222222';
2021-03-31 13:42:13.372 febs [http-nio-11101-exec-20] INFO  p6spy - 2021-03-31 13:42:13 | 耗时 57 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,province,city,county,town,housing FROM t_user WHERE username = '222222';
2021-03-31 13:42:13.421 febs [http-nio-11101-exec-20] INFO  p6spy - 2021-03-31 13:42:13 | 耗时 45 ms | SQL 语句：
INSERT INTO t_user ( username, password, dept_id, tenant_id, mobile, status, create_time, gender, avatar, user_type, is_xcx, is_show ) VALUES ( '222222', 'd713d9e96d8020628488896ac159f3d0', 1, 0, '13333333333', '1', '2021-03-31T13:42:13.373+0800', '2', 'default.jpg', 0, 0, 1 );
2021-03-31 13:42:13.432 febs [http-nio-11101-exec-20] INFO  p6spy - 2021-03-31 13:42:13 | 耗时 8 ms | SQL 语句：
INSERT INTO t_user_role ( user_id, role_id ) VALUES ( 140, 1 );
2021-03-31 13:42:13.442 febs [http-nio-11101-exec-20] INFO  p6spy - 2021-03-31 13:42:13 | 耗时 8 ms | SQL 语句：
INSERT INTO t_user_config ( USER_ID, theme, layout, multi_page, fix_siderbar, fix_header, color ) VALUES ( 140, 'dark', 'side', '0', '1', '1', 'rgb(66, 185, 131)' );
2021-03-31 13:42:13.499 febs [http-nio-11101-exec-20] INFO  p6spy - 2021-03-31 13:42:13 | 耗时 54 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = '222222' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-03-31 13:42:13.557 febs [http-nio-11101-exec-20] INFO  p6spy - 2021-03-31 13:42:13 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = '222222';
2021-03-31 13:42:13.581 febs [http-nio-11101-exec-20] INFO  p6spy - 2021-03-31 13:42:13 | 耗时 11 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = '222222' and m.perms is not null and m.perms <> '';
2021-03-31 13:42:13.607 febs [http-nio-11101-exec-20] INFO  p6spy - 2021-03-31 13:42:13 | 耗时 4 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='140';
2021-03-31 13:42:13.650 febs [asyncTaskExecutor-1] INFO  p6spy - 2021-03-31 13:42:13 | 耗时 9 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'sysadmin', '新增用户', 402, 'com.smart.brd.sys.system.controller.UserController.addUser()', ' user: "User(userId=140, username=222222, password=d713d9e96d8020628488896ac159f3d0, deptId=1, deptIds=null, tenantId=0, deptName=null, email=null, mobile=13333333333, status=1, createTime=Wed Mar 31 13:42:13 CST 2021, modifyTime=null, lastLoginTime=null, gender=2, description=null, avatar=default.jpg, roleId=1, roleName=null, expireTime=null, sortField=null, sortOrder=null, createTimeFrom=null, createTimeTo=null, id=null, userType=0, condition=null, openId=null, isXcx=0, isShow=1, province=null, city=null, county=null, town=null, housing=null)"', '127.0.0.1', '2021-03-31T13:42:13.638+0800', '内网IP|0|0|内网IP|内网IP' );
2021-03-31 13:42:13.727 febs [http-nio-11101-exec-19] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 13:42:13.749 febs [http-nio-11101-exec-19] INFO  p6spy - 2021-03-31 13:42:13 | 耗时 7 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-03-31 13:42:13.792 febs [http-nio-11101-exec-19] INFO  p6spy - 2021-03-31 13:42:13 | 耗时 42 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-03-31 13:42:16.633 febs [http-nio-11101-exec-22] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 13:42:16.663 febs [http-nio-11101-exec-22] INFO  p6spy - 2021-03-31 13:42:16 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-03-31 13:42:16.704 febs [http-nio-11101-exec-22] INFO  p6spy - 2021-03-31 13:42:16 | 耗时 40 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 10,10;
2021-03-31 13:42:22.716 febs [http-nio-11101-exec-23] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 13:42:33.874 febs [http-nio-11101-exec-24] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 13:42:42.804 febs [http-nio-11101-exec-26] INFO  c.s.b.sys.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2021-03-31 13:42:42.829 febs [http-nio-11101-exec-26] INFO  p6spy - 2021-03-31 13:42:42 | 耗时 9 ms | SQL 语句：
UPDATE t_user SET last_login_time='2021-03-31T13:42:42.818+0800', user_type=0 WHERE username = 'nanlu';
2021-03-31 13:42:42.883 febs [http-nio-11101-exec-26] INFO  p6spy - 2021-03-31 13:42:42 | 耗时 53 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'nanlu' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-03-31 13:42:42.950 febs [http-nio-11101-exec-26] INFO  p6spy - 2021-03-31 13:42:42 | 耗时 5 ms | SQL 语句：
SELECT DEPT_ID,parent_id,type,dept_name,order_num,create_time,modify_time,dept_code,tenant_id,dept_address,longitude,latitude,province,city,county,town FROM t_dept WHERE parent_id = 1;
2021-03-31 13:42:42.956 febs [http-nio-11101-exec-26] INFO  p6spy - 2021-03-31 13:42:42 | 耗时 5 ms | SQL 语句：
SELECT DEPT_ID,parent_id,type,dept_name,order_num,create_time,modify_time,dept_code,tenant_id,dept_address,longitude,latitude,province,city,county,town FROM t_dept WHERE parent_id = 138100648351629312;
2021-03-31 13:42:42.972 febs [http-nio-11101-exec-26] INFO  p6spy - 2021-03-31 13:42:42 | 耗时 10 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'nanlu', '2021-03-31T13:42:42.961+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1' );
2021-03-31 13:42:43.157 febs [http-nio-11101-exec-27] INFO  p6spy - 2021-03-31 13:42:43 | 耗时 43 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,province,city,county,town,housing FROM t_user WHERE username = 'nanlu';
2021-03-31 13:42:43.209 febs [http-nio-11101-exec-28] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 13:42:43.221 febs [http-nio-11101-exec-28] INFO  p6spy - 2021-03-31 13:42:43 | 耗时 9 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'nanlu') order by m.order_num;
2021-03-31 13:42:43.470 febs [http-nio-11101-exec-29] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 13:42:43.489 febs [http-nio-11101-exec-29] INFO  p6spy - 2021-03-31 13:42:43 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-03-31 13:42:43.533 febs [http-nio-11101-exec-29] INFO  p6spy - 2021-03-31 13:42:43 | 耗时 42 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-03-31 13:42:48.353 febs [http-nio-11101-exec-30] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 13:42:48.380 febs [http-nio-11101-exec-30] INFO  p6spy - 2021-03-31 13:42:48 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-03-31 13:42:48.422 febs [http-nio-11101-exec-30] INFO  p6spy - 2021-03-31 13:42:48 | 耗时 41 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 10,10;
2021-03-31 13:42:52.066 febs [http-nio-11101-exec-31] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 13:45:15.581 febs [http-nio-11101-exec-32] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 13:49:22.281 febs [http-nio-11101-exec-33] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 13:56:17.780 febs [http-nio-11101-exec-34] INFO  p6spy - 2021-03-31 13:56:17 | 耗时 65 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,province,city,county,town,housing FROM t_user WHERE username = 'nanlu';
2021-03-31 13:56:17.944 febs [http-nio-11101-exec-35] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 13:56:17.961 febs [http-nio-11101-exec-35] INFO  p6spy - 2021-03-31 13:56:17 | 耗时 15 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'nanlu') order by m.order_num;
2021-03-31 13:56:18.457 febs [http-nio-11101-exec-36] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 13:56:18.483 febs [http-nio-11101-exec-36] INFO  p6spy - 2021-03-31 13:56:18 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-03-31 13:56:18.524 febs [http-nio-11101-exec-36] INFO  p6spy - 2021-03-31 13:56:18 | 耗时 40 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-03-31 13:56:22.089 febs [http-nio-11101-exec-37] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 13:56:22.118 febs [http-nio-11101-exec-37] INFO  p6spy - 2021-03-31 13:56:22 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-03-31 13:56:22.164 febs [http-nio-11101-exec-37] INFO  p6spy - 2021-03-31 13:56:22 | 耗时 45 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 10,10;
2021-03-31 13:56:24.451 febs [http-nio-11101-exec-38] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 13:58:53.822 febs [http-nio-11101-exec-40] INFO  p6spy - 2021-03-31 13:58:53 | 耗时 56 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,province,city,county,town,housing FROM t_user WHERE username = 'nanlu';
2021-03-31 13:58:53.970 febs [http-nio-11101-exec-41] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 13:58:53.988 febs [http-nio-11101-exec-41] INFO  p6spy - 2021-03-31 13:58:53 | 耗时 16 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'nanlu') order by m.order_num;
2021-03-31 13:58:54.507 febs [http-nio-11101-exec-42] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 13:58:54.536 febs [http-nio-11101-exec-42] INFO  p6spy - 2021-03-31 13:58:54 | 耗时 8 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-03-31 13:58:54.549 febs [http-nio-11101-exec-42] INFO  p6spy - 2021-03-31 13:58:54 | 耗时 11 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-03-31 13:59:37.858 febs [http-nio-11101-exec-45] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 13:59:37.885 febs [http-nio-11101-exec-45] INFO  p6spy - 2021-03-31 13:59:37 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role ) TOTAL;
2021-03-31 13:59:37.892 febs [http-nio-11101-exec-45] INFO  p6spy - 2021-03-31 13:59:37 | 耗时 6 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role LIMIT 0,10;
2021-03-31 13:59:38.643 febs [http-nio-11101-exec-46] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 13:59:38.668 febs [http-nio-11101-exec-46] INFO  p6spy - 2021-03-31 13:59:38 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-03-31 13:59:38.712 febs [http-nio-11101-exec-46] INFO  p6spy - 2021-03-31 13:59:38 | 耗时 42 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-03-31 13:59:42.423 febs [http-nio-11101-exec-47] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 13:59:42.450 febs [http-nio-11101-exec-47] INFO  p6spy - 2021-03-31 13:59:42 | 耗时 8 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role ) TOTAL;
2021-03-31 13:59:42.455 febs [http-nio-11101-exec-47] INFO  p6spy - 2021-03-31 13:59:42 | 耗时 5 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role LIMIT 0,10;
2021-03-31 13:59:43.411 febs [http-nio-11101-exec-48] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 13:59:43.441 febs [http-nio-11101-exec-48] INFO  p6spy - 2021-03-31 13:59:43 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-03-31 13:59:43.486 febs [http-nio-11101-exec-48] INFO  p6spy - 2021-03-31 13:59:43 | 耗时 43 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-03-31 13:59:45.820 febs [http-nio-11101-exec-50] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 13:59:45.907 febs [http-nio-11101-exec-50] INFO  p6spy - 2021-03-31 13:59:45 | 耗时 51 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role ) TOTAL;
2021-03-31 13:59:45.957 febs [http-nio-11101-exec-50] INFO  p6spy - 2021-03-31 13:59:45 | 耗时 49 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role LIMIT 0,10;
2021-03-31 13:59:55.443 febs [http-nio-11101-exec-49] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 13:59:55.486 febs [http-nio-11101-exec-49] INFO  p6spy - 2021-03-31 13:59:55 | 耗时 16 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu ORDER BY order_num ASC;
2021-03-31 13:59:57.205 febs [http-nio-11101-exec-1] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 13:59:57.232 febs [http-nio-11101-exec-1] INFO  p6spy - 2021-03-31 13:59:57 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role ) TOTAL;
2021-03-31 13:59:57.238 febs [http-nio-11101-exec-1] INFO  p6spy - 2021-03-31 13:59:57 | 耗时 5 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role LIMIT 0,10;
2021-03-31 14:00:01.464 febs [http-nio-11101-exec-3] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 14:00:01.490 febs [http-nio-11101-exec-3] INFO  p6spy - 2021-03-31 14:00:01 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-03-31 14:00:01.538 febs [http-nio-11101-exec-3] INFO  p6spy - 2021-03-31 14:00:01 | 耗时 46 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-03-31 14:00:03.525 febs [http-nio-11101-exec-4] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 14:00:03.556 febs [http-nio-11101-exec-4] INFO  p6spy - 2021-03-31 14:00:03 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role ) TOTAL;
2021-03-31 14:00:03.561 febs [http-nio-11101-exec-4] INFO  p6spy - 2021-03-31 14:00:03 | 耗时 4 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role LIMIT 0,10;
2021-03-31 14:00:10.033 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-03-31 14:00:10 | 耗时 61 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,province,city,county,town,housing FROM t_user WHERE username = 'nanlu';
2021-03-31 14:00:10.084 febs [http-nio-11101-exec-6] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 14:00:10.098 febs [http-nio-11101-exec-6] INFO  p6spy - 2021-03-31 14:00:10 | 耗时 13 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'nanlu') order by m.order_num;
2021-03-31 14:00:10.434 febs [http-nio-11101-exec-5] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 14:00:10.456 febs [http-nio-11101-exec-5] INFO  p6spy - 2021-03-31 14:00:10 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role ) TOTAL;
2021-03-31 14:00:10.461 febs [http-nio-11101-exec-5] INFO  p6spy - 2021-03-31 14:00:10 | 耗时 4 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role LIMIT 0,10;
2021-03-31 14:00:13.928 febs [http-nio-11101-exec-7] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 14:00:13.952 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-03-31 14:00:13 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-03-31 14:00:13.992 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-03-31 14:00:13 | 耗时 39 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-03-31 14:00:17.180 febs [http-nio-11101-exec-8] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 14:00:17.209 febs [http-nio-11101-exec-8] INFO  p6spy - 2021-03-31 14:00:17 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-03-31 14:00:17.245 febs [http-nio-11101-exec-8] INFO  p6spy - 2021-03-31 14:00:17 | 耗时 34 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 10,10;
2021-03-31 14:00:19.882 febs [http-nio-11101-exec-9] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 14:00:19.904 febs [http-nio-11101-exec-9] INFO  p6spy - 2021-03-31 14:00:19 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-03-31 14:00:19.940 febs [http-nio-11101-exec-9] INFO  p6spy - 2021-03-31 14:00:19 | 耗时 36 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-03-31 14:01:42.749 febs [http-nio-11101-exec-10] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 14:01:42.772 febs [http-nio-11101-exec-10] INFO  p6spy - 2021-03-31 14:01:42 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-03-31 14:01:42.815 febs [http-nio-11101-exec-10] INFO  p6spy - 2021-03-31 14:01:42 | 耗时 41 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-03-31 14:01:45.198 febs [http-nio-11101-exec-11] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 14:01:45.221 febs [http-nio-11101-exec-11] INFO  p6spy - 2021-03-31 14:01:45 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role ) TOTAL;
2021-03-31 14:01:45.226 febs [http-nio-11101-exec-11] INFO  p6spy - 2021-03-31 14:01:45 | 耗时 4 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role LIMIT 0,10;
2021-03-31 14:01:46.878 febs [http-nio-11101-exec-12] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 14:01:46.904 febs [http-nio-11101-exec-12] INFO  p6spy - 2021-03-31 14:01:46 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role ) TOTAL;
2021-03-31 14:01:46.910 febs [http-nio-11101-exec-12] INFO  p6spy - 2021-03-31 14:01:46 | 耗时 4 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role LIMIT 10,10;
2021-03-31 14:01:49.234 febs [http-nio-11101-exec-13] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 14:01:49.257 febs [http-nio-11101-exec-13] INFO  p6spy - 2021-03-31 14:01:49 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role ) TOTAL;
2021-03-31 14:01:49.262 febs [http-nio-11101-exec-13] INFO  p6spy - 2021-03-31 14:01:49 | 耗时 4 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role LIMIT 0,10;
2021-03-31 14:01:52.259 febs [http-nio-11101-exec-14] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 14:01:52.283 febs [http-nio-11101-exec-14] INFO  p6spy - 2021-03-31 14:01:52 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-03-31 14:01:52.326 febs [http-nio-11101-exec-14] INFO  p6spy - 2021-03-31 14:01:52 | 耗时 42 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-03-31 14:02:01.963 febs [http-nio-11101-exec-15] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 14:02:01.986 febs [http-nio-11101-exec-15] INFO  p6spy - 2021-03-31 14:02:01 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-03-31 14:02:02.032 febs [http-nio-11101-exec-15] INFO  p6spy - 2021-03-31 14:02:02 | 耗时 45 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 10,10;
2021-03-31 14:02:24.507 febs [http-nio-11101-exec-17] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 14:02:24.528 febs [http-nio-11101-exec-17] INFO  p6spy - 2021-03-31 14:02:24 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role ) TOTAL;
2021-03-31 14:02:24.534 febs [http-nio-11101-exec-17] INFO  p6spy - 2021-03-31 14:02:24 | 耗时 4 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role LIMIT 0,10;
2021-03-31 14:02:26.675 febs [http-nio-11101-exec-16] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 14:02:26.696 febs [http-nio-11101-exec-16] INFO  p6spy - 2021-03-31 14:02:26 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role ) TOTAL;
2021-03-31 14:02:26.702 febs [http-nio-11101-exec-16] INFO  p6spy - 2021-03-31 14:02:26 | 耗时 4 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role LIMIT 10,10;
2021-03-31 14:03:44.753 febs [http-nio-11101-exec-21] INFO  c.s.b.sys.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2021-03-31 14:03:44.779 febs [http-nio-11101-exec-21] INFO  p6spy - 2021-03-31 14:03:44 | 耗时 9 ms | SQL 语句：
UPDATE t_user SET last_login_time='2021-03-31T14:03:44.769+0800', user_type=0 WHERE username = 'sysadmin';
2021-03-31 14:03:44.833 febs [http-nio-11101-exec-21] INFO  p6spy - 2021-03-31 14:03:44 | 耗时 53 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sysadmin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-03-31 14:03:44.963 febs [http-nio-11101-exec-21] INFO  p6spy - 2021-03-31 14:03:44 | 耗时 9 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'sysadmin', '2021-03-31T14:03:44.953+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1' );
2021-03-31 14:03:45.010 febs [http-nio-11101-exec-21] INFO  p6spy - 2021-03-31 14:03:45 | 耗时 4 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='-1';
2021-03-31 14:03:45.061 febs [http-nio-11101-exec-20] INFO  p6spy - 2021-03-31 14:03:45 | 耗时 38 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-03-31 14:03:45.115 febs [http-nio-11101-exec-19] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 14:03:45.128 febs [http-nio-11101-exec-19] INFO  p6spy - 2021-03-31 14:03:45 | 耗时 10 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin') order by m.order_num;
2021-03-31 14:03:45.294 febs [http-nio-11101-exec-22] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 14:03:45.313 febs [http-nio-11101-exec-22] INFO  p6spy - 2021-03-31 14:03:45 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role ) TOTAL;
2021-03-31 14:03:45.319 febs [http-nio-11101-exec-22] INFO  p6spy - 2021-03-31 14:03:45 | 耗时 5 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role LIMIT 0,10;
2021-03-31 14:03:50.759 febs [http-nio-11101-exec-23] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 14:03:50.784 febs [http-nio-11101-exec-23] INFO  p6spy - 2021-03-31 14:03:50 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-03-31 14:03:50.829 febs [http-nio-11101-exec-23] INFO  p6spy - 2021-03-31 14:03:50 | 耗时 44 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-03-31 14:03:52.807 febs [http-nio-11101-exec-24] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 14:03:52.829 febs [http-nio-11101-exec-24] INFO  p6spy - 2021-03-31 14:03:52 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role ) TOTAL;
2021-03-31 14:03:52.836 febs [http-nio-11101-exec-24] INFO  p6spy - 2021-03-31 14:03:52 | 耗时 5 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role LIMIT 0,10;
2021-03-31 14:03:55.905 febs [http-nio-11101-exec-25] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 14:03:55.927 febs [http-nio-11101-exec-25] INFO  p6spy - 2021-03-31 14:03:55 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role ) TOTAL;
2021-03-31 14:03:55.932 febs [http-nio-11101-exec-25] INFO  p6spy - 2021-03-31 14:03:55 | 耗时 4 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role LIMIT 10,10;
2021-03-31 14:03:57.022 febs [http-nio-11101-exec-26] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 14:03:57.043 febs [http-nio-11101-exec-26] INFO  p6spy - 2021-03-31 14:03:57 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role ) TOTAL;
2021-03-31 14:03:57.048 febs [http-nio-11101-exec-26] INFO  p6spy - 2021-03-31 14:03:57 | 耗时 4 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role LIMIT 0,10;
2021-03-31 14:03:59.492 febs [http-nio-11101-exec-27] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 14:03:59.520 febs [http-nio-11101-exec-27] INFO  p6spy - 2021-03-31 14:03:59 | 耗时 8 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu ORDER BY order_num ASC;
2021-03-31 14:04:04.831 febs [http-nio-11101-exec-28] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 14:04:04.859 febs [http-nio-11101-exec-28] INFO  p6spy - 2021-03-31 14:04:04 | 耗时 10 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-03-31 14:04:04.891 febs [http-nio-11101-exec-28] INFO  p6spy - 2021-03-31 14:04:04 | 耗时 31 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-03-31 14:04:16.881 febs [http-nio-11101-exec-29] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 14:04:16.907 febs [http-nio-11101-exec-29] INFO  p6spy - 2021-03-31 14:04:16 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role ) TOTAL;
2021-03-31 14:04:16.912 febs [http-nio-11101-exec-29] INFO  p6spy - 2021-03-31 14:04:16 | 耗时 4 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role LIMIT 0,10;
2021-03-31 14:04:18.750 febs [http-nio-11101-exec-30] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 14:04:18.772 febs [http-nio-11101-exec-30] INFO  p6spy - 2021-03-31 14:04:18 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-03-31 14:04:18.806 febs [http-nio-11101-exec-30] INFO  p6spy - 2021-03-31 14:04:18 | 耗时 33 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-03-31 14:08:35.453 febs [http-nio-11101-exec-31] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 14:08:35.483 febs [http-nio-11101-exec-31] INFO  p6spy - 2021-03-31 14:08:35 | 耗时 8 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu ORDER BY order_num ASC;
2021-03-31 14:09:09.477 febs [http-nio-11101-exec-32] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 14:09:09.503 febs [http-nio-11101-exec-32] INFO  p6spy - 2021-03-31 14:09:09 | 耗时 9 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu ORDER BY order_num ASC;
2021-03-31 14:18:48.942 febs [http-nio-11101-exec-33] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 14:18:48.984 febs [http-nio-11101-exec-33] INFO  p6spy - 2021-03-31 14:18:48 | 耗时 14 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu ORDER BY order_num ASC;
2021-03-31 14:19:05.175 febs [http-nio-11101-exec-34] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 14:19:05.201 febs [http-nio-11101-exec-34] INFO  p6spy - 2021-03-31 14:19:05 | 耗时 9 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu ORDER BY order_num ASC;
2021-03-31 14:19:09.003 febs [http-nio-11101-exec-35] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 14:19:09.031 febs [http-nio-11101-exec-35] INFO  p6spy - 2021-03-31 14:19:09 | 耗时 10 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu ORDER BY order_num ASC;
2021-03-31 14:19:14.424 febs [http-nio-11101-exec-36] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 14:19:14.445 febs [http-nio-11101-exec-36] INFO  p6spy - 2021-03-31 14:19:14 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role ) TOTAL;
2021-03-31 14:19:14.450 febs [http-nio-11101-exec-36] INFO  p6spy - 2021-03-31 14:19:14 | 耗时 5 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role LIMIT 0,10;
2021-03-31 14:19:15.421 febs [http-nio-11101-exec-37] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 14:19:15.480 febs [http-nio-11101-exec-37] INFO  p6spy - 2021-03-31 14:19:15 | 耗时 9 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu ORDER BY order_num ASC;
2021-03-31 14:19:17.921 febs [http-nio-11101-exec-38] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 14:19:18.251 febs [http-nio-11101-exec-38] INFO  p6spy - 2021-03-31 14:19:18 | 耗时 60 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu ORDER BY order_num ASC;
2021-03-31 14:19:31.099 febs [http-nio-11101-exec-39] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 14:19:31.128 febs [http-nio-11101-exec-39] INFO  p6spy - 2021-03-31 14:19:31 | 耗时 13 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu ORDER BY order_num ASC;
2021-03-31 14:20:25.074 febs [http-nio-11101-exec-40] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 14:20:25.098 febs [http-nio-11101-exec-40] INFO  p6spy - 2021-03-31 14:20:25 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role ) TOTAL;
2021-03-31 14:20:25.104 febs [http-nio-11101-exec-40] INFO  p6spy - 2021-03-31 14:20:25 | 耗时 5 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role LIMIT 0,10;
2021-03-31 14:20:30.124 febs [http-nio-11101-exec-41] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 14:20:30.149 febs [http-nio-11101-exec-41] INFO  p6spy - 2021-03-31 14:20:30 | 耗时 7 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-03-31 14:20:30.192 febs [http-nio-11101-exec-41] INFO  p6spy - 2021-03-31 14:20:30 | 耗时 42 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-03-31 14:20:32.048 febs [http-nio-11101-exec-42] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 14:20:32.068 febs [http-nio-11101-exec-42] INFO  p6spy - 2021-03-31 14:20:32 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role ) TOTAL;
2021-03-31 14:20:32.075 febs [http-nio-11101-exec-42] INFO  p6spy - 2021-03-31 14:20:32 | 耗时 5 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role LIMIT 0,10;
2021-03-31 14:21:03.358 febs [http-nio-11101-exec-43] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-03-31 14:21:03.435 febs [http-nio-11101-exec-43] INFO  p6spy - 2021-03-31 14:21:03 | 耗时 45 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role ) TOTAL;
2021-03-31 14:21:03.529 febs [http-nio-11101-exec-43] INFO  p6spy - 2021-03-31 14:21:03 | 耗时 93 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role LIMIT 0,10;
