2021-04-02 13:12:56.932 febs [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-04-02 13:12:57.302 febs [restartedMain] INFO  c.a.n.c.c.i.LocalConfigInfoProcessor - LOCAL_SNAPSHOT_PATH:C:\Users\Dukzzz\nacos\config
2021-04-02 13:12:57.322 febs [restartedMain] INFO  c.a.nacos.client.config.impl.Limiter - limitTime:5.0
2021-04-02 13:12:57.662 febs [restartedMain] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-brd-sys2-local.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys2.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys2,DEFAULT_GROUP'}]
2021-04-02 13:12:57.676 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - The following profiles are active: local
2021-04-02 13:12:59.431 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-04-02 13:12:59.433 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-04-02 13:12:59.473 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 30ms. Found 0 Redis repository interfaces.
2021-04-02 13:12:59.710 febs [restartedMain] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=8c4fe861-2a7b-3271-bb5c-24bd86b9b2e5
2021-04-02 13:12:59.831 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [com.smart.brd.sys.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$d9a1fb2d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:12:59.896 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:12:59.959 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$f65370e2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:12:59.966 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:12:59.969 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:13:00.002 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [com.smart.brd.sys.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$14612729] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:13:00.273 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.smart.brd.sys.common.config.RedisConfig$$EnhancerBySpringCGLIB$$a5bdbd7d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:13:00.286 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:13:00.289 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [com.smart.brd.sys.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:13:00.329 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:13:00.334 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [com.smart.brd.sys.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$c4c1114f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:13:00.337 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:13:00.342 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$ca8d6cab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:13:00.349 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:13:00.350 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:13:00.353 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2021-04-02 13:13:00.358 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2021-04-02 13:13:00.696 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2021-04-02 13:13:00.696 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2021-04-02 13:13:00.696 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2021-04-02 13:13:00.696 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2021-04-02 13:13:00.696 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:13:00.705 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:13:00.712 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:13:01.154 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:13:01.160 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:13:01.198 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:13:01.201 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy144] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:13:01.206 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:13:01.207 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy145] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:13:01.208 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [com.smart.brd.sys.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:13:01.247 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [com.smart.brd.sys.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:13:01.260 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userTokenServiceImpl' of type [com.smart.brd.sys.system.usertoken.service.impl.UserTokenServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:13:01.264 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:13:01.265 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy148] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:13:01.265 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [com.smart.brd.sys.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:13:01.281 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:13:01.282 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy150] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:13:01.283 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [com.smart.brd.sys.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:13:01.318 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:13:01.318 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy152] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:13:01.320 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [com.smart.brd.sys.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:13:01.332 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:13:01.332 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [com.sun.proxy.$Proxy154] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:13:01.337 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:13:01.338 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy155] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:13:01.339 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [com.smart.brd.sys.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:13:01.351 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:13:01.353 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:13:01.357 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:13:01.361 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:13:01.362 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:13:01.365 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:13:01.368 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:13:01.371 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:13:01.376 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:13:01.378 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:13:01.382 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:13:01.385 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:13:01.401 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:13:01.416 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [com.smart.brd.sys.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:13:01.416 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [com.smart.brd.sys.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:13:01.417 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [com.smart.brd.sys.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:13:01.424 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:13:01.439 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:13:01.811 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 11101 (http)
2021-04-02 13:13:01.819 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-11101"]
2021-04-02 13:13:01.819 febs [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2021-04-02 13:13:01.819 febs [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.31]
2021-04-02 13:13:01.906 febs [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2021-04-02 13:13:01.906 febs [restartedMain] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4214 ms
2021-04-02 13:13:01.994 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-04-02 13:13:02.002 febs [restartedMain] INFO  c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@7f904ea4
2021-04-02 13:13:02.613 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2021-04-02 13:13:02.624 febs [restartedMain] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-02 13:13:02.624 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.2 created.
2021-04-02 13:13:02.625 febs [restartedMain] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2021-04-02 13:13:02.625 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-02 13:13:02.625 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2021-04-02 13:13:02.625 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.2
2021-04-02 13:13:02.625 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@3b04b779
2021-04-02 13:13:02.680 febs [restartedMain] INFO  p6spy - 2021-04-02 13:13:02 | 耗时 5 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2021-04-02 13:13:03.086 febs [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2021-04-02 13:13:03.408 febs [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-04-02 13:13:03.518 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2021-04-02 13:13:03.565 febs [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2021-04-02 13:13:03.707 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-04-02 13:13:03.927 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2021-04-02 13:13:03.939 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-04-02 13:13:03.939 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Environment :null
2021-04-02 13:13:03.939 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-04-02 13:13:04.619 febs [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2021-04-02 13:13:04.628 febs [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2021-04-02 13:13:04.659 febs [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2021-04-02 13:13:04.669 febs [restartedMain] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2021-04-02 13:13:04.669 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2021-04-02 13:13:04.683 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-11101"]
2021-04-02 13:13:04.718 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 11101 (http) with context path ''
2021-04-02 13:13:04.720 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"192.168.0.103","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":11101,"scheduled":false,"serviceName":"DEFAULT_GROUP@@brd-sys2","stopped":false,"weight":1.0} to beat map.
2021-04-02 13:13:04.771 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [REGISTER-SERVICE] public registering service DEFAULT_GROUP@@brd-sys2 with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"192.168.0.103","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":11101,"weight":1.0}
2021-04-02 13:13:04.904 febs [scheduling-1] INFO  c.s.brd.sys.common.task.CacheTask - delete expired user
2021-04-02 13:13:04.905 febs [restartedMain] INFO  c.a.c.n.r.NacosServiceRegistry - nacos registry, DEFAULT_GROUP brd-sys2 192.168.0.103:11101 register finished
2021-04-02 13:13:05.034 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - Started BrdSysApplication in 8.983 seconds (JVM running for 9.938)
2021-04-02 13:13:05.038 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - Redis连接中 ······
2021-04-02 13:13:05.056 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存初始化 ······
2021-04-02 13:13:05.056 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存用户数据 ······
2021-04-02 13:13:05.202 febs [restartedMain] INFO  p6spy - 2021-04-02 13:13:05 | 耗时 94 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user;
2021-04-02 13:13:05.221 febs [restartedMain] INFO  p6spy - 2021-04-02 13:13:05 | 耗时 10 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sysadmin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 13:13:05.295 febs [restartedMain] INFO  p6spy - 2021-04-02 13:13:05 | 耗时 4 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin';
2021-04-02 13:13:05.321 febs [restartedMain] INFO  p6spy - 2021-04-02 13:13:05 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'sysadmin' and m.perms is not null and m.perms <> '';
2021-04-02 13:13:05.375 febs [restartedMain] INFO  p6spy - 2021-04-02 13:13:05 | 耗时 12 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='-1';
2021-04-02 13:13:05.437 febs [restartedMain] INFO  p6spy - 2021-04-02 13:13:05 | 耗时 60 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengcheng1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 13:13:05.495 febs [restartedMain] INFO  p6spy - 2021-04-02 13:13:05 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengcheng1';
2021-04-02 13:13:05.513 febs [restartedMain] INFO  p6spy - 2021-04-02 13:13:05 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengcheng1' and m.perms is not null and m.perms <> '';
2021-04-02 13:13:05.530 febs [restartedMain] INFO  p6spy - 2021-04-02 13:13:05 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='163';
2021-04-02 13:13:05.578 febs [restartedMain] INFO  p6spy - 2021-04-02 13:13:05 | 耗时 36 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yulin1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 13:13:05.637 febs [restartedMain] INFO  p6spy - 2021-04-02 13:13:05 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yulin1';
2021-04-02 13:13:05.662 febs [restartedMain] INFO  p6spy - 2021-04-02 13:13:05 | 耗时 14 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yulin1' and m.perms is not null and m.perms <> '';
2021-04-02 13:13:05.686 febs [restartedMain] INFO  p6spy - 2021-04-02 13:13:05 | 耗时 4 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='164';
2021-04-02 13:13:05.700 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2021-04-02 13:13:05.700 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2021-04-02 13:13:05.700 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2021-04-02 13:13:05.700 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -                                                       
2021-04-02 13:13:05.700 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - FEBS 启动完毕，时间：2021-04-02T13:13:05.700
2021-04-02 13:13:05.703 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2+DEFAULT_GROUP
2021-04-02 13:13:05.703 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2, group=DEFAULT_GROUP, cnt=1
2021-04-02 13:13:05.703 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2.yaml+DEFAULT_GROUP
2021-04-02 13:13:05.703 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2.yaml, group=DEFAULT_GROUP, cnt=1
2021-04-02 13:13:05.703 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2-local.yaml+DEFAULT_GROUP
2021-04-02 13:13:05.703 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2-local.yaml, group=DEFAULT_GROUP, cnt=1
2021-04-02 13:13:54.648 febs [http-nio-11101-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-04-02 13:13:54.649 febs [http-nio-11101-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2021-04-02 13:13:54.659 febs [http-nio-11101-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 10 ms
2021-04-02 13:13:57.233 febs [http-nio-11101-exec-2] INFO  c.s.b.sys.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2021-04-02 13:13:57.340 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-04-02 13:13:57 | 耗时 54 ms | SQL 语句：
UPDATE t_user SET last_login_time='2021-04-02T13:13:57.264+0800', user_type=0 WHERE username = 'sysadmin';
2021-04-02 13:13:57.387 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-04-02 13:13:57 | 耗时 42 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sysadmin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 13:13:57.599 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-04-02 13:13:57 | 耗时 72 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'sysadmin', '2021-04-02T13:13:57.476+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1' );
2021-04-02 13:13:57.744 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-04-02 13:13:57 | 耗时 4 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='-1';
2021-04-02 13:13:57.876 febs [http-nio-11101-exec-3] INFO  p6spy - 2021-04-02 13:13:57 | 耗时 85 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-04-02 13:13:57.975 febs [http-nio-11101-exec-4] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 13:13:58.067 febs [http-nio-11101-exec-4] INFO  p6spy - 2021-04-02 13:13:58 | 耗时 52 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin') order by m.order_num;
2021-04-02 13:14:02.527 febs [http-nio-11101-exec-5] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 13:14:02.624 febs [http-nio-11101-exec-5] INFO  p6spy - 2021-04-02 13:14:02 | 耗时 39 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role ) TOTAL;
2021-04-02 13:14:02.644 febs [http-nio-11101-exec-5] INFO  p6spy - 2021-04-02 13:14:02 | 耗时 14 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role LIMIT 0,10;
2021-04-02 13:14:04.185 febs [http-nio-11101-exec-6] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 13:14:04.223 febs [http-nio-11101-exec-6] INFO  p6spy - 2021-04-02 13:14:04 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 13:14:04.237 febs [http-nio-11101-exec-6] INFO  p6spy - 2021-04-02 13:14:04 | 耗时 12 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-04-02 13:14:05.538 febs [http-nio-11101-exec-7] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 13:14:05.552 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 13:14:05 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role ) TOTAL;
2021-04-02 13:14:05.559 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 13:14:05 | 耗时 5 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role LIMIT 0,10;
2021-04-02 13:14:05.911 febs [http-nio-11101-exec-8] INFO  p6spy - 2021-04-02 13:14:05 | 耗时 70 ms | SQL 语句：
SELECT DEPT_ID,parent_id,type,dept_name,order_num,create_time,modify_time,dept_code,tenant_id,dept_address,longitude,latitude,province,city,county,town FROM t_dept ORDER BY order_num ASC;
2021-04-02 13:14:30.968 febs [http-nio-11101-exec-9] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 13:14:31.022 febs [http-nio-11101-exec-9] INFO  p6spy - 2021-04-02 13:14:31 | 耗时 25 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'timeTest';
2021-04-02 13:14:31.128 febs [http-nio-11101-exec-9] INFO  p6spy - 2021-04-02 13:14:31 | 耗时 50 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'timeTest';
2021-04-02 13:14:31.178 febs [http-nio-11101-exec-9] INFO  p6spy - 2021-04-02 13:14:31 | 耗时 44 ms | SQL 语句：
INSERT INTO t_user ( username, password, tenant_id, mobile, status, create_time, gender, avatar, user_type, is_xcx, is_show ) VALUES ( 'timeTest', '7cb28e6d80fe650139f5dde24da1bf44', 0, '13333333333', '1', '2021-04-02T13:14:31.129+0800', '2', 'default.jpg', 0, 0, 1 );
2021-04-02 13:14:31.190 febs [http-nio-11101-exec-9] INFO  p6spy - 2021-04-02 13:14:31 | 耗时 9 ms | SQL 语句：
INSERT INTO t_user_role ( user_id, role_id ) VALUES ( 165, 1 );
2021-04-02 13:14:31.201 febs [http-nio-11101-exec-9] INFO  p6spy - 2021-04-02 13:14:31 | 耗时 9 ms | SQL 语句：
INSERT INTO t_user_config ( USER_ID, theme, layout, multi_page, fix_siderbar, fix_header, color ) VALUES ( 165, 'dark', 'side', '0', '1', '1', 'rgb(66, 185, 131)' );
2021-04-02 13:14:31.243 febs [http-nio-11101-exec-9] INFO  p6spy - 2021-04-02 13:14:31 | 耗时 41 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'timeTest' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 13:14:31.259 febs [http-nio-11101-exec-9] INFO  p6spy - 2021-04-02 13:14:31 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'timeTest';
2021-04-02 13:14:31.275 febs [http-nio-11101-exec-9] INFO  p6spy - 2021-04-02 13:14:31 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'timeTest' and m.perms is not null and m.perms <> '';
2021-04-02 13:14:31.292 febs [http-nio-11101-exec-9] INFO  p6spy - 2021-04-02 13:14:31 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='165';
2021-04-02 13:14:31.337 febs [asyncTaskExecutor-1] INFO  p6spy - 2021-04-02 13:14:31 | 耗时 10 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'sysadmin', '新增用户', 323, 'com.smart.brd.sys.system.controller.UserController.addUser()', ' request: org.apache.shiro.web.servlet.ShiroHttpServletRequest@251fdfd2 user: "User(userId=165, username=timeTest, password=7cb28e6d80fe650139f5dde24da1bf44, deptId=null, deptIds=null, tenantId=0, deptName=null, email=null, mobile=13333333333, status=1, createTime=Fri Apr 02 13:14:31 CST 2021, modifyTime=null, lastLoginTime=null, gender=2, description=null, avatar=default.jpg, roleId=1, roleName=null, expireTime=null, sortField=null, sortOrder=null, createTimeFrom=null, createTimeTo=null, id=null, userType=0, condition=null, openId=null, isXcx=0, isShow=1, createDept=null, province=null, city=null, county=null, town=null, housing=null)"', '127.0.0.1', '2021-04-02T13:14:31.324+0800', '内网IP|0|0|内网IP|内网IP' );
2021-04-02 13:14:31.412 febs [http-nio-11101-exec-10] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 13:14:31.424 febs [http-nio-11101-exec-10] INFO  p6spy - 2021-04-02 13:14:31 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 13:14:31.456 febs [http-nio-11101-exec-10] INFO  p6spy - 2021-04-02 13:14:31 | 耗时 31 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-04-02 13:14:54.738 febs [http-nio-11101-exec-11] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 13:14:54.789 febs [http-nio-11101-exec-11] INFO  p6spy - 2021-04-02 13:14:54 | 耗时 39 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE USER_ID='165';
2021-04-02 13:14:54.861 febs [http-nio-11101-exec-11] INFO  p6spy - 2021-04-02 13:14:54 | 耗时 9 ms | SQL 语句：
DELETE FROM t_user WHERE USER_ID IN ( '165' );
2021-04-02 13:14:54.874 febs [http-nio-11101-exec-11] INFO  p6spy - 2021-04-02 13:14:54 | 耗时 9 ms | SQL 语句：
DELETE FROM t_user_role WHERE user_id = 165;
2021-04-02 13:14:54.885 febs [http-nio-11101-exec-11] INFO  p6spy - 2021-04-02 13:14:54 | 耗时 8 ms | SQL 语句：
DELETE FROM t_user_config WHERE USER_ID IN ( '165' );
2021-04-02 13:14:54.953 febs [asyncTaskExecutor-2] INFO  p6spy - 2021-04-02 13:14:54 | 耗时 9 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'sysadmin', '删除用户', 153, 'com.smart.brd.sys.system.controller.UserController.deleteUsers()', ' userIds: "165"', '127.0.0.1', '2021-04-02T13:14:54.941+0800', '内网IP|0|0|内网IP|内网IP' );
2021-04-02 13:14:55.003 febs [http-nio-11101-exec-12] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 13:14:55.053 febs [http-nio-11101-exec-12] INFO  p6spy - 2021-04-02 13:14:55 | 耗时 44 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 13:14:55.149 febs [http-nio-11101-exec-12] INFO  p6spy - 2021-04-02 13:14:55 | 耗时 94 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-04-02 13:15:35.232 febs [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-04-02 13:15:35.601 febs [restartedMain] INFO  c.a.n.c.c.i.LocalConfigInfoProcessor - LOCAL_SNAPSHOT_PATH:C:\Users\Dukzzz\nacos\config
2021-04-02 13:15:35.618 febs [restartedMain] INFO  c.a.nacos.client.config.impl.Limiter - limitTime:5.0
2021-04-02 13:15:35.956 febs [restartedMain] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-brd-sys2-local.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys2.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys2,DEFAULT_GROUP'}]
2021-04-02 13:15:35.961 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - The following profiles are active: local
2021-04-02 13:15:36.929 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-04-02 13:15:36.931 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-04-02 13:15:36.970 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 28ms. Found 0 Redis repository interfaces.
2021-04-02 13:15:37.194 febs [restartedMain] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=8c4fe861-2a7b-3271-bb5c-24bd86b9b2e5
2021-04-02 13:15:37.309 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [com.smart.brd.sys.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$2734b6d5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:15:37.372 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:15:37.429 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$43e62c8a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:15:37.436 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:15:37.439 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:15:37.472 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [com.smart.brd.sys.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$61f3e2d1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:15:37.707 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.smart.brd.sys.common.config.RedisConfig$$EnhancerBySpringCGLIB$$f3507925] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:15:37.720 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:15:37.723 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [com.smart.brd.sys.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:15:37.761 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:15:37.767 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [com.smart.brd.sys.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$1253ccf7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:15:37.771 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:15:37.776 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$18202853] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:15:37.782 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:15:37.783 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:15:37.786 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2021-04-02 13:15:37.791 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2021-04-02 13:15:37.987 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2021-04-02 13:15:37.987 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2021-04-02 13:15:37.988 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2021-04-02 13:15:37.988 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2021-04-02 13:15:37.988 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:15:38.000 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:15:38.008 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:15:38.405 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:15:38.412 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:15:38.441 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:15:38.443 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy144] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:15:38.449 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:15:38.450 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy145] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:15:38.451 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [com.smart.brd.sys.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:15:38.490 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [com.smart.brd.sys.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:15:38.503 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userTokenServiceImpl' of type [com.smart.brd.sys.system.usertoken.service.impl.UserTokenServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:15:38.507 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:15:38.508 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy148] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:15:38.509 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [com.smart.brd.sys.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:15:38.526 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:15:38.527 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy150] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:15:38.528 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [com.smart.brd.sys.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:15:38.569 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:15:38.570 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy152] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:15:38.570 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [com.smart.brd.sys.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:15:38.582 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:15:38.583 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [com.sun.proxy.$Proxy154] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:15:38.589 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:15:38.590 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy155] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:15:38.591 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [com.smart.brd.sys.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:15:38.603 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:15:38.605 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:15:38.607 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:15:38.612 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:15:38.613 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:15:38.616 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:15:38.619 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:15:38.622 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:15:38.627 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:15:38.629 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:15:38.633 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:15:38.635 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:15:38.649 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:15:38.665 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [com.smart.brd.sys.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:15:38.666 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [com.smart.brd.sys.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:15:38.666 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [com.smart.brd.sys.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:15:38.673 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:15:38.687 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:15:39.065 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 11101 (http)
2021-04-02 13:15:39.073 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-11101"]
2021-04-02 13:15:39.073 febs [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2021-04-02 13:15:39.074 febs [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.31]
2021-04-02 13:15:39.157 febs [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2021-04-02 13:15:39.157 febs [restartedMain] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3179 ms
2021-04-02 13:15:39.242 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-04-02 13:15:39.249 febs [restartedMain] INFO  c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3a61f5f6
2021-04-02 13:16:16.748 febs [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-04-02 13:16:17.137 febs [restartedMain] INFO  c.a.n.c.c.i.LocalConfigInfoProcessor - LOCAL_SNAPSHOT_PATH:C:\Users\Dukzzz\nacos\config
2021-04-02 13:16:17.156 febs [restartedMain] INFO  c.a.nacos.client.config.impl.Limiter - limitTime:5.0
2021-04-02 13:16:17.498 febs [restartedMain] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-brd-sys2-local.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys2.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys2,DEFAULT_GROUP'}]
2021-04-02 13:16:17.501 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - The following profiles are active: local
2021-04-02 13:16:18.477 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-04-02 13:16:18.479 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-04-02 13:16:18.518 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 27ms. Found 0 Redis repository interfaces.
2021-04-02 13:16:18.742 febs [restartedMain] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=8c4fe861-2a7b-3271-bb5c-24bd86b9b2e5
2021-04-02 13:16:18.861 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [com.smart.brd.sys.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$cbf85ae4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:16:18.924 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:16:18.983 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$e8a9d099] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:16:18.990 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:16:18.993 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:16:19.026 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [com.smart.brd.sys.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$6b786e0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:16:19.259 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.smart.brd.sys.common.config.RedisConfig$$EnhancerBySpringCGLIB$$98141d34] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:16:19.272 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:16:19.274 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [com.smart.brd.sys.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:16:19.311 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:16:19.317 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [com.smart.brd.sys.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$b7177106] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:16:19.320 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:16:19.325 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$bce3cc62] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:16:19.332 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:16:19.333 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:16:19.336 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2021-04-02 13:16:19.341 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2021-04-02 13:16:19.538 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2021-04-02 13:16:19.538 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2021-04-02 13:16:19.538 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2021-04-02 13:16:19.538 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2021-04-02 13:16:19.538 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:16:19.548 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:16:19.556 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:16:19.946 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:16:19.952 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:16:19.979 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:16:19.982 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy144] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:16:19.987 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:16:19.988 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy145] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:16:19.989 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [com.smart.brd.sys.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:16:20.026 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [com.smart.brd.sys.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:16:20.039 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userTokenServiceImpl' of type [com.smart.brd.sys.system.usertoken.service.impl.UserTokenServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:16:20.043 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:16:20.044 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy148] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:16:20.046 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [com.smart.brd.sys.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:16:20.063 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:16:20.064 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy150] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:16:20.065 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [com.smart.brd.sys.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:16:20.104 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:16:20.105 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy152] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:16:20.105 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [com.smart.brd.sys.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:16:20.117 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:16:20.118 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [com.sun.proxy.$Proxy154] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:16:20.123 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:16:20.124 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy155] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:16:20.125 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [com.smart.brd.sys.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:16:20.137 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:16:20.139 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:16:20.141 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:16:20.146 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:16:20.147 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:16:20.150 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:16:20.153 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:16:20.156 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:16:20.161 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:16:20.163 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:16:20.166 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:16:20.169 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:16:20.184 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:16:20.198 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [com.smart.brd.sys.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:16:20.198 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [com.smart.brd.sys.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:16:20.198 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [com.smart.brd.sys.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:16:20.205 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:16:20.219 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:16:20.575 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 11101 (http)
2021-04-02 13:16:20.581 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-11101"]
2021-04-02 13:16:20.582 febs [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2021-04-02 13:16:20.582 febs [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.31]
2021-04-02 13:16:20.665 febs [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2021-04-02 13:16:20.665 febs [restartedMain] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3148 ms
2021-04-02 13:16:20.751 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-04-02 13:16:20.759 febs [restartedMain] INFO  c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1b28ad1c
2021-04-02 13:16:21.302 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2021-04-02 13:16:21.312 febs [restartedMain] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-02 13:16:21.312 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.2 created.
2021-04-02 13:16:21.312 febs [restartedMain] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2021-04-02 13:16:21.313 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-02 13:16:21.313 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2021-04-02 13:16:21.313 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.2
2021-04-02 13:16:21.313 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@4069fa89
2021-04-02 13:16:21.363 febs [restartedMain] INFO  p6spy - 2021-04-02 13:16:21 | 耗时 5 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2021-04-02 13:16:21.750 febs [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2021-04-02 13:16:22.064 febs [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-04-02 13:16:22.173 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2021-04-02 13:16:22.218 febs [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2021-04-02 13:16:22.361 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-04-02 13:16:22.578 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2021-04-02 13:16:22.592 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-04-02 13:16:22.592 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Environment :null
2021-04-02 13:16:22.593 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-04-02 13:16:23.253 febs [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2021-04-02 13:16:23.263 febs [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2021-04-02 13:16:23.294 febs [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2021-04-02 13:16:23.304 febs [restartedMain] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2021-04-02 13:16:23.304 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2021-04-02 13:16:23.317 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-11101"]
2021-04-02 13:16:23.339 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 11101 (http) with context path ''
2021-04-02 13:16:23.342 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"192.168.0.103","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":11101,"scheduled":false,"serviceName":"DEFAULT_GROUP@@brd-sys2","stopped":false,"weight":1.0} to beat map.
2021-04-02 13:16:23.393 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [REGISTER-SERVICE] public registering service DEFAULT_GROUP@@brd-sys2 with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"192.168.0.103","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":11101,"weight":1.0}
2021-04-02 13:16:23.412 febs [scheduling-1] INFO  c.s.brd.sys.common.task.CacheTask - delete expired user
2021-04-02 13:16:23.459 febs [restartedMain] INFO  c.a.c.n.r.NacosServiceRegistry - nacos registry, DEFAULT_GROUP brd-sys2 192.168.0.103:11101 register finished
2021-04-02 13:16:23.597 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - Started BrdSysApplication in 7.604 seconds (JVM running for 8.512)
2021-04-02 13:16:23.602 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - Redis连接中 ······
2021-04-02 13:16:23.607 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存初始化 ······
2021-04-02 13:16:23.607 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存用户数据 ······
2021-04-02 13:16:23.663 febs [restartedMain] INFO  p6spy - 2021-04-02 13:16:23 | 耗时 27 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user;
2021-04-02 13:16:23.680 febs [restartedMain] INFO  p6spy - 2021-04-02 13:16:23 | 耗时 10 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sysadmin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 13:16:23.788 febs [restartedMain] INFO  p6spy - 2021-04-02 13:16:23 | 耗时 4 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin';
2021-04-02 13:16:23.813 febs [restartedMain] INFO  p6spy - 2021-04-02 13:16:23 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'sysadmin' and m.perms is not null and m.perms <> '';
2021-04-02 13:16:23.841 febs [restartedMain] INFO  p6spy - 2021-04-02 13:16:23 | 耗时 8 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='-1';
2021-04-02 13:16:23.896 febs [restartedMain] INFO  p6spy - 2021-04-02 13:16:23 | 耗时 53 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengcheng1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 13:16:23.954 febs [restartedMain] INFO  p6spy - 2021-04-02 13:16:23 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengcheng1';
2021-04-02 13:16:23.974 febs [restartedMain] INFO  p6spy - 2021-04-02 13:16:23 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengcheng1' and m.perms is not null and m.perms <> '';
2021-04-02 13:16:23.995 febs [restartedMain] INFO  p6spy - 2021-04-02 13:16:23 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='163';
2021-04-02 13:16:24.064 febs [restartedMain] INFO  p6spy - 2021-04-02 13:16:24 | 耗时 53 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yulin1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 13:16:24.123 febs [restartedMain] INFO  p6spy - 2021-04-02 13:16:24 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yulin1';
2021-04-02 13:16:24.139 febs [restartedMain] INFO  p6spy - 2021-04-02 13:16:24 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yulin1' and m.perms is not null and m.perms <> '';
2021-04-02 13:16:24.156 febs [restartedMain] INFO  p6spy - 2021-04-02 13:16:24 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='164';
2021-04-02 13:16:24.166 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2021-04-02 13:16:24.166 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2021-04-02 13:16:24.166 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2021-04-02 13:16:24.166 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -                                                       
2021-04-02 13:16:24.166 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - FEBS 启动完毕，时间：2021-04-02T13:16:24.166
2021-04-02 13:16:24.168 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2+DEFAULT_GROUP
2021-04-02 13:16:24.169 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2, group=DEFAULT_GROUP, cnt=1
2021-04-02 13:16:24.169 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2.yaml+DEFAULT_GROUP
2021-04-02 13:16:24.169 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2.yaml, group=DEFAULT_GROUP, cnt=1
2021-04-02 13:16:24.169 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2-local.yaml+DEFAULT_GROUP
2021-04-02 13:16:24.169 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2-local.yaml, group=DEFAULT_GROUP, cnt=1
2021-04-02 13:16:35.323 febs [http-nio-11101-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-04-02 13:16:35.323 febs [http-nio-11101-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2021-04-02 13:16:35.332 febs [http-nio-11101-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 9 ms
2021-04-02 13:16:35.534 febs [http-nio-11101-exec-1] INFO  p6spy - 2021-04-02 13:16:35 | 耗时 51 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-04-02 13:16:35.615 febs [http-nio-11101-exec-3] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 13:16:35.690 febs [http-nio-11101-exec-3] INFO  p6spy - 2021-04-02 13:16:35 | 耗时 21 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin') order by m.order_num;
2021-04-02 13:16:36.227 febs [http-nio-11101-exec-2] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 13:16:36.316 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-04-02 13:16:36 | 耗时 22 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 13:16:36.380 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-04-02 13:16:36 | 耗时 58 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-04-02 13:16:38.644 febs [http-nio-11101-exec-6] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 13:16:38.665 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 13:16:38 | 耗时 12 ms | SQL 语句：
SELECT DEPT_ID,parent_id,type,dept_name,order_num,create_time,modify_time,dept_code,tenant_id,dept_address,longitude,latitude,province,city,county,town FROM t_dept ORDER BY order_num ASC;
2021-04-02 13:16:38.673 febs [http-nio-11101-exec-6] INFO  p6spy - 2021-04-02 13:16:38 | 耗时 11 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role ) TOTAL;
2021-04-02 13:16:38.682 febs [http-nio-11101-exec-6] INFO  p6spy - 2021-04-02 13:16:38 | 耗时 6 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role LIMIT 0,10;
2021-04-02 13:16:51.539 febs [http-nio-11101-exec-4] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 13:16:51.610 febs [http-nio-11101-exec-4] INFO  p6spy - 2021-04-02 13:16:51 | 耗时 47 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'testTime';
2021-04-02 13:16:51.723 febs [http-nio-11101-exec-4] INFO  p6spy - 2021-04-02 13:16:51 | 耗时 95 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'testTime';
2021-04-02 13:16:51.777 febs [http-nio-11101-exec-4] INFO  p6spy - 2021-04-02 13:16:51 | 耗时 44 ms | SQL 语句：
INSERT INTO t_user ( username, password, tenant_id, mobile, status, create_time, gender, avatar, user_type, is_xcx, is_show ) VALUES ( 'testTime', 'b4dfbfb12bbe2e68b9b63f0490d11818', 0, '15991477401', '1', '2021-04-02T13:16:51.723+0800', '2', 'default.jpg', 0, 0, 1 );
2021-04-02 13:16:51.828 febs [http-nio-11101-exec-4] INFO  p6spy - 2021-04-02 13:16:51 | 耗时 47 ms | SQL 语句：
INSERT INTO t_user_role ( user_id, role_id ) VALUES ( 166, 1 );
2021-04-02 13:16:51.839 febs [http-nio-11101-exec-4] INFO  p6spy - 2021-04-02 13:16:51 | 耗时 8 ms | SQL 语句：
INSERT INTO t_user_config ( USER_ID, theme, layout, multi_page, fix_siderbar, fix_header, color ) VALUES ( 166, 'dark', 'side', '0', '1', '1', 'rgb(66, 185, 131)' );
2021-04-02 13:16:51.893 febs [http-nio-11101-exec-4] INFO  p6spy - 2021-04-02 13:16:51 | 耗时 53 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'testTime' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 13:16:51.913 febs [http-nio-11101-exec-4] INFO  p6spy - 2021-04-02 13:16:51 | 耗时 7 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'testTime';
2021-04-02 13:16:51.931 febs [http-nio-11101-exec-4] INFO  p6spy - 2021-04-02 13:16:51 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'testTime' and m.perms is not null and m.perms <> '';
2021-04-02 13:16:51.950 febs [http-nio-11101-exec-4] INFO  p6spy - 2021-04-02 13:16:51 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='166';
2021-04-02 13:16:52.024 febs [asyncTaskExecutor-1] INFO  p6spy - 2021-04-02 13:16:52 | 耗时 28 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'sysadmin', '新增用户', 420, 'com.smart.brd.sys.system.controller.UserController.addUser()', ' request: org.apache.shiro.web.servlet.ShiroHttpServletRequest@3bf8b010 user: "User(userId=166, username=testTime, password=b4dfbfb12bbe2e68b9b63f0490d11818, deptId=null, deptIds=null, tenantId=0, deptName=null, email=null, mobile=15991477401, status=1, createTime=Fri Apr 02 13:16:51 CST 2021, modifyTime=null, lastLoginTime=null, gender=2, description=null, avatar=default.jpg, roleId=1, roleName=null, expireTime=null, sortField=null, sortOrder=null, createTimeFrom=null, createTimeTo=null, id=null, userType=0, condition=null, openId=null, isXcx=0, isShow=1, createDept=null, province=null, city=null, county=null, town=null, housing=null)"', '127.0.0.1', '2021-04-02T13:16:51.989+0800', '内网IP|0|0|内网IP|内网IP' );
2021-04-02 13:16:52.183 febs [http-nio-11101-exec-5] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 13:16:52.227 febs [http-nio-11101-exec-5] INFO  p6spy - 2021-04-02 13:16:52 | 耗时 38 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 13:16:52.263 febs [http-nio-11101-exec-5] INFO  p6spy - 2021-04-02 13:16:52 | 耗时 34 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-04-02 13:16:55.604 febs [http-nio-11101-exec-8] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 13:16:55.652 febs [http-nio-11101-exec-8] INFO  p6spy - 2021-04-02 13:16:55 | 耗时 34 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE USER_ID='166';
2021-04-02 13:16:55.722 febs [http-nio-11101-exec-8] INFO  p6spy - 2021-04-02 13:16:55 | 耗时 9 ms | SQL 语句：
DELETE FROM t_user WHERE USER_ID IN ( '166' );
2021-04-02 13:16:55.737 febs [http-nio-11101-exec-8] INFO  p6spy - 2021-04-02 13:16:55 | 耗时 10 ms | SQL 语句：
DELETE FROM t_user_role WHERE user_id = 166;
2021-04-02 13:16:55.747 febs [http-nio-11101-exec-8] INFO  p6spy - 2021-04-02 13:16:55 | 耗时 9 ms | SQL 语句：
DELETE FROM t_user_config WHERE USER_ID IN ( '166' );
2021-04-02 13:16:55.816 febs [asyncTaskExecutor-2] INFO  p6spy - 2021-04-02 13:16:55 | 耗时 9 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'sysadmin', '删除用户', 150, 'com.smart.brd.sys.system.controller.UserController.deleteUsers()', ' userIds: "166"', '127.0.0.1', '2021-04-02T13:16:55.805+0800', '内网IP|0|0|内网IP|内网IP' );
2021-04-02 13:16:56.116 febs [http-nio-11101-exec-9] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 13:16:56.129 febs [http-nio-11101-exec-9] INFO  p6spy - 2021-04-02 13:16:56 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 13:16:56.168 febs [http-nio-11101-exec-9] INFO  p6spy - 2021-04-02 13:16:56 | 耗时 37 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-04-02 13:17:10.700 febs [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-04-02 13:17:11.125 febs [restartedMain] INFO  c.a.n.c.c.i.LocalConfigInfoProcessor - LOCAL_SNAPSHOT_PATH:C:\Users\Dukzzz\nacos\config
2021-04-02 13:17:11.143 febs [restartedMain] INFO  c.a.nacos.client.config.impl.Limiter - limitTime:5.0
2021-04-02 13:17:11.479 febs [restartedMain] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-brd-sys2-local.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys2.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys2,DEFAULT_GROUP'}]
2021-04-02 13:17:11.490 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - The following profiles are active: local
2021-04-02 13:17:12.486 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-04-02 13:17:12.488 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-04-02 13:17:12.530 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 30ms. Found 0 Redis repository interfaces.
2021-04-02 13:17:12.757 febs [restartedMain] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=8c4fe861-2a7b-3271-bb5c-24bd86b9b2e5
2021-04-02 13:17:12.876 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [com.smart.brd.sys.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$f6a677f2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:17:12.942 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:17:13.002 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$1357eda7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:17:13.009 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:17:13.012 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:17:13.047 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [com.smart.brd.sys.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$3165a3ee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:17:13.279 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.smart.brd.sys.common.config.RedisConfig$$EnhancerBySpringCGLIB$$c2c23a42] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:17:13.292 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:17:13.294 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [com.smart.brd.sys.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:17:13.331 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:17:13.337 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [com.smart.brd.sys.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$e1c58e14] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:17:13.340 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:17:13.345 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$e791e970] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:17:13.352 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:17:13.353 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:17:13.356 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2021-04-02 13:17:13.361 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2021-04-02 13:17:13.561 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2021-04-02 13:17:13.561 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2021-04-02 13:17:13.562 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2021-04-02 13:17:13.562 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2021-04-02 13:17:13.562 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:17:13.571 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:17:13.579 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:17:13.963 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:17:13.969 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:17:14.005 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:17:14.008 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy144] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:17:14.013 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:17:14.014 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy145] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:17:14.015 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [com.smart.brd.sys.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:17:14.041 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [com.smart.brd.sys.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:17:14.054 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userTokenServiceImpl' of type [com.smart.brd.sys.system.usertoken.service.impl.UserTokenServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:17:14.059 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:17:14.059 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy148] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:17:14.060 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [com.smart.brd.sys.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:17:14.079 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:17:14.079 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy150] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:17:14.080 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [com.smart.brd.sys.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:17:14.120 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:17:14.121 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy152] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:17:14.122 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [com.smart.brd.sys.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:17:14.134 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:17:14.135 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [com.sun.proxy.$Proxy154] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:17:14.139 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:17:14.140 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy155] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:17:14.141 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [com.smart.brd.sys.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:17:14.155 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:17:14.156 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:17:14.159 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:17:14.163 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:17:14.164 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:17:14.167 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:17:14.169 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:17:14.172 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:17:14.176 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:17:14.178 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:17:14.182 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:17:14.184 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:17:14.200 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:17:14.214 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [com.smart.brd.sys.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:17:14.214 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [com.smart.brd.sys.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:17:14.214 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [com.smart.brd.sys.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:17:14.221 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:17:14.235 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:17:14.600 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 11101 (http)
2021-04-02 13:17:14.607 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-11101"]
2021-04-02 13:17:14.608 febs [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2021-04-02 13:17:14.608 febs [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.31]
2021-04-02 13:17:14.690 febs [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2021-04-02 13:17:14.690 febs [restartedMain] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3174 ms
2021-04-02 13:17:14.773 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-04-02 13:17:14.781 febs [restartedMain] INFO  c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@2f7ce072
2021-04-02 13:17:15.325 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2021-04-02 13:17:15.333 febs [restartedMain] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-02 13:17:15.333 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.2 created.
2021-04-02 13:17:15.334 febs [restartedMain] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2021-04-02 13:17:15.335 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-02 13:17:15.335 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2021-04-02 13:17:15.335 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.2
2021-04-02 13:17:15.335 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@2e4a39fa
2021-04-02 13:17:15.470 febs [restartedMain] INFO  p6spy - 2021-04-02 13:17:15 | 耗时 44 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2021-04-02 13:17:15.852 febs [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2021-04-02 13:17:16.170 febs [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-04-02 13:17:16.280 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2021-04-02 13:17:16.443 febs [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2021-04-02 13:17:16.468 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-04-02 13:17:16.683 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2021-04-02 13:17:16.695 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-04-02 13:17:16.695 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Environment :null
2021-04-02 13:17:16.696 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-04-02 13:17:17.369 febs [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2021-04-02 13:17:17.378 febs [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2021-04-02 13:17:17.408 febs [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2021-04-02 13:17:17.418 febs [restartedMain] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2021-04-02 13:17:17.419 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2021-04-02 13:17:17.432 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-11101"]
2021-04-02 13:17:17.453 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 11101 (http) with context path ''
2021-04-02 13:17:17.456 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"192.168.0.103","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":11101,"scheduled":false,"serviceName":"DEFAULT_GROUP@@brd-sys2","stopped":false,"weight":1.0} to beat map.
2021-04-02 13:17:17.505 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [REGISTER-SERVICE] public registering service DEFAULT_GROUP@@brd-sys2 with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"192.168.0.103","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":11101,"weight":1.0}
2021-04-02 13:17:17.526 febs [scheduling-1] INFO  c.s.brd.sys.common.task.CacheTask - delete expired user
2021-04-02 13:17:17.584 febs [restartedMain] INFO  c.a.c.n.r.NacosServiceRegistry - nacos registry, DEFAULT_GROUP brd-sys2 192.168.0.103:11101 register finished
2021-04-02 13:17:17.717 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - Started BrdSysApplication in 7.876 seconds (JVM running for 8.782)
2021-04-02 13:17:17.721 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - Redis连接中 ······
2021-04-02 13:17:17.737 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存初始化 ······
2021-04-02 13:17:17.737 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存用户数据 ······
2021-04-02 13:17:17.817 febs [restartedMain] INFO  p6spy - 2021-04-02 13:17:17 | 耗时 39 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user;
2021-04-02 13:17:17.872 febs [restartedMain] INFO  p6spy - 2021-04-02 13:17:17 | 耗时 45 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sysadmin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 13:17:18.075 febs [restartedMain] INFO  p6spy - 2021-04-02 13:17:18 | 耗时 33 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin';
2021-04-02 13:17:18.179 febs [restartedMain] INFO  p6spy - 2021-04-02 13:17:18 | 耗时 43 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'sysadmin' and m.perms is not null and m.perms <> '';
2021-04-02 13:17:18.276 febs [restartedMain] INFO  p6spy - 2021-04-02 13:17:18 | 耗时 47 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='-1';
2021-04-02 13:17:18.295 febs [restartedMain] INFO  p6spy - 2021-04-02 13:17:18 | 耗时 11 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengcheng1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 13:17:18.351 febs [restartedMain] INFO  p6spy - 2021-04-02 13:17:18 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengcheng1';
2021-04-02 13:17:18.368 febs [restartedMain] INFO  p6spy - 2021-04-02 13:17:18 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengcheng1' and m.perms is not null and m.perms <> '';
2021-04-02 13:17:18.385 febs [restartedMain] INFO  p6spy - 2021-04-02 13:17:18 | 耗时 4 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='163';
2021-04-02 13:17:18.449 febs [restartedMain] INFO  p6spy - 2021-04-02 13:17:18 | 耗时 52 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yulin1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 13:17:18.516 febs [restartedMain] INFO  p6spy - 2021-04-02 13:17:18 | 耗时 9 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yulin1';
2021-04-02 13:17:18.534 febs [restartedMain] INFO  p6spy - 2021-04-02 13:17:18 | 耗时 6 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yulin1' and m.perms is not null and m.perms <> '';
2021-04-02 13:17:18.556 febs [restartedMain] INFO  p6spy - 2021-04-02 13:17:18 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='164';
2021-04-02 13:17:18.566 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2021-04-02 13:17:18.566 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2021-04-02 13:17:18.566 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2021-04-02 13:17:18.566 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -                                                       
2021-04-02 13:17:18.567 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - FEBS 启动完毕，时间：2021-04-02T13:17:18.567
2021-04-02 13:17:18.570 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2+DEFAULT_GROUP
2021-04-02 13:17:18.571 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2, group=DEFAULT_GROUP, cnt=1
2021-04-02 13:17:18.571 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2.yaml+DEFAULT_GROUP
2021-04-02 13:17:18.571 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2.yaml, group=DEFAULT_GROUP, cnt=1
2021-04-02 13:17:18.571 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2-local.yaml+DEFAULT_GROUP
2021-04-02 13:17:18.571 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2-local.yaml, group=DEFAULT_GROUP, cnt=1
2021-04-02 13:17:33.821 febs [http-nio-11101-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-04-02 13:17:33.821 febs [http-nio-11101-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2021-04-02 13:17:33.836 febs [http-nio-11101-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 15 ms
2021-04-02 13:17:34.045 febs [http-nio-11101-exec-1] INFO  p6spy - 2021-04-02 13:17:34 | 耗时 58 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-04-02 13:17:34.131 febs [http-nio-11101-exec-4] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 13:17:34.212 febs [http-nio-11101-exec-4] INFO  p6spy - 2021-04-02 13:17:34 | 耗时 35 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin') order by m.order_num;
2021-04-02 13:17:34.755 febs [http-nio-11101-exec-3] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 13:17:34.850 febs [http-nio-11101-exec-3] INFO  p6spy - 2021-04-02 13:17:34 | 耗时 15 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 13:17:34.921 febs [http-nio-11101-exec-3] INFO  p6spy - 2021-04-02 13:17:34 | 耗时 67 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-04-02 13:17:36.287 febs [http-nio-11101-exec-2] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 13:17:36.303 febs [http-nio-11101-exec-11] INFO  p6spy - 2021-04-02 13:17:36 | 耗时 9 ms | SQL 语句：
SELECT DEPT_ID,parent_id,type,dept_name,order_num,create_time,modify_time,dept_code,tenant_id,dept_address,longitude,latitude,province,city,county,town FROM t_dept ORDER BY order_num ASC;
2021-04-02 13:17:36.313 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-04-02 13:17:36 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role ) TOTAL;
2021-04-02 13:17:36.319 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-04-02 13:17:36 | 耗时 5 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role LIMIT 0,10;
2021-04-02 13:17:45.696 febs [http-nio-11101-exec-6] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 13:17:45.743 febs [http-nio-11101-exec-6] INFO  p6spy - 2021-04-02 13:17:45 | 耗时 21 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = '22';
2021-04-02 13:17:45.856 febs [http-nio-11101-exec-6] INFO  p6spy - 2021-04-02 13:17:45 | 耗时 63 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = '22';
2021-04-02 13:17:45.902 febs [http-nio-11101-exec-6] INFO  p6spy - 2021-04-02 13:17:45 | 耗时 33 ms | SQL 语句：
INSERT INTO t_user ( username, password, tenant_id, mobile, status, create_time, gender, avatar, user_type, is_xcx, is_show ) VALUES ( '22', '06ab1d51575a32185708eb8945a71535', 0, '13333333333', '1', '2021-04-02T13:17:45.857+0800', '2', 'default.jpg', 0, 0, 1 );
2021-04-02 13:17:45.926 febs [http-nio-11101-exec-6] INFO  p6spy - 2021-04-02 13:17:45 | 耗时 10 ms | SQL 语句：
INSERT INTO t_user_role ( user_id, role_id ) VALUES ( 167, 1 );
2021-04-02 13:17:45.937 febs [http-nio-11101-exec-6] INFO  p6spy - 2021-04-02 13:17:45 | 耗时 8 ms | SQL 语句：
INSERT INTO t_user_config ( USER_ID, theme, layout, multi_page, fix_siderbar, fix_header, color ) VALUES ( 167, 'dark', 'side', '0', '1', '1', 'rgb(66, 185, 131)' );
2021-04-02 13:17:46.036 febs [http-nio-11101-exec-6] INFO  p6spy - 2021-04-02 13:17:46 | 耗时 98 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = '22' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 13:17:46.054 febs [http-nio-11101-exec-6] INFO  p6spy - 2021-04-02 13:17:46 | 耗时 6 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = '22';
2021-04-02 13:17:46.090 febs [http-nio-11101-exec-6] INFO  p6spy - 2021-04-02 13:17:46 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = '22' and m.perms is not null and m.perms <> '';
2021-04-02 13:17:46.105 febs [http-nio-11101-exec-6] INFO  p6spy - 2021-04-02 13:17:46 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='167';
2021-04-02 13:17:46.153 febs [asyncTaskExecutor-1] INFO  p6spy - 2021-04-02 13:17:46 | 耗时 8 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'sysadmin', '新增用户', 412, 'com.smart.brd.sys.system.controller.UserController.addUser()', ' request: org.apache.shiro.web.servlet.ShiroHttpServletRequest@79ab1a70 user: "User(userId=167, username=22, password=06ab1d51575a32185708eb8945a71535, deptId=null, deptIds=null, tenantId=0, deptName=null, email=null, mobile=13333333333, status=1, createTime=Fri Apr 02 13:17:45 CST 2021, modifyTime=null, lastLoginTime=null, gender=2, description=null, avatar=default.jpg, roleId=1, roleName=null, expireTime=null, sortField=null, sortOrder=null, createTimeFrom=null, createTimeTo=null, id=null, userType=0, condition=null, openId=null, isXcx=0, isShow=1, createDept=null, province=null, city=null, county=null, town=null, housing=null)"', '127.0.0.1', '2021-04-02T13:17:46.136+0800', '内网IP|0|0|内网IP|内网IP' );
2021-04-02 13:17:46.268 febs [http-nio-11101-exec-16] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 13:17:46.281 febs [http-nio-11101-exec-16] INFO  p6spy - 2021-04-02 13:17:46 | 耗时 7 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 13:17:46.315 febs [http-nio-11101-exec-16] INFO  p6spy - 2021-04-02 13:17:46 | 耗时 31 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-04-02 13:17:50.618 febs [http-nio-11101-exec-8] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 13:17:50.669 febs [http-nio-11101-exec-8] INFO  p6spy - 2021-04-02 13:17:50 | 耗时 37 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE USER_ID='167';
2021-04-02 13:17:50.745 febs [http-nio-11101-exec-8] INFO  p6spy - 2021-04-02 13:17:50 | 耗时 9 ms | SQL 语句：
DELETE FROM t_user WHERE USER_ID IN ( '167' );
2021-04-02 13:17:50.759 febs [http-nio-11101-exec-8] INFO  p6spy - 2021-04-02 13:17:50 | 耗时 10 ms | SQL 语句：
DELETE FROM t_user_role WHERE user_id = 167;
2021-04-02 13:17:50.769 febs [http-nio-11101-exec-8] INFO  p6spy - 2021-04-02 13:17:50 | 耗时 9 ms | SQL 语句：
DELETE FROM t_user_config WHERE USER_ID IN ( '167' );
2021-04-02 13:17:50.843 febs [asyncTaskExecutor-2] INFO  p6spy - 2021-04-02 13:17:50 | 耗时 55 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'sysadmin', '删除用户', 159, 'com.smart.brd.sys.system.controller.UserController.deleteUsers()', ' userIds: "167"', '127.0.0.1', '2021-04-02T13:17:50.786+0800', '内网IP|0|0|内网IP|内网IP' );
2021-04-02 13:17:51.132 febs [http-nio-11101-exec-19] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 13:17:51.144 febs [http-nio-11101-exec-19] INFO  p6spy - 2021-04-02 13:17:51 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 13:17:51.185 febs [http-nio-11101-exec-19] INFO  p6spy - 2021-04-02 13:17:51 | 耗时 41 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-04-02 13:18:30.331 febs [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-04-02 13:18:30.694 febs [restartedMain] INFO  c.a.n.c.c.i.LocalConfigInfoProcessor - LOCAL_SNAPSHOT_PATH:C:\Users\Dukzzz\nacos\config
2021-04-02 13:18:30.713 febs [restartedMain] INFO  c.a.nacos.client.config.impl.Limiter - limitTime:5.0
2021-04-02 13:18:31.125 febs [restartedMain] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-brd-sys2-local.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys2.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys2,DEFAULT_GROUP'}]
2021-04-02 13:18:31.129 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - The following profiles are active: local
2021-04-02 13:18:32.096 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-04-02 13:18:32.098 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-04-02 13:18:32.137 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 28ms. Found 0 Redis repository interfaces.
2021-04-02 13:18:32.364 febs [restartedMain] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=8c4fe861-2a7b-3271-bb5c-24bd86b9b2e5
2021-04-02 13:18:32.480 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [com.smart.brd.sys.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$c5c6f023] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:18:32.542 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:18:32.600 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$e27865d8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:18:32.607 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:18:32.610 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:18:32.643 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [com.smart.brd.sys.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$861c1f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:18:32.873 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.smart.brd.sys.common.config.RedisConfig$$EnhancerBySpringCGLIB$$91e2b273] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:18:32.886 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:18:32.888 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [com.smart.brd.sys.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:18:32.929 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:18:32.935 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [com.smart.brd.sys.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$b0e60645] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:18:32.938 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:18:32.943 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$b6b261a1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:18:32.949 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:18:32.951 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:18:32.953 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2021-04-02 13:18:32.958 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2021-04-02 13:18:33.146 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2021-04-02 13:18:33.146 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2021-04-02 13:18:33.146 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2021-04-02 13:18:33.146 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2021-04-02 13:18:33.146 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:18:33.156 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:18:33.163 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:18:33.551 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:18:33.558 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:18:33.584 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:18:33.587 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy144] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:18:33.592 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:18:33.593 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy145] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:18:33.594 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [com.smart.brd.sys.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:18:33.630 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [com.smart.brd.sys.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:18:33.644 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userTokenServiceImpl' of type [com.smart.brd.sys.system.usertoken.service.impl.UserTokenServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:18:33.647 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:18:33.648 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy148] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:18:33.649 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [com.smart.brd.sys.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:18:33.666 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:18:33.667 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy150] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:18:33.668 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [com.smart.brd.sys.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:18:33.707 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:18:33.708 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy152] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:18:33.709 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [com.smart.brd.sys.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:18:33.721 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:18:33.722 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [com.sun.proxy.$Proxy154] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:18:33.726 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:18:33.727 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy155] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:18:33.728 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [com.smart.brd.sys.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:18:33.741 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:18:33.743 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:18:33.745 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:18:33.749 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:18:33.750 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:18:33.753 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:18:33.756 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:18:33.758 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:18:33.764 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:18:33.766 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:18:33.769 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:18:33.772 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:18:33.787 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:18:33.800 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [com.smart.brd.sys.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:18:33.800 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [com.smart.brd.sys.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:18:33.801 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [com.smart.brd.sys.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:18:33.808 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:18:33.823 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:18:34.207 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 11101 (http)
2021-04-02 13:18:34.214 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-11101"]
2021-04-02 13:18:34.215 febs [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2021-04-02 13:18:34.215 febs [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.31]
2021-04-02 13:18:34.300 febs [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2021-04-02 13:18:34.300 febs [restartedMain] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3154 ms
2021-04-02 13:18:34.383 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-04-02 13:18:34.390 febs [restartedMain] INFO  c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@18536fcf
2021-04-02 13:18:34.945 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2021-04-02 13:18:34.954 febs [restartedMain] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-02 13:18:34.954 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.2 created.
2021-04-02 13:18:34.955 febs [restartedMain] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2021-04-02 13:18:34.956 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-02 13:18:34.956 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2021-04-02 13:18:34.956 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.2
2021-04-02 13:18:34.956 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@7a58455
2021-04-02 13:18:35.043 febs [restartedMain] INFO  p6spy - 2021-04-02 13:18:35 | 耗时 21 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2021-04-02 13:18:35.431 febs [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2021-04-02 13:18:35.747 febs [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-04-02 13:18:35.854 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2021-04-02 13:18:36.018 febs [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2021-04-02 13:18:36.045 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-04-02 13:18:36.256 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2021-04-02 13:18:36.269 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-04-02 13:18:36.269 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Environment :null
2021-04-02 13:18:36.269 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-04-02 13:18:36.922 febs [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2021-04-02 13:18:36.930 febs [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2021-04-02 13:18:36.967 febs [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2021-04-02 13:18:36.977 febs [restartedMain] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2021-04-02 13:18:36.977 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2021-04-02 13:18:36.991 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-11101"]
2021-04-02 13:18:37.013 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 11101 (http) with context path ''
2021-04-02 13:18:37.016 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"192.168.0.103","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":11101,"scheduled":false,"serviceName":"DEFAULT_GROUP@@brd-sys2","stopped":false,"weight":1.0} to beat map.
2021-04-02 13:18:37.066 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [REGISTER-SERVICE] public registering service DEFAULT_GROUP@@brd-sys2 with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"192.168.0.103","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":11101,"weight":1.0}
2021-04-02 13:18:37.085 febs [scheduling-1] INFO  c.s.brd.sys.common.task.CacheTask - delete expired user
2021-04-02 13:18:37.147 febs [restartedMain] INFO  c.a.c.n.r.NacosServiceRegistry - nacos registry, DEFAULT_GROUP brd-sys2 192.168.0.103:11101 register finished
2021-04-02 13:18:37.292 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - Started BrdSysApplication in 7.73 seconds (JVM running for 8.651)
2021-04-02 13:18:37.296 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - Redis连接中 ······
2021-04-02 13:18:37.301 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存初始化 ······
2021-04-02 13:18:37.301 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存用户数据 ······
2021-04-02 13:18:37.357 febs [restartedMain] INFO  p6spy - 2021-04-02 13:18:37 | 耗时 27 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user;
2021-04-02 13:18:37.375 febs [restartedMain] INFO  p6spy - 2021-04-02 13:18:37 | 耗时 10 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sysadmin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 13:18:37.487 febs [restartedMain] INFO  p6spy - 2021-04-02 13:18:37 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin';
2021-04-02 13:18:37.512 febs [restartedMain] INFO  p6spy - 2021-04-02 13:18:37 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'sysadmin' and m.perms is not null and m.perms <> '';
2021-04-02 13:18:37.533 febs [restartedMain] INFO  p6spy - 2021-04-02 13:18:37 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='-1';
2021-04-02 13:18:37.590 febs [restartedMain] INFO  p6spy - 2021-04-02 13:18:37 | 耗时 55 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengcheng1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 13:18:37.667 febs [restartedMain] INFO  p6spy - 2021-04-02 13:18:37 | 耗时 7 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengcheng1';
2021-04-02 13:18:37.784 febs [restartedMain] INFO  p6spy - 2021-04-02 13:18:37 | 耗时 71 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengcheng1' and m.perms is not null and m.perms <> '';
2021-04-02 13:18:37.995 febs [restartedMain] INFO  p6spy - 2021-04-02 13:18:37 | 耗时 158 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='163';
2021-04-02 13:18:38.061 febs [restartedMain] INFO  p6spy - 2021-04-02 13:18:38 | 耗时 53 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yulin1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 13:18:38.125 febs [restartedMain] INFO  p6spy - 2021-04-02 13:18:38 | 耗时 6 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yulin1';
2021-04-02 13:18:38.144 febs [restartedMain] INFO  p6spy - 2021-04-02 13:18:38 | 耗时 6 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yulin1' and m.perms is not null and m.perms <> '';
2021-04-02 13:18:38.165 febs [restartedMain] INFO  p6spy - 2021-04-02 13:18:38 | 耗时 7 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='164';
2021-04-02 13:18:38.179 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2021-04-02 13:18:38.179 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2021-04-02 13:18:38.179 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2021-04-02 13:18:38.179 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -                                                       
2021-04-02 13:18:38.180 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - FEBS 启动完毕，时间：2021-04-02T13:18:38.180
2021-04-02 13:18:38.188 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2+DEFAULT_GROUP
2021-04-02 13:18:38.190 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2, group=DEFAULT_GROUP, cnt=1
2021-04-02 13:18:38.190 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2.yaml+DEFAULT_GROUP
2021-04-02 13:18:38.191 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2.yaml, group=DEFAULT_GROUP, cnt=1
2021-04-02 13:18:38.191 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2-local.yaml+DEFAULT_GROUP
2021-04-02 13:18:38.192 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2-local.yaml, group=DEFAULT_GROUP, cnt=1
2021-04-02 13:18:45.554 febs [http-nio-11101-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-04-02 13:18:45.554 febs [http-nio-11101-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2021-04-02 13:18:45.563 febs [http-nio-11101-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 9 ms
2021-04-02 13:18:45.757 febs [http-nio-11101-exec-1] INFO  p6spy - 2021-04-02 13:18:45 | 耗时 53 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-04-02 13:18:45.857 febs [http-nio-11101-exec-2] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 13:18:45.934 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-04-02 13:18:45 | 耗时 26 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin') order by m.order_num;
2021-04-02 13:18:46.487 febs [http-nio-11101-exec-3] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 13:18:46.582 febs [http-nio-11101-exec-3] INFO  p6spy - 2021-04-02 13:18:46 | 耗时 35 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 13:18:46.645 febs [http-nio-11101-exec-3] INFO  p6spy - 2021-04-02 13:18:46 | 耗时 57 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-04-02 13:18:48.099 febs [http-nio-11101-exec-6] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 13:18:48.118 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 13:18:48 | 耗时 9 ms | SQL 语句：
SELECT DEPT_ID,parent_id,type,dept_name,order_num,create_time,modify_time,dept_code,tenant_id,dept_address,longitude,latitude,province,city,county,town FROM t_dept ORDER BY order_num ASC;
2021-04-02 13:18:48.128 febs [http-nio-11101-exec-6] INFO  p6spy - 2021-04-02 13:18:48 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role ) TOTAL;
2021-04-02 13:18:48.133 febs [http-nio-11101-exec-6] INFO  p6spy - 2021-04-02 13:18:48 | 耗时 5 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role LIMIT 0,10;
2021-04-02 13:18:55.570 febs [http-nio-11101-exec-4] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 13:18:55.623 febs [http-nio-11101-exec-4] INFO  p6spy - 2021-04-02 13:18:55 | 耗时 32 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = '2';
2021-04-02 13:18:55.735 febs [http-nio-11101-exec-4] INFO  p6spy - 2021-04-02 13:18:55 | 耗时 63 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = '2';
2021-04-02 13:18:55.835 febs [http-nio-11101-exec-4] INFO  p6spy - 2021-04-02 13:18:55 | 耗时 68 ms | SQL 语句：
INSERT INTO t_user ( username, password, tenant_id, mobile, status, create_time, gender, avatar, user_type, is_xcx, is_show ) VALUES ( '2', '9aa3bc37ef2475a50e5465e8364f0bc4', 0, '13333333333', '1', '2021-04-02T13:18:55.736+0800', '2', 'default.jpg', 0, 0, 1 );
2021-04-02 13:18:55.860 febs [http-nio-11101-exec-4] INFO  p6spy - 2021-04-02 13:18:55 | 耗时 10 ms | SQL 语句：
INSERT INTO t_user_role ( user_id, role_id ) VALUES ( 168, 1 );
2021-04-02 13:18:55.872 febs [http-nio-11101-exec-4] INFO  p6spy - 2021-04-02 13:18:55 | 耗时 9 ms | SQL 语句：
INSERT INTO t_user_config ( USER_ID, theme, layout, multi_page, fix_siderbar, fix_header, color ) VALUES ( 168, 'dark', 'side', '0', '1', '1', 'rgb(66, 185, 131)' );
2021-04-02 13:18:55.982 febs [http-nio-11101-exec-4] INFO  p6spy - 2021-04-02 13:18:55 | 耗时 109 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = '2' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 13:18:56.002 febs [http-nio-11101-exec-4] INFO  p6spy - 2021-04-02 13:18:56 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = '2';
2021-04-02 13:18:56.017 febs [http-nio-11101-exec-4] INFO  p6spy - 2021-04-02 13:18:56 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = '2' and m.perms is not null and m.perms <> '';
2021-04-02 13:18:56.031 febs [http-nio-11101-exec-4] INFO  p6spy - 2021-04-02 13:18:56 | 耗时 4 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='168';
2021-04-02 13:18:56.080 febs [asyncTaskExecutor-1] INFO  p6spy - 2021-04-02 13:18:56 | 耗时 9 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'sysadmin', '新增用户', 465, 'com.smart.brd.sys.system.controller.UserController.addUser()', ' request: org.apache.shiro.web.servlet.ShiroHttpServletRequest@4b3a480 user: "User(userId=168, username=2, password=9aa3bc37ef2475a50e5465e8364f0bc4, deptId=null, deptIds=null, tenantId=0, deptName=null, email=null, mobile=13333333333, status=1, createTime=Fri Apr 02 13:18:55 CST 2021, modifyTime=null, lastLoginTime=null, gender=2, description=null, avatar=default.jpg, roleId=1, roleName=null, expireTime=null, sortField=null, sortOrder=null, createTimeFrom=null, createTimeTo=null, id=null, userType=0, condition=null, openId=null, isXcx=0, isShow=1, createDept=null, province=null, city=null, county=null, town=null, housing=null)"', '127.0.0.1', '2021-04-02T13:18:56.062+0800', '内网IP|0|0|内网IP|内网IP' );
2021-04-02 13:18:56.168 febs [http-nio-11101-exec-5] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 13:18:56.180 febs [http-nio-11101-exec-5] INFO  p6spy - 2021-04-02 13:18:56 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 13:18:56.218 febs [http-nio-11101-exec-5] INFO  p6spy - 2021-04-02 13:18:56 | 耗时 36 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-04-02 13:18:59.644 febs [http-nio-11101-exec-8] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 13:18:59.696 febs [http-nio-11101-exec-8] INFO  p6spy - 2021-04-02 13:18:59 | 耗时 36 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE USER_ID='168';
2021-04-02 13:18:59.767 febs [http-nio-11101-exec-8] INFO  p6spy - 2021-04-02 13:18:59 | 耗时 9 ms | SQL 语句：
DELETE FROM t_user WHERE USER_ID IN ( '168' );
2021-04-02 13:18:59.780 febs [http-nio-11101-exec-8] INFO  p6spy - 2021-04-02 13:18:59 | 耗时 9 ms | SQL 语句：
DELETE FROM t_user_role WHERE user_id = 168;
2021-04-02 13:18:59.791 febs [http-nio-11101-exec-8] INFO  p6spy - 2021-04-02 13:18:59 | 耗时 9 ms | SQL 语句：
DELETE FROM t_user_config WHERE USER_ID IN ( '168' );
2021-04-02 13:18:59.860 febs [asyncTaskExecutor-2] INFO  p6spy - 2021-04-02 13:18:59 | 耗时 9 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'sysadmin', '删除用户', 156, 'com.smart.brd.sys.system.controller.UserController.deleteUsers()', ' userIds: "168"', '127.0.0.1', '2021-04-02T13:18:59.849+0800', '内网IP|0|0|内网IP|内网IP' );
2021-04-02 13:18:59.909 febs [http-nio-11101-exec-9] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 13:18:59.923 febs [http-nio-11101-exec-9] INFO  p6spy - 2021-04-02 13:18:59 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 13:18:59.956 febs [http-nio-11101-exec-9] INFO  p6spy - 2021-04-02 13:18:59 | 耗时 33 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-04-02 13:19:57.843 febs [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-04-02 13:19:58.212 febs [restartedMain] INFO  c.a.n.c.c.i.LocalConfigInfoProcessor - LOCAL_SNAPSHOT_PATH:C:\Users\Dukzzz\nacos\config
2021-04-02 13:19:58.231 febs [restartedMain] INFO  c.a.nacos.client.config.impl.Limiter - limitTime:5.0
2021-04-02 13:19:58.568 febs [restartedMain] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-brd-sys2-local.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys2.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys2,DEFAULT_GROUP'}]
2021-04-02 13:19:58.571 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - The following profiles are active: local
2021-04-02 13:19:59.577 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-04-02 13:19:59.579 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-04-02 13:19:59.618 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 28ms. Found 0 Redis repository interfaces.
2021-04-02 13:19:59.856 febs [restartedMain] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=8c4fe861-2a7b-3271-bb5c-24bd86b9b2e5
2021-04-02 13:20:00.000 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [com.smart.brd.sys.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$8e074c4e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:20:00.078 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:20:00.137 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$aab8c203] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:20:00.145 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:20:00.148 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:20:00.182 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [com.smart.brd.sys.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$c8c6784a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:20:00.433 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.smart.brd.sys.common.config.RedisConfig$$EnhancerBySpringCGLIB$$5a230e9e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:20:00.446 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:20:00.448 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [com.smart.brd.sys.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:20:00.488 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:20:00.495 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [com.smart.brd.sys.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$79266270] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:20:00.497 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:20:00.503 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$7ef2bdcc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:20:00.511 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:20:00.513 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:20:00.515 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2021-04-02 13:20:00.521 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2021-04-02 13:20:00.726 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2021-04-02 13:20:00.726 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2021-04-02 13:20:00.726 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2021-04-02 13:20:00.726 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2021-04-02 13:20:00.726 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:20:00.737 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:20:00.744 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:20:01.144 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:20:01.151 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:20:01.178 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:20:01.180 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy144] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:20:01.186 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:20:01.187 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy145] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:20:01.188 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [com.smart.brd.sys.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:20:01.212 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [com.smart.brd.sys.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:20:01.226 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userTokenServiceImpl' of type [com.smart.brd.sys.system.usertoken.service.impl.UserTokenServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:20:01.230 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:20:01.231 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy148] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:20:01.232 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [com.smart.brd.sys.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:20:01.248 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:20:01.249 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy150] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:20:01.250 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [com.smart.brd.sys.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:20:01.288 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:20:01.289 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy152] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:20:01.290 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [com.smart.brd.sys.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:20:01.302 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:20:01.303 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [com.sun.proxy.$Proxy154] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:20:01.308 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:20:01.309 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy155] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:20:01.310 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [com.smart.brd.sys.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:20:01.323 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:20:01.324 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:20:01.327 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:20:01.331 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:20:01.332 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:20:01.336 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:20:01.338 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:20:01.342 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:20:01.347 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:20:01.348 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:20:01.352 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:20:01.355 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:20:01.370 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:20:01.384 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [com.smart.brd.sys.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:20:01.384 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [com.smart.brd.sys.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:20:01.384 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [com.smart.brd.sys.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:20:01.392 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:20:01.406 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:20:01.761 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 11101 (http)
2021-04-02 13:20:01.769 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-11101"]
2021-04-02 13:20:01.769 febs [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2021-04-02 13:20:01.769 febs [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.31]
2021-04-02 13:20:01.870 febs [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2021-04-02 13:20:01.870 febs [restartedMain] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3283 ms
2021-04-02 13:20:01.953 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-04-02 13:20:01.961 febs [restartedMain] INFO  c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@416ad0e2
2021-04-02 13:20:02.490 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2021-04-02 13:20:02.498 febs [restartedMain] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-02 13:20:02.498 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.2 created.
2021-04-02 13:20:02.499 febs [restartedMain] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2021-04-02 13:20:02.499 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-02 13:20:02.499 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2021-04-02 13:20:02.499 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.2
2021-04-02 13:20:02.500 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@68b26e5
2021-04-02 13:20:02.551 febs [restartedMain] INFO  p6spy - 2021-04-02 13:20:02 | 耗时 5 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2021-04-02 13:20:02.939 febs [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2021-04-02 13:20:03.289 febs [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-04-02 13:20:03.397 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2021-04-02 13:20:03.444 febs [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2021-04-02 13:20:03.616 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-04-02 13:20:03.830 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2021-04-02 13:20:03.842 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-04-02 13:20:03.843 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Environment :null
2021-04-02 13:20:03.843 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-04-02 13:20:04.523 febs [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2021-04-02 13:20:04.533 febs [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2021-04-02 13:20:04.564 febs [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2021-04-02 13:20:04.574 febs [restartedMain] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2021-04-02 13:20:04.574 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2021-04-02 13:20:04.587 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-11101"]
2021-04-02 13:20:04.609 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 11101 (http) with context path ''
2021-04-02 13:20:04.612 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"192.168.0.103","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":11101,"scheduled":false,"serviceName":"DEFAULT_GROUP@@brd-sys2","stopped":false,"weight":1.0} to beat map.
2021-04-02 13:20:04.664 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [REGISTER-SERVICE] public registering service DEFAULT_GROUP@@brd-sys2 with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"192.168.0.103","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":11101,"weight":1.0}
2021-04-02 13:20:04.684 febs [scheduling-1] INFO  c.s.brd.sys.common.task.CacheTask - delete expired user
2021-04-02 13:20:04.738 febs [restartedMain] INFO  c.a.c.n.r.NacosServiceRegistry - nacos registry, DEFAULT_GROUP brd-sys2 192.168.0.103:11101 register finished
2021-04-02 13:20:04.871 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - Started BrdSysApplication in 7.819 seconds (JVM running for 8.727)
2021-04-02 13:20:04.875 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - Redis连接中 ······
2021-04-02 13:20:04.881 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存初始化 ······
2021-04-02 13:20:04.881 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存用户数据 ······
2021-04-02 13:20:04.937 febs [restartedMain] INFO  p6spy - 2021-04-02 13:20:04 | 耗时 26 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user;
2021-04-02 13:20:04.954 febs [restartedMain] INFO  p6spy - 2021-04-02 13:20:04 | 耗时 9 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sysadmin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 13:20:05.107 febs [restartedMain] INFO  p6spy - 2021-04-02 13:20:05 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin';
2021-04-02 13:20:05.134 febs [restartedMain] INFO  p6spy - 2021-04-02 13:20:05 | 耗时 7 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'sysadmin' and m.perms is not null and m.perms <> '';
2021-04-02 13:20:05.156 febs [restartedMain] INFO  p6spy - 2021-04-02 13:20:05 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='-1';
2021-04-02 13:20:05.213 febs [restartedMain] INFO  p6spy - 2021-04-02 13:20:05 | 耗时 53 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengcheng1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 13:20:05.271 febs [restartedMain] INFO  p6spy - 2021-04-02 13:20:05 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengcheng1';
2021-04-02 13:20:05.293 febs [restartedMain] INFO  p6spy - 2021-04-02 13:20:05 | 耗时 6 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengcheng1' and m.perms is not null and m.perms <> '';
2021-04-02 13:20:05.314 febs [restartedMain] INFO  p6spy - 2021-04-02 13:20:05 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='163';
2021-04-02 13:20:05.384 febs [restartedMain] INFO  p6spy - 2021-04-02 13:20:05 | 耗时 52 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yulin1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 13:20:05.445 febs [restartedMain] INFO  p6spy - 2021-04-02 13:20:05 | 耗时 6 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yulin1';
2021-04-02 13:20:05.461 febs [restartedMain] INFO  p6spy - 2021-04-02 13:20:05 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yulin1' and m.perms is not null and m.perms <> '';
2021-04-02 13:20:05.478 febs [restartedMain] INFO  p6spy - 2021-04-02 13:20:05 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='164';
2021-04-02 13:20:05.488 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2021-04-02 13:20:05.488 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2021-04-02 13:20:05.488 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2021-04-02 13:20:05.488 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -                                                       
2021-04-02 13:20:05.488 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - FEBS 启动完毕，时间：2021-04-02T13:20:05.488
2021-04-02 13:20:05.490 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2+DEFAULT_GROUP
2021-04-02 13:20:05.490 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2, group=DEFAULT_GROUP, cnt=1
2021-04-02 13:20:05.491 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2.yaml+DEFAULT_GROUP
2021-04-02 13:20:05.491 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2.yaml, group=DEFAULT_GROUP, cnt=1
2021-04-02 13:20:05.491 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2-local.yaml+DEFAULT_GROUP
2021-04-02 13:20:05.491 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2-local.yaml, group=DEFAULT_GROUP, cnt=1
2021-04-02 13:20:58.680 febs [http-nio-11101-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-04-02 13:20:58.680 febs [http-nio-11101-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2021-04-02 13:20:58.689 febs [http-nio-11101-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 9 ms
2021-04-02 13:21:02.388 febs [http-nio-11101-exec-2] INFO  c.s.b.sys.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2021-04-02 13:21:02.487 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-04-02 13:21:02 | 耗时 51 ms | SQL 语句：
UPDATE t_user SET last_login_time='2021-04-02T13:21:02.417+0800', user_type=0 WHERE username = 'sysadmin';
2021-04-02 13:21:02.542 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-04-02 13:21:02 | 耗时 53 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sysadmin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 13:21:02.624 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-04-02 13:21:02 | 耗时 8 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'sysadmin', '2021-04-02T13:21:02.610+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1' );
2021-04-02 13:21:02.786 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-04-02 13:21:02 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='-1';
2021-04-02 13:21:02.921 febs [http-nio-11101-exec-5] INFO  p6spy - 2021-04-02 13:21:02 | 耗时 89 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-04-02 13:21:02.945 febs [http-nio-11101-exec-6] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 13:21:02.972 febs [http-nio-11101-exec-6] INFO  p6spy - 2021-04-02 13:21:02 | 耗时 10 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin') order by m.order_num;
2021-04-02 13:21:03.397 febs [http-nio-11101-exec-3] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 13:21:03.498 febs [http-nio-11101-exec-3] INFO  p6spy - 2021-04-02 13:21:03 | 耗时 35 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 13:21:03.566 febs [http-nio-11101-exec-3] INFO  p6spy - 2021-04-02 13:21:03 | 耗时 64 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-04-02 13:21:05.031 febs [http-nio-11101-exec-4] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 13:21:05.046 febs [http-nio-11101-exec-12] INFO  p6spy - 2021-04-02 13:21:05 | 耗时 9 ms | SQL 语句：
SELECT DEPT_ID,parent_id,type,dept_name,order_num,create_time,modify_time,dept_code,tenant_id,dept_address,longitude,latitude,province,city,county,town FROM t_dept ORDER BY order_num ASC;
2021-04-02 13:21:05.056 febs [http-nio-11101-exec-4] INFO  p6spy - 2021-04-02 13:21:05 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role ) TOTAL;
2021-04-02 13:21:05.062 febs [http-nio-11101-exec-4] INFO  p6spy - 2021-04-02 13:21:05 | 耗时 4 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role LIMIT 0,10;
2021-04-02 13:21:10.919 febs [http-nio-11101-exec-13] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 13:21:10.965 febs [http-nio-11101-exec-13] INFO  p6spy - 2021-04-02 13:21:10 | 耗时 28 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = '15991477401';
2021-04-02 13:21:11.075 febs [http-nio-11101-exec-13] INFO  p6spy - 2021-04-02 13:21:11 | 耗时 58 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = '15991477401';
2021-04-02 13:21:11.123 febs [http-nio-11101-exec-13] INFO  p6spy - 2021-04-02 13:21:11 | 耗时 36 ms | SQL 语句：
INSERT INTO t_user ( username, password, tenant_id, mobile, status, create_time, gender, avatar, user_type, is_xcx, is_show ) VALUES ( '15991477401', '0c2a9ce9ffbfd08b107b189b9aafa290', 0, '13333333333', '1', '2021-04-02T13:21:11.076+0800', '2', 'default.jpg', 0, 0, 1 );
2021-04-02 13:21:11.137 febs [http-nio-11101-exec-13] INFO  p6spy - 2021-04-02 13:21:11 | 耗时 10 ms | SQL 语句：
INSERT INTO t_user_role ( user_id, role_id ) VALUES ( 169, 1 );
2021-04-02 13:21:11.148 febs [http-nio-11101-exec-13] INFO  p6spy - 2021-04-02 13:21:11 | 耗时 9 ms | SQL 语句：
INSERT INTO t_user_config ( USER_ID, theme, layout, multi_page, fix_siderbar, fix_header, color ) VALUES ( 169, 'dark', 'side', '0', '1', '1', 'rgb(66, 185, 131)' );
2021-04-02 13:21:11.205 febs [http-nio-11101-exec-13] INFO  p6spy - 2021-04-02 13:21:11 | 耗时 54 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = '15991477401' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 13:21:11.263 febs [http-nio-11101-exec-13] INFO  p6spy - 2021-04-02 13:21:11 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = '15991477401';
2021-04-02 13:21:11.282 febs [http-nio-11101-exec-13] INFO  p6spy - 2021-04-02 13:21:11 | 耗时 8 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = '15991477401' and m.perms is not null and m.perms <> '';
2021-04-02 13:21:11.351 febs [http-nio-11101-exec-13] INFO  p6spy - 2021-04-02 13:21:11 | 耗时 47 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='169';
2021-04-02 13:21:11.541 febs [asyncTaskExecutor-1] INFO  p6spy - 2021-04-02 13:21:11 | 耗时 52 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'sysadmin', '新增用户', 527, 'com.smart.brd.sys.system.controller.UserController.addUser()', ' request: org.apache.shiro.web.servlet.ShiroHttpServletRequest@28022a58 user: "User(userId=169, username=15991477401, password=0c2a9ce9ffbfd08b107b189b9aafa290, deptId=null, deptIds=null, tenantId=0, deptName=null, email=null, mobile=13333333333, status=1, createTime=Fri Apr 02 13:21:11 CST 2021, modifyTime=null, lastLoginTime=null, gender=2, description=null, avatar=default.jpg, roleId=1, roleName=null, expireTime=null, sortField=null, sortOrder=null, createTimeFrom=null, createTimeTo=null, id=null, userType=0, condition=null, openId=null, isXcx=0, isShow=1, createDept=null, province=null, city=null, county=null, town=null, housing=null)"', '127.0.0.1', '2021-04-02T13:21:11.484+0800', '内网IP|0|0|内网IP|内网IP' );
2021-04-02 13:21:11.568 febs [http-nio-11101-exec-9] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 13:21:11.580 febs [http-nio-11101-exec-9] INFO  p6spy - 2021-04-02 13:21:11 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 13:21:11.619 febs [http-nio-11101-exec-9] INFO  p6spy - 2021-04-02 13:21:11 | 耗时 36 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-04-02 13:21:15.773 febs [http-nio-11101-exec-10] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 13:21:15.826 febs [http-nio-11101-exec-10] INFO  p6spy - 2021-04-02 13:21:15 | 耗时 38 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE USER_ID='169';
2021-04-02 13:21:15.909 febs [http-nio-11101-exec-10] INFO  p6spy - 2021-04-02 13:21:15 | 耗时 9 ms | SQL 语句：
DELETE FROM t_user WHERE USER_ID IN ( '169' );
2021-04-02 13:21:15.923 febs [http-nio-11101-exec-10] INFO  p6spy - 2021-04-02 13:21:15 | 耗时 8 ms | SQL 语句：
DELETE FROM t_user_role WHERE user_id = 169;
2021-04-02 13:21:15.932 febs [http-nio-11101-exec-10] INFO  p6spy - 2021-04-02 13:21:15 | 耗时 8 ms | SQL 语句：
DELETE FROM t_user_config WHERE USER_ID IN ( '169' );
2021-04-02 13:21:16.001 febs [asyncTaskExecutor-2] INFO  p6spy - 2021-04-02 13:21:16 | 耗时 51 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'sysadmin', '删除用户', 169, 'com.smart.brd.sys.system.controller.UserController.deleteUsers()', ' userIds: "169"', '127.0.0.1', '2021-04-02T13:21:15.948+0800', '内网IP|0|0|内网IP|内网IP' );
2021-04-02 13:21:16.301 febs [http-nio-11101-exec-11] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 13:21:16.319 febs [http-nio-11101-exec-11] INFO  p6spy - 2021-04-02 13:21:16 | 耗时 13 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 13:21:16.340 febs [http-nio-11101-exec-11] INFO  p6spy - 2021-04-02 13:21:16 | 耗时 19 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-04-02 13:23:31.927 febs [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-04-02 13:23:32.308 febs [restartedMain] INFO  c.a.n.c.c.i.LocalConfigInfoProcessor - LOCAL_SNAPSHOT_PATH:C:\Users\Dukzzz\nacos\config
2021-04-02 13:23:32.326 febs [restartedMain] INFO  c.a.nacos.client.config.impl.Limiter - limitTime:5.0
2021-04-02 13:23:32.655 febs [restartedMain] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-brd-sys2-local.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys2.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys2,DEFAULT_GROUP'}]
2021-04-02 13:23:32.659 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - The following profiles are active: local
2021-04-02 13:23:33.666 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-04-02 13:23:33.668 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-04-02 13:23:33.709 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 30ms. Found 0 Redis repository interfaces.
2021-04-02 13:23:33.946 febs [restartedMain] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=8c4fe861-2a7b-3271-bb5c-24bd86b9b2e5
2021-04-02 13:23:34.063 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [com.smart.brd.sys.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$9fad8de1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:23:34.128 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:23:34.190 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$bc5f0396] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:23:34.196 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:23:34.199 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:23:34.232 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [com.smart.brd.sys.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$da6cb9dd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:23:34.464 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.smart.brd.sys.common.config.RedisConfig$$EnhancerBySpringCGLIB$$6bc95031] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:23:34.478 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:23:34.480 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [com.smart.brd.sys.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:23:34.517 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:23:34.523 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [com.smart.brd.sys.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$8acca403] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:23:34.526 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:23:34.531 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$9098ff5f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:23:34.538 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:23:34.540 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:23:34.542 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2021-04-02 13:23:34.547 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2021-04-02 13:23:34.739 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2021-04-02 13:23:34.739 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2021-04-02 13:23:34.739 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2021-04-02 13:23:34.739 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2021-04-02 13:23:34.739 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:23:34.750 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:23:34.758 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:23:35.239 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:23:35.246 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:23:35.277 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:23:35.280 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy144] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:23:35.295 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:23:35.296 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy145] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:23:35.297 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [com.smart.brd.sys.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:23:35.323 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [com.smart.brd.sys.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:23:35.337 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userTokenServiceImpl' of type [com.smart.brd.sys.system.usertoken.service.impl.UserTokenServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:23:35.342 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:23:35.344 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy148] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:23:35.345 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [com.smart.brd.sys.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:23:35.364 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:23:35.365 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy150] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:23:35.366 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [com.smart.brd.sys.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:23:35.414 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:23:35.415 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy152] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:23:35.416 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [com.smart.brd.sys.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:23:35.430 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:23:35.431 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [com.sun.proxy.$Proxy154] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:23:35.436 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:23:35.437 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy155] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:23:35.439 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [com.smart.brd.sys.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:23:35.453 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:23:35.457 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:23:35.461 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:23:35.467 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:23:35.469 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:23:35.472 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:23:35.475 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:23:35.478 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:23:35.484 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:23:35.485 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:23:35.493 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:23:35.496 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:23:35.514 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:23:35.529 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [com.smart.brd.sys.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:23:35.529 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [com.smart.brd.sys.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:23:35.529 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [com.smart.brd.sys.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:23:35.536 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:23:35.549 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:23:35.898 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 11101 (http)
2021-04-02 13:23:35.905 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-11101"]
2021-04-02 13:23:35.905 febs [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2021-04-02 13:23:35.906 febs [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.31]
2021-04-02 13:23:36.005 febs [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2021-04-02 13:23:36.005 febs [restartedMain] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3327 ms
2021-04-02 13:23:36.111 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-04-02 13:23:36.125 febs [restartedMain] INFO  c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@40e3f109
2021-04-02 13:23:36.778 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2021-04-02 13:23:36.793 febs [restartedMain] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-02 13:23:36.794 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.2 created.
2021-04-02 13:23:36.794 febs [restartedMain] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2021-04-02 13:23:36.795 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-02 13:23:36.795 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2021-04-02 13:23:36.795 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.2
2021-04-02 13:23:36.795 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@7f76c482
2021-04-02 13:23:36.857 febs [restartedMain] INFO  p6spy - 2021-04-02 13:23:36 | 耗时 5 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2021-04-02 13:23:37.433 febs [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2021-04-02 13:23:37.809 febs [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-04-02 13:23:37.917 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2021-04-02 13:23:37.963 febs [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2021-04-02 13:23:38.109 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-04-02 13:23:38.357 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2021-04-02 13:23:38.370 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-04-02 13:23:38.370 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Environment :null
2021-04-02 13:23:38.370 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-04-02 13:23:39.076 febs [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2021-04-02 13:23:39.085 febs [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2021-04-02 13:23:39.123 febs [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2021-04-02 13:23:39.139 febs [restartedMain] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2021-04-02 13:23:39.139 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2021-04-02 13:23:39.155 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-11101"]
2021-04-02 13:23:39.181 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 11101 (http) with context path ''
2021-04-02 13:23:39.185 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"192.168.0.103","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":11101,"scheduled":false,"serviceName":"DEFAULT_GROUP@@brd-sys2","stopped":false,"weight":1.0} to beat map.
2021-04-02 13:23:39.234 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [REGISTER-SERVICE] public registering service DEFAULT_GROUP@@brd-sys2 with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"192.168.0.103","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":11101,"weight":1.0}
2021-04-02 13:23:39.256 febs [scheduling-1] INFO  c.s.brd.sys.common.task.CacheTask - delete expired user
2021-04-02 13:23:39.311 febs [restartedMain] INFO  c.a.c.n.r.NacosServiceRegistry - nacos registry, DEFAULT_GROUP brd-sys2 192.168.0.103:11101 register finished
2021-04-02 13:23:39.451 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - Started BrdSysApplication in 8.299 seconds (JVM running for 9.146)
2021-04-02 13:23:39.455 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - Redis连接中 ······
2021-04-02 13:23:39.459 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存初始化 ······
2021-04-02 13:23:39.459 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存用户数据 ······
2021-04-02 13:23:39.514 febs [restartedMain] INFO  p6spy - 2021-04-02 13:23:39 | 耗时 24 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user;
2021-04-02 13:23:39.535 febs [restartedMain] INFO  p6spy - 2021-04-02 13:23:39 | 耗时 14 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sysadmin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 13:23:39.710 febs [restartedMain] INFO  p6spy - 2021-04-02 13:23:39 | 耗时 8 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin';
2021-04-02 13:23:39.739 febs [restartedMain] INFO  p6spy - 2021-04-02 13:23:39 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'sysadmin' and m.perms is not null and m.perms <> '';
2021-04-02 13:23:39.750 febs [restartedMain] INFO  p6spy - 2021-04-02 13:23:39 | 耗时 4 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='-1';
2021-04-02 13:23:39.811 febs [restartedMain] INFO  p6spy - 2021-04-02 13:23:39 | 耗时 58 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengcheng1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 13:23:39.872 febs [restartedMain] INFO  p6spy - 2021-04-02 13:23:39 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengcheng1';
2021-04-02 13:23:39.891 febs [restartedMain] INFO  p6spy - 2021-04-02 13:23:39 | 耗时 4 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengcheng1' and m.perms is not null and m.perms <> '';
2021-04-02 13:23:39.909 febs [restartedMain] INFO  p6spy - 2021-04-02 13:23:39 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='163';
2021-04-02 13:23:39.984 febs [restartedMain] INFO  p6spy - 2021-04-02 13:23:39 | 耗时 56 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yulin1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 13:23:40.048 febs [restartedMain] INFO  p6spy - 2021-04-02 13:23:40 | 耗时 6 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yulin1';
2021-04-02 13:23:40.069 febs [restartedMain] INFO  p6spy - 2021-04-02 13:23:40 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yulin1' and m.perms is not null and m.perms <> '';
2021-04-02 13:23:40.087 febs [restartedMain] INFO  p6spy - 2021-04-02 13:23:40 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='164';
2021-04-02 13:23:40.098 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2021-04-02 13:23:40.098 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2021-04-02 13:23:40.098 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2021-04-02 13:23:40.098 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -                                                       
2021-04-02 13:23:40.098 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - FEBS 启动完毕，时间：2021-04-02T13:23:40.098
2021-04-02 13:23:40.101 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2+DEFAULT_GROUP
2021-04-02 13:23:40.102 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2, group=DEFAULT_GROUP, cnt=1
2021-04-02 13:23:40.102 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2.yaml+DEFAULT_GROUP
2021-04-02 13:23:40.102 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2.yaml, group=DEFAULT_GROUP, cnt=1
2021-04-02 13:23:40.102 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2-local.yaml+DEFAULT_GROUP
2021-04-02 13:23:40.102 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2-local.yaml, group=DEFAULT_GROUP, cnt=1
2021-04-02 13:23:52.090 febs [http-nio-11101-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-04-02 13:23:52.091 febs [http-nio-11101-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2021-04-02 13:23:52.101 febs [http-nio-11101-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 10 ms
2021-04-02 13:23:52.297 febs [http-nio-11101-exec-1] INFO  p6spy - 2021-04-02 13:23:52 | 耗时 48 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-04-02 13:23:52.380 febs [http-nio-11101-exec-2] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 13:23:52.449 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-04-02 13:23:52 | 耗时 22 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin') order by m.order_num;
2021-04-02 13:23:52.861 febs [http-nio-11101-exec-3] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 13:23:52.953 febs [http-nio-11101-exec-3] INFO  p6spy - 2021-04-02 13:23:52 | 耗时 28 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 13:23:53.028 febs [http-nio-11101-exec-3] INFO  p6spy - 2021-04-02 13:23:53 | 耗时 54 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-04-02 13:24:00.401 febs [http-nio-11101-exec-5] INFO  c.s.b.sys.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2021-04-02 13:24:00.436 febs [http-nio-11101-exec-5] INFO  p6spy - 2021-04-02 13:24:00 | 耗时 9 ms | SQL 语句：
UPDATE t_user SET last_login_time='2021-04-02T13:24:00.418+0800', user_type=0 WHERE username = 'sysadmin';
2021-04-02 13:24:00.489 febs [http-nio-11101-exec-5] INFO  p6spy - 2021-04-02 13:24:00 | 耗时 52 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sysadmin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 13:24:00.575 febs [http-nio-11101-exec-5] INFO  p6spy - 2021-04-02 13:24:00 | 耗时 9 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'sysadmin', '2021-04-02T13:24:00.560+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1' );
2021-04-02 13:24:00.725 febs [http-nio-11101-exec-5] INFO  p6spy - 2021-04-02 13:24:00 | 耗时 6 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='-1';
2021-04-02 13:24:00.763 febs [http-nio-11101-exec-6] INFO  p6spy - 2021-04-02 13:24:00 | 耗时 21 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-04-02 13:24:00.817 febs [http-nio-11101-exec-7] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 13:24:00.825 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 13:24:00 | 耗时 5 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin') order by m.order_num;
2021-04-02 13:24:01.028 febs [http-nio-11101-exec-8] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 13:24:01.061 febs [http-nio-11101-exec-8] INFO  p6spy - 2021-04-02 13:24:01 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 13:24:01.076 febs [http-nio-11101-exec-8] INFO  p6spy - 2021-04-02 13:24:01 | 耗时 13 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-04-02 13:24:04.429 febs [http-nio-11101-exec-9] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 13:24:04.442 febs [http-nio-11101-exec-10] INFO  p6spy - 2021-04-02 13:24:04 | 耗时 9 ms | SQL 语句：
SELECT DEPT_ID,parent_id,type,dept_name,order_num,create_time,modify_time,dept_code,tenant_id,dept_address,longitude,latitude,province,city,county,town FROM t_dept ORDER BY order_num ASC;
2021-04-02 13:24:04.451 febs [http-nio-11101-exec-9] INFO  p6spy - 2021-04-02 13:24:04 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role ) TOTAL;
2021-04-02 13:24:04.457 febs [http-nio-11101-exec-9] INFO  p6spy - 2021-04-02 13:24:04 | 耗时 4 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role LIMIT 0,10;
2021-04-02 13:24:12.034 febs [http-nio-11101-exec-11] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 13:24:12.089 febs [http-nio-11101-exec-11] INFO  p6spy - 2021-04-02 13:24:12 | 耗时 37 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = '22';
2021-04-02 13:24:12.199 febs [http-nio-11101-exec-11] INFO  p6spy - 2021-04-02 13:24:12 | 耗时 54 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = '22';
2021-04-02 13:24:12.250 febs [http-nio-11101-exec-11] INFO  p6spy - 2021-04-02 13:24:12 | 耗时 43 ms | SQL 语句：
INSERT INTO t_user ( username, password, tenant_id, mobile, status, create_time, gender, avatar, user_type, is_xcx, is_show ) VALUES ( '22', '06ab1d51575a32185708eb8945a71535', 0, '13333333333', '1', '2021-04-02T13:24:12.199+0800', '2', 'default.jpg', 0, 0, 1 );
2021-04-02 13:24:12.269 febs [http-nio-11101-exec-11] INFO  p6spy - 2021-04-02 13:24:12 | 耗时 9 ms | SQL 语句：
INSERT INTO t_user_role ( user_id, role_id ) VALUES ( 170, 1 );
2021-04-02 13:24:12.281 febs [http-nio-11101-exec-11] INFO  p6spy - 2021-04-02 13:24:12 | 耗时 9 ms | SQL 语句：
INSERT INTO t_user_config ( USER_ID, theme, layout, multi_page, fix_siderbar, fix_header, color ) VALUES ( 170, 'dark', 'side', '0', '1', '1', 'rgb(66, 185, 131)' );
2021-04-02 13:24:12.386 febs [http-nio-11101-exec-11] INFO  p6spy - 2021-04-02 13:24:12 | 耗时 104 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = '22' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 13:24:12.404 febs [http-nio-11101-exec-11] INFO  p6spy - 2021-04-02 13:24:12 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = '22';
2021-04-02 13:24:12.419 febs [http-nio-11101-exec-11] INFO  p6spy - 2021-04-02 13:24:12 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = '22' and m.perms is not null and m.perms <> '';
2021-04-02 13:24:12.436 febs [http-nio-11101-exec-11] INFO  p6spy - 2021-04-02 13:24:12 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='170';
2021-04-02 13:24:12.478 febs [asyncTaskExecutor-1] INFO  p6spy - 2021-04-02 13:24:12 | 耗时 9 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'sysadmin', '新增用户', 410, 'com.smart.brd.sys.system.controller.UserController.addUser()', ' request: org.apache.shiro.web.servlet.ShiroHttpServletRequest@3bc81c7 user: "User(userId=170, username=22, password=06ab1d51575a32185708eb8945a71535, deptId=null, deptIds=null, tenantId=0, deptName=null, email=null, mobile=13333333333, status=1, createTime=Fri Apr 02 13:24:12 CST 2021, modifyTime=null, lastLoginTime=null, gender=2, description=null, avatar=default.jpg, roleId=1, roleName=null, expireTime=null, sortField=null, sortOrder=null, createTimeFrom=null, createTimeTo=null, id=null, userType=0, condition=null, openId=null, isXcx=0, isShow=1, createDept=null, province=null, city=null, county=null, town=null, housing=null)"', '127.0.0.1', '2021-04-02T13:24:12.466+0800', '内网IP|0|0|内网IP|内网IP' );
2021-04-02 13:24:12.864 febs [http-nio-11101-exec-12] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 13:24:12.877 febs [http-nio-11101-exec-12] INFO  p6spy - 2021-04-02 13:24:12 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 13:24:12.916 febs [http-nio-11101-exec-12] INFO  p6spy - 2021-04-02 13:24:12 | 耗时 38 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-04-02 13:24:15.802 febs [http-nio-11101-exec-13] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 13:24:15.859 febs [http-nio-11101-exec-13] INFO  p6spy - 2021-04-02 13:24:15 | 耗时 45 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE USER_ID='170';
2021-04-02 13:24:15.930 febs [http-nio-11101-exec-13] INFO  p6spy - 2021-04-02 13:24:15 | 耗时 8 ms | SQL 语句：
DELETE FROM t_user WHERE USER_ID IN ( '170' );
2021-04-02 13:24:15.945 febs [http-nio-11101-exec-13] INFO  p6spy - 2021-04-02 13:24:15 | 耗时 10 ms | SQL 语句：
DELETE FROM t_user_role WHERE user_id = 170;
2021-04-02 13:24:15.955 febs [http-nio-11101-exec-13] INFO  p6spy - 2021-04-02 13:24:15 | 耗时 8 ms | SQL 语句：
DELETE FROM t_user_config WHERE USER_ID IN ( '170' );
2021-04-02 13:24:16.023 febs [asyncTaskExecutor-2] INFO  p6spy - 2021-04-02 13:24:16 | 耗时 9 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'sysadmin', '删除用户', 159, 'com.smart.brd.sys.system.controller.UserController.deleteUsers()', ' userIds: "170"', '127.0.0.1', '2021-04-02T13:24:16.012+0800', '内网IP|0|0|内网IP|内网IP' );
2021-04-02 13:24:16.319 febs [http-nio-11101-exec-14] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 13:24:16.329 febs [http-nio-11101-exec-14] INFO  p6spy - 2021-04-02 13:24:16 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 13:24:16.368 febs [http-nio-11101-exec-14] INFO  p6spy - 2021-04-02 13:24:16 | 耗时 37 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-04-02 13:25:32.903 febs [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-04-02 13:25:33.270 febs [restartedMain] INFO  c.a.n.c.c.i.LocalConfigInfoProcessor - LOCAL_SNAPSHOT_PATH:C:\Users\Dukzzz\nacos\config
2021-04-02 13:25:33.288 febs [restartedMain] INFO  c.a.nacos.client.config.impl.Limiter - limitTime:5.0
2021-04-02 13:25:33.623 febs [restartedMain] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-brd-sys2-local.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys2.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys2,DEFAULT_GROUP'}]
2021-04-02 13:25:33.627 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - The following profiles are active: local
2021-04-02 13:25:34.608 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-04-02 13:25:34.610 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-04-02 13:25:34.649 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 28ms. Found 0 Redis repository interfaces.
2021-04-02 13:25:34.874 febs [restartedMain] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=8c4fe861-2a7b-3271-bb5c-24bd86b9b2e5
2021-04-02 13:25:34.990 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [com.smart.brd.sys.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$baa24114] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:25:35.057 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:25:35.115 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$d753b6c9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:25:35.122 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:25:35.124 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:25:35.157 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [com.smart.brd.sys.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$f5616d10] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:25:35.386 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.smart.brd.sys.common.config.RedisConfig$$EnhancerBySpringCGLIB$$86be0364] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:25:35.399 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:25:35.401 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [com.smart.brd.sys.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:25:35.438 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:25:35.445 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [com.smart.brd.sys.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$a5c15736] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:25:35.447 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:25:35.452 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$ab8db292] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:25:35.459 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:25:35.461 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:25:35.463 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2021-04-02 13:25:35.468 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2021-04-02 13:25:35.740 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2021-04-02 13:25:35.740 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2021-04-02 13:25:35.740 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2021-04-02 13:25:35.740 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2021-04-02 13:25:35.740 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:25:35.749 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:25:35.756 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:25:36.153 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:25:36.159 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:25:36.195 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:25:36.197 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy144] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:25:36.202 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:25:36.203 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy145] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:25:36.204 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [com.smart.brd.sys.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:25:36.230 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [com.smart.brd.sys.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:25:36.244 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userTokenServiceImpl' of type [com.smart.brd.sys.system.usertoken.service.impl.UserTokenServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:25:36.247 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:25:36.248 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy148] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:25:36.250 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [com.smart.brd.sys.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:25:36.266 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:25:36.267 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy150] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:25:36.268 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [com.smart.brd.sys.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:25:36.314 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:25:36.315 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy152] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:25:36.316 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [com.smart.brd.sys.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:25:36.329 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:25:36.330 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [com.sun.proxy.$Proxy154] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:25:36.335 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:25:36.336 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy155] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:25:36.337 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [com.smart.brd.sys.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:25:36.350 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:25:36.352 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:25:36.355 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:25:36.359 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:25:36.360 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:25:36.364 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:25:36.367 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:25:36.370 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:25:36.375 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:25:36.377 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:25:36.381 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:25:36.383 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:25:36.399 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:25:36.412 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [com.smart.brd.sys.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:25:36.413 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [com.smart.brd.sys.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:25:36.413 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [com.smart.brd.sys.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:25:36.421 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:25:36.435 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:25:36.808 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 11101 (http)
2021-04-02 13:25:36.815 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-11101"]
2021-04-02 13:25:36.816 febs [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2021-04-02 13:25:36.816 febs [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.31]
2021-04-02 13:25:36.898 febs [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2021-04-02 13:25:36.898 febs [restartedMain] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3255 ms
2021-04-02 13:25:36.982 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-04-02 13:25:36.989 febs [restartedMain] INFO  c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@5f21fee4
2021-04-02 13:25:37.556 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2021-04-02 13:25:37.565 febs [restartedMain] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-02 13:25:37.565 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.2 created.
2021-04-02 13:25:37.566 febs [restartedMain] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2021-04-02 13:25:37.566 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-02 13:25:37.566 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2021-04-02 13:25:37.566 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.2
2021-04-02 13:25:37.566 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@79145912
2021-04-02 13:25:37.616 febs [restartedMain] INFO  p6spy - 2021-04-02 13:25:37 | 耗时 4 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2021-04-02 13:25:38.008 febs [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2021-04-02 13:25:38.328 febs [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-04-02 13:25:38.438 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2021-04-02 13:25:38.484 febs [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2021-04-02 13:25:38.627 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-04-02 13:25:38.851 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2021-04-02 13:25:38.864 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-04-02 13:25:38.865 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Environment :null
2021-04-02 13:25:38.865 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-04-02 13:25:39.539 febs [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2021-04-02 13:25:39.548 febs [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2021-04-02 13:25:39.578 febs [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2021-04-02 13:25:39.588 febs [restartedMain] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2021-04-02 13:25:39.589 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2021-04-02 13:25:39.603 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-11101"]
2021-04-02 13:25:39.624 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 11101 (http) with context path ''
2021-04-02 13:25:39.627 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"192.168.0.103","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":11101,"scheduled":false,"serviceName":"DEFAULT_GROUP@@brd-sys2","stopped":false,"weight":1.0} to beat map.
2021-04-02 13:25:39.680 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [REGISTER-SERVICE] public registering service DEFAULT_GROUP@@brd-sys2 with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"192.168.0.103","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":11101,"weight":1.0}
2021-04-02 13:25:39.702 febs [scheduling-1] INFO  c.s.brd.sys.common.task.CacheTask - delete expired user
2021-04-02 13:25:39.757 febs [restartedMain] INFO  c.a.c.n.r.NacosServiceRegistry - nacos registry, DEFAULT_GROUP brd-sys2 192.168.0.103:11101 register finished
2021-04-02 13:25:39.899 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - Started BrdSysApplication in 7.836 seconds (JVM running for 8.75)
2021-04-02 13:25:39.902 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - Redis连接中 ······
2021-04-02 13:25:39.907 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存初始化 ······
2021-04-02 13:25:39.907 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存用户数据 ······
2021-04-02 13:25:39.959 febs [restartedMain] INFO  p6spy - 2021-04-02 13:25:39 | 耗时 22 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user;
2021-04-02 13:25:39.986 febs [restartedMain] INFO  p6spy - 2021-04-02 13:25:39 | 耗时 11 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sysadmin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 13:25:40.096 febs [restartedMain] INFO  p6spy - 2021-04-02 13:25:40 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin';
2021-04-02 13:25:40.121 febs [restartedMain] INFO  p6spy - 2021-04-02 13:25:40 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'sysadmin' and m.perms is not null and m.perms <> '';
2021-04-02 13:25:40.130 febs [restartedMain] INFO  p6spy - 2021-04-02 13:25:40 | 耗时 4 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='-1';
2021-04-02 13:25:40.185 febs [restartedMain] INFO  p6spy - 2021-04-02 13:25:40 | 耗时 53 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengcheng1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 13:25:40.242 febs [restartedMain] INFO  p6spy - 2021-04-02 13:25:40 | 耗时 4 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengcheng1';
2021-04-02 13:25:40.258 febs [restartedMain] INFO  p6spy - 2021-04-02 13:25:40 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengcheng1' and m.perms is not null and m.perms <> '';
2021-04-02 13:25:40.275 febs [restartedMain] INFO  p6spy - 2021-04-02 13:25:40 | 耗时 4 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='163';
2021-04-02 13:25:40.342 febs [restartedMain] INFO  p6spy - 2021-04-02 13:25:40 | 耗时 54 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yulin1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 13:25:40.400 febs [restartedMain] INFO  p6spy - 2021-04-02 13:25:40 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yulin1';
2021-04-02 13:25:40.416 febs [restartedMain] INFO  p6spy - 2021-04-02 13:25:40 | 耗时 4 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yulin1' and m.perms is not null and m.perms <> '';
2021-04-02 13:25:40.433 febs [restartedMain] INFO  p6spy - 2021-04-02 13:25:40 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='164';
2021-04-02 13:25:40.445 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2021-04-02 13:25:40.446 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2021-04-02 13:25:40.446 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2021-04-02 13:25:40.446 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -                                                       
2021-04-02 13:25:40.446 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - FEBS 启动完毕，时间：2021-04-02T13:25:40.446
2021-04-02 13:25:40.454 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2+DEFAULT_GROUP
2021-04-02 13:25:40.456 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2, group=DEFAULT_GROUP, cnt=1
2021-04-02 13:25:40.456 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2.yaml+DEFAULT_GROUP
2021-04-02 13:25:40.457 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2.yaml, group=DEFAULT_GROUP, cnt=1
2021-04-02 13:25:40.457 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2-local.yaml+DEFAULT_GROUP
2021-04-02 13:25:40.457 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2-local.yaml, group=DEFAULT_GROUP, cnt=1
2021-04-02 13:26:07.703 febs [http-nio-11101-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-04-02 13:26:07.703 febs [http-nio-11101-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2021-04-02 13:26:07.712 febs [http-nio-11101-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 9 ms
2021-04-02 13:26:14.751 febs [http-nio-11101-exec-2] INFO  c.s.b.sys.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2021-04-02 13:26:14.849 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-04-02 13:26:14 | 耗时 33 ms | SQL 语句：
UPDATE t_user SET last_login_time='2021-04-02T13:26:14.780+0800', user_type=0 WHERE username = 'sysadmin';
2021-04-02 13:26:14.903 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-04-02 13:26:14 | 耗时 52 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sysadmin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 13:26:14.990 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-04-02 13:26:14 | 耗时 9 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'sysadmin', '2021-04-02T13:26:14.973+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1' );
2021-04-02 13:26:15.130 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-04-02 13:26:15 | 耗时 4 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='-1';
2021-04-02 13:26:15.506 febs [http-nio-11101-exec-3] INFO  p6spy - 2021-04-02 13:26:15 | 耗时 15 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-04-02 13:26:15.733 febs [http-nio-11101-exec-6] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 13:26:15.758 febs [http-nio-11101-exec-6] INFO  p6spy - 2021-04-02 13:26:15 | 耗时 7 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin') order by m.order_num;
2021-04-02 13:26:15.967 febs [http-nio-11101-exec-8] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 13:26:16.060 febs [http-nio-11101-exec-8] INFO  p6spy - 2021-04-02 13:26:16 | 耗时 36 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 13:26:16.121 febs [http-nio-11101-exec-8] INFO  p6spy - 2021-04-02 13:26:16 | 耗时 54 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-04-02 13:26:18.927 febs [http-nio-11101-exec-4] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 13:26:18.955 febs [http-nio-11101-exec-12] INFO  p6spy - 2021-04-02 13:26:18 | 耗时 21 ms | SQL 语句：
SELECT DEPT_ID,parent_id,type,dept_name,order_num,create_time,modify_time,dept_code,tenant_id,dept_address,longitude,latitude,province,city,county,town FROM t_dept ORDER BY order_num ASC;
2021-04-02 13:26:18.983 febs [http-nio-11101-exec-4] INFO  p6spy - 2021-04-02 13:26:18 | 耗时 11 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role ) TOTAL;
2021-04-02 13:26:19.052 febs [http-nio-11101-exec-4] INFO  p6spy - 2021-04-02 13:26:19 | 耗时 68 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role LIMIT 0,10;
2021-04-02 13:26:38.369 febs [http-nio-11101-exec-5] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 13:26:38.415 febs [http-nio-11101-exec-5] INFO  p6spy - 2021-04-02 13:26:38 | 耗时 29 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = '22';
2021-04-02 13:26:38.589 febs [http-nio-11101-exec-5] INFO  p6spy - 2021-04-02 13:26:38 | 耗时 112 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = '22';
2021-04-02 13:26:38.612 febs [http-nio-11101-exec-5] INFO  p6spy - 2021-04-02 13:26:38 | 耗时 18 ms | SQL 语句：
INSERT INTO t_user ( username, password, tenant_id, mobile, status, create_time, gender, avatar, user_type, is_xcx, is_show ) VALUES ( '22', '06ab1d51575a32185708eb8945a71535', 0, '13333333333', '1', '2021-04-02T13:26:38.589+0800', '2', 'default.jpg', 0, 0, 1 );
2021-04-02 13:26:38.647 febs [http-nio-11101-exec-5] INFO  p6spy - 2021-04-02 13:26:38 | 耗时 24 ms | SQL 语句：
INSERT INTO t_user_role ( user_id, role_id ) VALUES ( 171, 1 );
2021-04-02 13:26:38.671 febs [http-nio-11101-exec-5] INFO  p6spy - 2021-04-02 13:26:38 | 耗时 21 ms | SQL 语句：
INSERT INTO t_user_config ( USER_ID, theme, layout, multi_page, fix_siderbar, fix_header, color ) VALUES ( 171, 'dark', 'side', '0', '1', '1', 'rgb(66, 185, 131)' );
2021-04-02 13:26:38.796 febs [http-nio-11101-exec-5] INFO  p6spy - 2021-04-02 13:26:38 | 耗时 123 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = '22' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 13:26:38.838 febs [http-nio-11101-exec-5] INFO  p6spy - 2021-04-02 13:26:38 | 耗时 11 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = '22';
2021-04-02 13:26:38.871 febs [http-nio-11101-exec-5] INFO  p6spy - 2021-04-02 13:26:38 | 耗时 9 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = '22' and m.perms is not null and m.perms <> '';
2021-04-02 13:26:38.902 febs [http-nio-11101-exec-5] INFO  p6spy - 2021-04-02 13:26:38 | 耗时 8 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='171';
2021-04-02 13:26:39.040 febs [asyncTaskExecutor-1] INFO  p6spy - 2021-04-02 13:26:39 | 耗时 69 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'sysadmin', '新增用户', 558, 'com.smart.brd.sys.system.controller.UserController.addUser()', ' request: org.apache.shiro.web.servlet.ShiroHttpServletRequest@254159a user: "User(userId=171, username=22, password=06ab1d51575a32185708eb8945a71535, deptId=null, deptIds=null, tenantId=0, deptName=null, email=null, mobile=13333333333, status=1, createTime=Fri Apr 02 13:26:38 CST 2021, modifyTime=null, lastLoginTime=null, gender=2, description=null, avatar=default.jpg, roleId=1, roleName=null, expireTime=null, sortField=null, sortOrder=null, createTimeFrom=null, createTimeTo=null, id=null, userType=0, condition=null, openId=null, isXcx=0, isShow=1, createDept=null, province=null, city=null, county=null, town=null, housing=null)"', '127.0.0.1', '2021-04-02T13:26:38.966+0800', '内网IP|0|0|内网IP|内网IP' );
2021-04-02 13:26:39.362 febs [http-nio-11101-exec-9] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 13:26:39.379 febs [http-nio-11101-exec-9] INFO  p6spy - 2021-04-02 13:26:39 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 13:26:39.411 febs [http-nio-11101-exec-9] INFO  p6spy - 2021-04-02 13:26:39 | 耗时 31 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-04-02 13:27:20.684 febs [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-04-02 13:27:21.090 febs [restartedMain] INFO  c.a.n.c.c.i.LocalConfigInfoProcessor - LOCAL_SNAPSHOT_PATH:C:\Users\Dukzzz\nacos\config
2021-04-02 13:27:21.107 febs [restartedMain] INFO  c.a.nacos.client.config.impl.Limiter - limitTime:5.0
2021-04-02 13:27:21.531 febs [restartedMain] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-brd-sys2-local.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys2.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys2,DEFAULT_GROUP'}]
2021-04-02 13:27:21.535 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - The following profiles are active: local
2021-04-02 13:27:22.520 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-04-02 13:27:22.522 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-04-02 13:27:22.560 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 28ms. Found 0 Redis repository interfaces.
2021-04-02 13:27:22.787 febs [restartedMain] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=8c4fe861-2a7b-3271-bb5c-24bd86b9b2e5
2021-04-02 13:27:22.906 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [com.smart.brd.sys.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$24c58023] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:27:22.970 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:27:23.030 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$4176f5d8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:27:23.037 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:27:23.040 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:27:23.072 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [com.smart.brd.sys.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$5f84ac1f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:27:23.299 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.smart.brd.sys.common.config.RedisConfig$$EnhancerBySpringCGLIB$$f0e14273] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:27:23.312 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:27:23.314 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [com.smart.brd.sys.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:27:23.352 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:27:23.358 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [com.smart.brd.sys.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$fe49645] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:27:23.361 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:27:23.366 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$15b0f1a1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:27:23.372 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:27:23.373 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:27:23.376 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2021-04-02 13:27:23.381 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2021-04-02 13:27:23.584 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2021-04-02 13:27:23.584 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2021-04-02 13:27:23.584 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2021-04-02 13:27:23.584 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2021-04-02 13:27:23.584 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:27:23.594 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:27:23.600 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:27:23.985 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:27:23.991 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:27:24.022 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:27:24.024 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy144] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:27:24.030 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:27:24.031 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy145] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:27:24.033 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [com.smart.brd.sys.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:27:24.060 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [com.smart.brd.sys.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:27:24.075 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userTokenServiceImpl' of type [com.smart.brd.sys.system.usertoken.service.impl.UserTokenServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:27:24.079 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:27:24.080 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy148] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:27:24.081 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [com.smart.brd.sys.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:27:24.112 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:27:24.113 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy150] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:27:24.114 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [com.smart.brd.sys.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:27:24.156 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:27:24.157 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy152] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:27:24.158 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [com.smart.brd.sys.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:27:24.170 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:27:24.171 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [com.sun.proxy.$Proxy154] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:27:24.175 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:27:24.176 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy155] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:27:24.177 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [com.smart.brd.sys.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:27:24.189 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:27:24.191 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:27:24.193 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:27:24.197 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:27:24.199 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:27:24.202 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:27:24.204 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:27:24.207 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:27:24.213 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:27:24.214 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:27:24.218 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:27:24.220 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:27:24.235 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:27:24.249 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [com.smart.brd.sys.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:27:24.250 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [com.smart.brd.sys.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:27:24.250 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [com.smart.brd.sys.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:27:24.257 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:27:24.272 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:27:24.626 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 11101 (http)
2021-04-02 13:27:24.633 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-11101"]
2021-04-02 13:27:24.633 febs [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2021-04-02 13:27:24.633 febs [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.31]
2021-04-02 13:27:24.717 febs [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2021-04-02 13:27:24.717 febs [restartedMain] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3166 ms
2021-04-02 13:27:24.803 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-04-02 13:27:24.810 febs [restartedMain] INFO  c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@5aa609d7
2021-04-02 13:27:25.367 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2021-04-02 13:27:25.376 febs [restartedMain] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-02 13:27:25.377 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.2 created.
2021-04-02 13:27:25.377 febs [restartedMain] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2021-04-02 13:27:25.378 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-02 13:27:25.378 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2021-04-02 13:27:25.378 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.2
2021-04-02 13:27:25.378 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@261673a2
2021-04-02 13:27:25.428 febs [restartedMain] INFO  p6spy - 2021-04-02 13:27:25 | 耗时 5 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2021-04-02 13:27:25.823 febs [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2021-04-02 13:27:26.162 febs [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-04-02 13:27:26.277 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2021-04-02 13:27:26.449 febs [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2021-04-02 13:27:26.476 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-04-02 13:27:26.699 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2021-04-02 13:27:26.712 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-04-02 13:27:26.713 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Environment :null
2021-04-02 13:27:26.713 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-04-02 13:27:27.434 febs [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2021-04-02 13:27:27.443 febs [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2021-04-02 13:27:27.475 febs [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2021-04-02 13:27:27.486 febs [restartedMain] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2021-04-02 13:27:27.487 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2021-04-02 13:27:27.500 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-11101"]
2021-04-02 13:27:27.522 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 11101 (http) with context path ''
2021-04-02 13:27:27.525 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"192.168.0.103","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":11101,"scheduled":false,"serviceName":"DEFAULT_GROUP@@brd-sys2","stopped":false,"weight":1.0} to beat map.
2021-04-02 13:27:27.584 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [REGISTER-SERVICE] public registering service DEFAULT_GROUP@@brd-sys2 with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"192.168.0.103","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":11101,"weight":1.0}
2021-04-02 13:27:27.609 febs [scheduling-1] INFO  c.s.brd.sys.common.task.CacheTask - delete expired user
2021-04-02 13:27:27.657 febs [restartedMain] INFO  c.a.c.n.r.NacosServiceRegistry - nacos registry, DEFAULT_GROUP brd-sys2 192.168.0.103:11101 register finished
2021-04-02 13:27:27.795 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - Started BrdSysApplication in 7.892 seconds (JVM running for 8.838)
2021-04-02 13:27:27.799 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - Redis连接中 ······
2021-04-02 13:27:27.804 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存初始化 ······
2021-04-02 13:27:27.804 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存用户数据 ······
2021-04-02 13:27:27.855 febs [restartedMain] INFO  p6spy - 2021-04-02 13:27:27 | 耗时 23 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user;
2021-04-02 13:27:27.872 febs [restartedMain] INFO  p6spy - 2021-04-02 13:27:27 | 耗时 10 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sysadmin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 13:27:27.982 febs [restartedMain] INFO  p6spy - 2021-04-02 13:27:27 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin';
2021-04-02 13:27:28.004 febs [restartedMain] INFO  p6spy - 2021-04-02 13:27:28 | 耗时 4 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'sysadmin' and m.perms is not null and m.perms <> '';
2021-04-02 13:27:28.015 febs [restartedMain] INFO  p6spy - 2021-04-02 13:27:28 | 耗时 6 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='-1';
2021-04-02 13:27:28.050 febs [restartedMain] INFO  p6spy - 2021-04-02 13:27:28 | 耗时 32 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengcheng1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 13:27:28.107 febs [restartedMain] INFO  p6spy - 2021-04-02 13:27:28 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengcheng1';
2021-04-02 13:27:28.123 febs [restartedMain] INFO  p6spy - 2021-04-02 13:27:28 | 耗时 4 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengcheng1' and m.perms is not null and m.perms <> '';
2021-04-02 13:27:28.142 febs [restartedMain] INFO  p6spy - 2021-04-02 13:27:28 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='163';
2021-04-02 13:27:28.188 febs [restartedMain] INFO  p6spy - 2021-04-02 13:27:28 | 耗时 34 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yulin1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 13:27:28.247 febs [restartedMain] INFO  p6spy - 2021-04-02 13:27:28 | 耗时 4 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yulin1';
2021-04-02 13:27:28.263 febs [restartedMain] INFO  p6spy - 2021-04-02 13:27:28 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yulin1' and m.perms is not null and m.perms <> '';
2021-04-02 13:27:28.278 febs [restartedMain] INFO  p6spy - 2021-04-02 13:27:28 | 耗时 4 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='164';
2021-04-02 13:27:28.311 febs [restartedMain] INFO  p6spy - 2021-04-02 13:27:28 | 耗时 22 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = '22' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 13:27:28.327 febs [restartedMain] INFO  p6spy - 2021-04-02 13:27:28 | 耗时 4 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = '22';
2021-04-02 13:27:28.342 febs [restartedMain] INFO  p6spy - 2021-04-02 13:27:28 | 耗时 4 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = '22' and m.perms is not null and m.perms <> '';
2021-04-02 13:27:28.357 febs [restartedMain] INFO  p6spy - 2021-04-02 13:27:28 | 耗时 4 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='171';
2021-04-02 13:27:28.366 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2021-04-02 13:27:28.366 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2021-04-02 13:27:28.366 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2021-04-02 13:27:28.366 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -                                                       
2021-04-02 13:27:28.366 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - FEBS 启动完毕，时间：2021-04-02T13:27:28.366
2021-04-02 13:27:28.369 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2+DEFAULT_GROUP
2021-04-02 13:27:28.369 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2, group=DEFAULT_GROUP, cnt=1
2021-04-02 13:27:28.369 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2.yaml+DEFAULT_GROUP
2021-04-02 13:27:28.370 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2.yaml, group=DEFAULT_GROUP, cnt=1
2021-04-02 13:27:28.370 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2-local.yaml+DEFAULT_GROUP
2021-04-02 13:27:28.370 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2-local.yaml, group=DEFAULT_GROUP, cnt=1
2021-04-02 13:27:34.779 febs [http-nio-11101-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-04-02 13:27:34.780 febs [http-nio-11101-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2021-04-02 13:27:34.788 febs [http-nio-11101-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 8 ms
2021-04-02 13:27:34.885 febs [http-nio-11101-exec-1] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 13:27:35.005 febs [http-nio-11101-exec-1] INFO  p6spy - 2021-04-02 13:27:35 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role ) TOTAL;
2021-04-02 13:27:35.014 febs [http-nio-11101-exec-1] INFO  p6spy - 2021-04-02 13:27:35 | 耗时 4 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role LIMIT 0,10;
2021-04-02 13:27:35.110 febs [http-nio-11101-exec-3] INFO  p6spy - 2021-04-02 13:27:35 | 耗时 61 ms | SQL 语句：
SELECT DEPT_ID,parent_id,type,dept_name,order_num,create_time,modify_time,dept_code,tenant_id,dept_address,longitude,latitude,province,city,county,town FROM t_dept ORDER BY order_num ASC;
2021-04-02 13:27:41.338 febs [http-nio-11101-exec-2] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 13:27:41.404 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-04-02 13:27:41 | 耗时 28 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = '33';
2021-04-02 13:27:41.512 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-04-02 13:27:41 | 耗时 57 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = '33';
2021-04-02 13:27:41.562 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-04-02 13:27:41 | 耗时 42 ms | SQL 语句：
INSERT INTO t_user ( username, password, tenant_id, mobile, status, create_time, gender, avatar, user_type, is_xcx, is_show ) VALUES ( '33', 'af453cfdf994b387c37a7ebc848117fb', 0, '13333333333', '1', '2021-04-02T13:27:41.512+0800', '2', 'default.jpg', 0, 0, 1 );
2021-04-02 13:27:41.577 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-04-02 13:27:41 | 耗时 11 ms | SQL 语句：
INSERT INTO t_user_role ( user_id, role_id ) VALUES ( 172, 1 );
2021-04-02 13:27:41.588 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-04-02 13:27:41 | 耗时 9 ms | SQL 语句：
INSERT INTO t_user_config ( USER_ID, theme, layout, multi_page, fix_siderbar, fix_header, color ) VALUES ( 172, 'dark', 'side', '0', '1', '1', 'rgb(66, 185, 131)' );
2021-04-02 13:27:41.627 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-04-02 13:27:41 | 耗时 37 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = '33' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 13:27:41.643 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-04-02 13:27:41 | 耗时 4 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = '33';
2021-04-02 13:27:41.658 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-04-02 13:27:41 | 耗时 4 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = '33' and m.perms is not null and m.perms <> '';
2021-04-02 13:27:41.672 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-04-02 13:27:41 | 耗时 4 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='172';
2021-04-02 13:27:41.723 febs [asyncTaskExecutor-1] INFO  p6spy - 2021-04-02 13:27:41 | 耗时 9 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'sysadmin', '新增用户', 327, 'com.smart.brd.sys.system.controller.UserController.addUser()', ' request: org.apache.shiro.web.servlet.ShiroHttpServletRequest@53c8f8f user: "User(userId=172, username=33, password=af453cfdf994b387c37a7ebc848117fb, deptId=null, deptIds=null, tenantId=0, deptName=null, email=null, mobile=13333333333, status=1, createTime=Fri Apr 02 13:27:41 CST 2021, modifyTime=null, lastLoginTime=null, gender=2, description=null, avatar=default.jpg, roleId=1, roleName=null, expireTime=null, sortField=null, sortOrder=null, createTimeFrom=null, createTimeTo=null, id=null, userType=0, condition=null, openId=null, isXcx=0, isShow=1, createDept=null, province=null, city=null, county=null, town=null, housing=null)"', '127.0.0.1', '2021-04-02T13:27:41.706+0800', '内网IP|0|0|内网IP|内网IP' );
2021-04-02 13:27:41.828 febs [http-nio-11101-exec-7] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 13:27:41.864 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 13:27:41 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 13:27:41.885 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 13:27:41 | 耗时 19 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-04-02 13:35:03.584 febs [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-04-02 13:35:03.992 febs [restartedMain] INFO  c.a.n.c.c.i.LocalConfigInfoProcessor - LOCAL_SNAPSHOT_PATH:C:\Users\Dukzzz\nacos\config
2021-04-02 13:35:04.009 febs [restartedMain] INFO  c.a.nacos.client.config.impl.Limiter - limitTime:5.0
2021-04-02 13:35:04.336 febs [restartedMain] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-brd-sys2-local.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys2.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys2,DEFAULT_GROUP'}]
2021-04-02 13:35:04.339 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - The following profiles are active: local
2021-04-02 13:35:05.324 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-04-02 13:35:05.326 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-04-02 13:35:05.367 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 29ms. Found 0 Redis repository interfaces.
2021-04-02 13:35:05.606 febs [restartedMain] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=8c4fe861-2a7b-3271-bb5c-24bd86b9b2e5
2021-04-02 13:35:05.724 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [com.smart.brd.sys.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$18021211] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:35:05.788 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:35:05.860 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$34b387c6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:35:05.868 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:35:05.870 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:35:05.903 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [com.smart.brd.sys.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$52c13e0d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:35:06.130 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.smart.brd.sys.common.config.RedisConfig$$EnhancerBySpringCGLIB$$e41dd461] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:35:06.145 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:35:06.147 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [com.smart.brd.sys.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:35:06.186 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:35:06.193 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [com.smart.brd.sys.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$3212833] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:35:06.196 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:35:06.202 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$8ed838f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:35:06.209 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:35:06.210 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:35:06.213 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2021-04-02 13:35:06.218 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2021-04-02 13:35:06.403 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2021-04-02 13:35:06.404 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2021-04-02 13:35:06.404 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2021-04-02 13:35:06.404 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2021-04-02 13:35:06.404 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:35:06.414 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:35:06.421 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:35:06.815 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:35:06.822 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:35:06.858 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:35:06.861 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy144] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:35:06.867 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:35:06.869 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy145] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:35:06.870 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [com.smart.brd.sys.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:35:06.897 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [com.smart.brd.sys.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:35:06.910 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userTokenServiceImpl' of type [com.smart.brd.sys.system.usertoken.service.impl.UserTokenServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:35:06.914 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:35:06.915 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy148] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:35:06.916 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [com.smart.brd.sys.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:35:06.932 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:35:06.933 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy150] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:35:06.934 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [com.smart.brd.sys.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:35:06.973 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:35:06.974 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy152] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:35:06.974 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [com.smart.brd.sys.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:35:06.986 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:35:06.987 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [com.sun.proxy.$Proxy154] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:35:06.991 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:35:06.992 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy155] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:35:06.993 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [com.smart.brd.sys.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:35:07.007 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:35:07.008 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:35:07.010 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:35:07.014 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:35:07.016 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:35:07.019 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:35:07.021 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:35:07.024 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:35:07.029 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:35:07.031 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:35:07.035 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:35:07.037 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:35:07.055 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:35:07.068 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [com.smart.brd.sys.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:35:07.069 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [com.smart.brd.sys.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:35:07.069 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [com.smart.brd.sys.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:35:07.075 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:35:07.089 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:35:07.444 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 11101 (http)
2021-04-02 13:35:07.451 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-11101"]
2021-04-02 13:35:07.452 febs [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2021-04-02 13:35:07.452 febs [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.31]
2021-04-02 13:35:07.536 febs [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2021-04-02 13:35:07.536 febs [restartedMain] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3180 ms
2021-04-02 13:35:07.620 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-04-02 13:35:07.627 febs [restartedMain] INFO  c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@332e0489
2021-04-02 13:35:08.181 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2021-04-02 13:35:08.191 febs [restartedMain] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-02 13:35:08.191 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.2 created.
2021-04-02 13:35:08.193 febs [restartedMain] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2021-04-02 13:35:08.194 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-02 13:35:08.194 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2021-04-02 13:35:08.194 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.2
2021-04-02 13:35:08.194 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@4292f967
2021-04-02 13:35:08.245 febs [restartedMain] INFO  p6spy - 2021-04-02 13:35:08 | 耗时 5 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2021-04-02 13:35:08.632 febs [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2021-04-02 13:35:08.968 febs [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-04-02 13:35:09.080 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2021-04-02 13:35:09.250 febs [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2021-04-02 13:35:09.276 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-04-02 13:35:09.489 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2021-04-02 13:35:09.502 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-04-02 13:35:09.502 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Environment :null
2021-04-02 13:35:09.502 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-04-02 13:35:10.154 febs [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2021-04-02 13:35:10.164 febs [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2021-04-02 13:35:10.194 febs [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2021-04-02 13:35:10.205 febs [restartedMain] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2021-04-02 13:35:10.205 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2021-04-02 13:35:10.218 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-11101"]
2021-04-02 13:35:10.240 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 11101 (http) with context path ''
2021-04-02 13:35:10.242 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"192.168.0.103","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":11101,"scheduled":false,"serviceName":"DEFAULT_GROUP@@brd-sys2","stopped":false,"weight":1.0} to beat map.
2021-04-02 13:35:10.296 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [REGISTER-SERVICE] public registering service DEFAULT_GROUP@@brd-sys2 with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"192.168.0.103","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":11101,"weight":1.0}
2021-04-02 13:35:10.315 febs [scheduling-1] INFO  c.s.brd.sys.common.task.CacheTask - delete expired user
2021-04-02 13:35:10.364 febs [restartedMain] INFO  c.a.c.n.r.NacosServiceRegistry - nacos registry, DEFAULT_GROUP brd-sys2 192.168.0.103:11101 register finished
2021-04-02 13:35:10.497 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - Started BrdSysApplication in 7.697 seconds (JVM running for 8.567)
2021-04-02 13:35:10.501 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - Redis连接中 ······
2021-04-02 13:35:10.505 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存初始化 ······
2021-04-02 13:35:10.506 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存用户数据 ······
2021-04-02 13:35:10.551 febs [restartedMain] INFO  p6spy - 2021-04-02 13:35:10 | 耗时 17 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user;
2021-04-02 13:35:10.569 febs [restartedMain] INFO  p6spy - 2021-04-02 13:35:10 | 耗时 10 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sysadmin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 13:35:10.722 febs [restartedMain] INFO  p6spy - 2021-04-02 13:35:10 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin';
2021-04-02 13:35:10.745 febs [restartedMain] INFO  p6spy - 2021-04-02 13:35:10 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'sysadmin' and m.perms is not null and m.perms <> '';
2021-04-02 13:35:10.755 febs [restartedMain] INFO  p6spy - 2021-04-02 13:35:10 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='-1';
2021-04-02 13:35:10.814 febs [restartedMain] INFO  p6spy - 2021-04-02 13:35:10 | 耗时 56 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengcheng1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 13:35:10.871 febs [restartedMain] INFO  p6spy - 2021-04-02 13:35:10 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengcheng1';
2021-04-02 13:35:10.891 febs [restartedMain] INFO  p6spy - 2021-04-02 13:35:10 | 耗时 6 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengcheng1' and m.perms is not null and m.perms <> '';
2021-04-02 13:35:10.917 febs [restartedMain] INFO  p6spy - 2021-04-02 13:35:10 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='163';
2021-04-02 13:35:10.986 febs [restartedMain] INFO  p6spy - 2021-04-02 13:35:10 | 耗时 54 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yulin1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 13:35:11.046 febs [restartedMain] INFO  p6spy - 2021-04-02 13:35:11 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yulin1';
2021-04-02 13:35:11.062 febs [restartedMain] INFO  p6spy - 2021-04-02 13:35:11 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yulin1' and m.perms is not null and m.perms <> '';
2021-04-02 13:35:11.077 febs [restartedMain] INFO  p6spy - 2021-04-02 13:35:11 | 耗时 4 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='164';
2021-04-02 13:35:11.140 febs [restartedMain] INFO  p6spy - 2021-04-02 13:35:11 | 耗时 52 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = '22' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 13:35:11.243 febs [restartedMain] INFO  p6spy - 2021-04-02 13:35:11 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = '22';
2021-04-02 13:35:11.261 febs [restartedMain] INFO  p6spy - 2021-04-02 13:35:11 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = '22' and m.perms is not null and m.perms <> '';
2021-04-02 13:35:11.277 febs [restartedMain] INFO  p6spy - 2021-04-02 13:35:11 | 耗时 4 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='171';
2021-04-02 13:35:11.342 febs [restartedMain] INFO  p6spy - 2021-04-02 13:35:11 | 耗时 53 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = '33' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 13:35:11.446 febs [restartedMain] INFO  p6spy - 2021-04-02 13:35:11 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = '33';
2021-04-02 13:35:11.462 febs [restartedMain] INFO  p6spy - 2021-04-02 13:35:11 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = '33' and m.perms is not null and m.perms <> '';
2021-04-02 13:35:11.479 febs [restartedMain] INFO  p6spy - 2021-04-02 13:35:11 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='172';
2021-04-02 13:35:11.489 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2021-04-02 13:35:11.489 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2021-04-02 13:35:11.489 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2021-04-02 13:35:11.489 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -                                                       
2021-04-02 13:35:11.489 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - FEBS 启动完毕，时间：2021-04-02T13:35:11.489
2021-04-02 13:35:11.491 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2+DEFAULT_GROUP
2021-04-02 13:35:11.492 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2, group=DEFAULT_GROUP, cnt=1
2021-04-02 13:35:11.492 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2.yaml+DEFAULT_GROUP
2021-04-02 13:35:11.492 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2.yaml, group=DEFAULT_GROUP, cnt=1
2021-04-02 13:35:11.492 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2-local.yaml+DEFAULT_GROUP
2021-04-02 13:35:11.492 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2-local.yaml, group=DEFAULT_GROUP, cnt=1
2021-04-02 13:35:17.601 febs [http-nio-11101-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-04-02 13:35:17.601 febs [http-nio-11101-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2021-04-02 13:35:17.612 febs [http-nio-11101-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 11 ms
2021-04-02 13:35:17.817 febs [http-nio-11101-exec-1] INFO  p6spy - 2021-04-02 13:35:17 | 耗时 55 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-04-02 13:35:17.938 febs [http-nio-11101-exec-2] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 13:35:18.004 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-04-02 13:35:18 | 耗时 22 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin') order by m.order_num;
2021-04-02 13:35:18.415 febs [http-nio-11101-exec-3] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 13:35:18.518 febs [http-nio-11101-exec-3] INFO  p6spy - 2021-04-02 13:35:18 | 耗时 43 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 13:35:18.582 febs [http-nio-11101-exec-3] INFO  p6spy - 2021-04-02 13:35:18 | 耗时 60 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-04-02 13:39:01.107 febs [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-04-02 13:39:01.481 febs [restartedMain] INFO  c.a.n.c.c.i.LocalConfigInfoProcessor - LOCAL_SNAPSHOT_PATH:C:\Users\Dukzzz\nacos\config
2021-04-02 13:39:01.499 febs [restartedMain] INFO  c.a.nacos.client.config.impl.Limiter - limitTime:5.0
2021-04-02 13:39:01.906 febs [restartedMain] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-brd-sys2-local.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys2.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys2,DEFAULT_GROUP'}]
2021-04-02 13:39:01.910 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - The following profiles are active: local
2021-04-02 13:39:02.954 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-04-02 13:39:02.956 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-04-02 13:39:02.998 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 30ms. Found 0 Redis repository interfaces.
2021-04-02 13:39:03.235 febs [restartedMain] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=8c4fe861-2a7b-3271-bb5c-24bd86b9b2e5
2021-04-02 13:39:03.379 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [com.smart.brd.sys.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$ff68390e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:39:03.446 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:39:03.507 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$1c19aec3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:39:03.514 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:39:03.517 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:39:03.549 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [com.smart.brd.sys.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$3a27650a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:39:03.797 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.smart.brd.sys.common.config.RedisConfig$$EnhancerBySpringCGLIB$$cb83fb5e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:39:03.812 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:39:03.815 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [com.smart.brd.sys.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:39:03.857 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:39:03.864 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [com.smart.brd.sys.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$ea874f30] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:39:03.867 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:39:03.873 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$f053aa8c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:39:03.880 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:39:03.882 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:39:03.885 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2021-04-02 13:39:03.890 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2021-04-02 13:39:04.096 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2021-04-02 13:39:04.096 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2021-04-02 13:39:04.096 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2021-04-02 13:39:04.096 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2021-04-02 13:39:04.097 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:39:04.107 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:39:04.114 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:39:04.510 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:39:04.517 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:39:04.541 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:39:04.544 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy144] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:39:04.549 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:39:04.550 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy145] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:39:04.551 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [com.smart.brd.sys.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:39:04.575 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [com.smart.brd.sys.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:39:04.589 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userTokenServiceImpl' of type [com.smart.brd.sys.system.usertoken.service.impl.UserTokenServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:39:04.592 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:39:04.593 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy148] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:39:04.594 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [com.smart.brd.sys.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:39:04.610 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:39:04.611 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy150] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:39:04.612 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [com.smart.brd.sys.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:39:04.652 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:39:04.653 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy152] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:39:04.654 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [com.smart.brd.sys.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:39:04.667 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:39:04.668 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [com.sun.proxy.$Proxy154] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:39:04.673 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:39:04.674 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy155] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:39:04.675 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [com.smart.brd.sys.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:39:04.688 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:39:04.690 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:39:04.692 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:39:04.697 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:39:04.698 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:39:04.701 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:39:04.703 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:39:04.706 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:39:04.711 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:39:04.712 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:39:04.717 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:39:04.720 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:39:04.736 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:39:04.750 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [com.smart.brd.sys.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:39:04.750 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [com.smart.brd.sys.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:39:04.750 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [com.smart.brd.sys.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:39:04.758 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:39:04.771 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 13:39:05.127 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 11101 (http)
2021-04-02 13:39:05.134 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-11101"]
2021-04-02 13:39:05.135 febs [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2021-04-02 13:39:05.135 febs [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.31]
2021-04-02 13:39:05.226 febs [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2021-04-02 13:39:05.226 febs [restartedMain] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3300 ms
2021-04-02 13:39:05.331 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-04-02 13:39:05.339 febs [restartedMain] INFO  c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@2245f177
2021-04-02 13:39:05.866 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2021-04-02 13:39:05.875 febs [restartedMain] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-02 13:39:05.875 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.2 created.
2021-04-02 13:39:05.876 febs [restartedMain] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2021-04-02 13:39:05.876 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-02 13:39:05.876 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2021-04-02 13:39:05.876 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.2
2021-04-02 13:39:05.876 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@1747c6a
2021-04-02 13:39:05.925 febs [restartedMain] INFO  p6spy - 2021-04-02 13:39:05 | 耗时 5 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2021-04-02 13:39:06.312 febs [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2021-04-02 13:39:06.640 febs [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-04-02 13:39:06.766 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2021-04-02 13:39:06.939 febs [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2021-04-02 13:39:06.964 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-04-02 13:39:07.177 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2021-04-02 13:39:07.189 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-04-02 13:39:07.190 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Environment :null
2021-04-02 13:39:07.190 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-04-02 13:39:07.867 febs [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2021-04-02 13:39:07.877 febs [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2021-04-02 13:39:07.908 febs [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2021-04-02 13:39:07.918 febs [restartedMain] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2021-04-02 13:39:07.919 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2021-04-02 13:39:07.932 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-11101"]
2021-04-02 13:39:07.954 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 11101 (http) with context path ''
2021-04-02 13:39:07.957 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"192.168.0.103","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":11101,"scheduled":false,"serviceName":"DEFAULT_GROUP@@brd-sys2","stopped":false,"weight":1.0} to beat map.
2021-04-02 13:39:08.008 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [REGISTER-SERVICE] public registering service DEFAULT_GROUP@@brd-sys2 with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"192.168.0.103","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":11101,"weight":1.0}
2021-04-02 13:39:08.092 febs [scheduling-1] INFO  c.s.brd.sys.common.task.CacheTask - delete expired user
2021-04-02 13:39:08.192 febs [restartedMain] INFO  c.a.c.n.r.NacosServiceRegistry - nacos registry, DEFAULT_GROUP brd-sys2 192.168.0.103:11101 register finished
2021-04-02 13:39:08.322 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - Started BrdSysApplication in 7.981 seconds (JVM running for 8.919)
2021-04-02 13:39:08.326 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - Redis连接中 ······
2021-04-02 13:39:08.331 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存初始化 ······
2021-04-02 13:39:08.331 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存用户数据 ······
2021-04-02 13:39:08.427 febs [restartedMain] INFO  p6spy - 2021-04-02 13:39:08 | 耗时 65 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user;
2021-04-02 13:39:08.445 febs [restartedMain] INFO  p6spy - 2021-04-02 13:39:08 | 耗时 10 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sysadmin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 13:39:08.554 febs [restartedMain] INFO  p6spy - 2021-04-02 13:39:08 | 耗时 4 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin';
2021-04-02 13:39:08.580 febs [restartedMain] INFO  p6spy - 2021-04-02 13:39:08 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'sysadmin' and m.perms is not null and m.perms <> '';
2021-04-02 13:39:08.589 febs [restartedMain] INFO  p6spy - 2021-04-02 13:39:08 | 耗时 4 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='-1';
2021-04-02 13:39:08.646 febs [restartedMain] INFO  p6spy - 2021-04-02 13:39:08 | 耗时 55 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengcheng1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 13:39:08.706 febs [restartedMain] INFO  p6spy - 2021-04-02 13:39:08 | 耗时 6 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengcheng1';
2021-04-02 13:39:08.723 febs [restartedMain] INFO  p6spy - 2021-04-02 13:39:08 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengcheng1' and m.perms is not null and m.perms <> '';
2021-04-02 13:39:08.743 febs [restartedMain] INFO  p6spy - 2021-04-02 13:39:08 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='163';
2021-04-02 13:39:08.818 febs [restartedMain] INFO  p6spy - 2021-04-02 13:39:08 | 耗时 63 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yulin1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 13:39:08.882 febs [restartedMain] INFO  p6spy - 2021-04-02 13:39:08 | 耗时 7 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yulin1';
2021-04-02 13:39:08.900 febs [restartedMain] INFO  p6spy - 2021-04-02 13:39:08 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yulin1' and m.perms is not null and m.perms <> '';
2021-04-02 13:39:08.917 febs [restartedMain] INFO  p6spy - 2021-04-02 13:39:08 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='164';
2021-04-02 13:39:08.981 febs [restartedMain] INFO  p6spy - 2021-04-02 13:39:08 | 耗时 53 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = '22' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 13:39:09.000 febs [restartedMain] INFO  p6spy - 2021-04-02 13:39:09 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = '22';
2021-04-02 13:39:09.016 febs [restartedMain] INFO  p6spy - 2021-04-02 13:39:09 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = '22' and m.perms is not null and m.perms <> '';
2021-04-02 13:39:09.033 febs [restartedMain] INFO  p6spy - 2021-04-02 13:39:09 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='171';
2021-04-02 13:39:09.108 febs [restartedMain] INFO  p6spy - 2021-04-02 13:39:09 | 耗时 53 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = '33' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 13:39:09.212 febs [restartedMain] INFO  p6spy - 2021-04-02 13:39:09 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = '33';
2021-04-02 13:39:09.231 febs [restartedMain] INFO  p6spy - 2021-04-02 13:39:09 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = '33' and m.perms is not null and m.perms <> '';
2021-04-02 13:39:09.248 febs [restartedMain] INFO  p6spy - 2021-04-02 13:39:09 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='172';
2021-04-02 13:39:09.258 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2021-04-02 13:39:09.258 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2021-04-02 13:39:09.258 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2021-04-02 13:39:09.258 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -                                                       
2021-04-02 13:39:09.258 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - FEBS 启动完毕，时间：2021-04-02T13:39:09.258
2021-04-02 13:39:09.260 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2+DEFAULT_GROUP
2021-04-02 13:39:09.261 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2, group=DEFAULT_GROUP, cnt=1
2021-04-02 13:39:09.261 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2.yaml+DEFAULT_GROUP
2021-04-02 13:39:09.261 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2.yaml, group=DEFAULT_GROUP, cnt=1
2021-04-02 13:39:09.261 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2-local.yaml+DEFAULT_GROUP
2021-04-02 13:39:09.261 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2-local.yaml, group=DEFAULT_GROUP, cnt=1
2021-04-02 13:39:20.336 febs [http-nio-11101-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-04-02 13:39:20.336 febs [http-nio-11101-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2021-04-02 13:39:20.346 febs [http-nio-11101-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 9 ms
2021-04-02 13:39:20.578 febs [http-nio-11101-exec-1] INFO  p6spy - 2021-04-02 13:39:20 | 耗时 61 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-04-02 13:39:20.654 febs [http-nio-11101-exec-2] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 13:39:20.732 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-04-02 13:39:20 | 耗时 34 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin') order by m.order_num;
2021-04-02 13:39:21.182 febs [http-nio-11101-exec-3] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 13:39:21.534 febs [http-nio-11101-exec-3] INFO  p6spy - 2021-04-02 13:39:21 | 耗时 102 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 13:39:21.607 febs [http-nio-11101-exec-3] INFO  p6spy - 2021-04-02 13:39:21 | 耗时 54 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-04-02 14:11:27.618 febs [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-04-02 14:11:28.177 febs [restartedMain] INFO  c.a.n.c.c.i.LocalConfigInfoProcessor - LOCAL_SNAPSHOT_PATH:C:\Users\Dukzzz\nacos\config
2021-04-02 14:11:28.206 febs [restartedMain] INFO  c.a.nacos.client.config.impl.Limiter - limitTime:5.0
2021-04-02 14:11:28.551 febs [restartedMain] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-brd-sys-dev.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys,DEFAULT_GROUP'}]
2021-04-02 14:11:28.556 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - The following profiles are active: dev
2021-04-02 14:11:30.538 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-04-02 14:11:30.539 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-04-02 14:11:30.580 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 30ms. Found 0 Redis repository interfaces.
2021-04-02 14:11:30.817 febs [restartedMain] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=8c4fe861-2a7b-3271-bb5c-24bd86b9b2e5
2021-04-02 14:11:30.976 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [com.smart.brd.sys.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$feb1e1ab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:11:31.041 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:11:31.101 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$1b635760] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:11:31.107 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:11:31.109 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:11:31.143 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [com.smart.brd.sys.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$39710da7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:11:31.375 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.smart.brd.sys.common.config.RedisConfig$$EnhancerBySpringCGLIB$$cacda3fb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:11:31.388 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:11:31.390 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [com.smart.brd.sys.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:11:31.428 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:11:31.435 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [com.smart.brd.sys.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$e9d0f7cd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:11:31.438 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:11:31.443 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$ef9d5329] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:11:31.452 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:11:31.454 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:11:31.457 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2021-04-02 14:11:31.463 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2021-04-02 14:11:31.670 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2021-04-02 14:11:31.670 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2021-04-02 14:11:31.670 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2021-04-02 14:11:31.670 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2021-04-02 14:11:31.670 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:11:31.679 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:11:31.686 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:11:32.094 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:11:32.102 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:11:32.128 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:11:32.131 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy144] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:11:32.136 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:11:32.136 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy145] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:11:32.137 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [com.smart.brd.sys.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:11:32.163 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [com.smart.brd.sys.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:11:32.175 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userTokenServiceImpl' of type [com.smart.brd.sys.system.usertoken.service.impl.UserTokenServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:11:32.180 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:11:32.181 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy148] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:11:32.181 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [com.smart.brd.sys.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:11:32.198 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:11:32.199 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy150] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:11:32.200 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [com.smart.brd.sys.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:11:32.239 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:11:32.239 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy152] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:11:32.241 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [com.smart.brd.sys.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:11:32.253 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:11:32.254 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [com.sun.proxy.$Proxy154] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:11:32.259 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:11:32.260 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy155] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:11:32.261 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [com.smart.brd.sys.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:11:32.273 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:11:32.275 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:11:32.277 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:11:32.282 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:11:32.283 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:11:32.286 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:11:32.289 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:11:32.291 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:11:32.296 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:11:32.297 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:11:32.301 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:11:32.304 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:11:32.320 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:11:32.335 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [com.smart.brd.sys.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:11:32.335 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [com.smart.brd.sys.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:11:32.336 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [com.smart.brd.sys.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:11:32.342 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:11:32.356 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:11:32.716 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 11001 (http)
2021-04-02 14:11:32.723 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-11001"]
2021-04-02 14:11:32.723 febs [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2021-04-02 14:11:32.723 febs [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.31]
2021-04-02 14:11:32.816 febs [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2021-04-02 14:11:32.816 febs [restartedMain] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4234 ms
2021-04-02 14:11:32.924 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-04-02 14:11:32.934 febs [restartedMain] INFO  c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@111f284c
2021-04-02 14:11:33.466 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2021-04-02 14:11:33.474 febs [restartedMain] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-02 14:11:33.474 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.2 created.
2021-04-02 14:11:33.475 febs [restartedMain] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2021-04-02 14:11:33.475 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-02 14:11:33.475 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2021-04-02 14:11:33.475 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.2
2021-04-02 14:11:33.475 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@455925b8
2021-04-02 14:11:33.535 febs [restartedMain] INFO  p6spy - 2021-04-02 14:11:33 | 耗时 8 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2021-04-02 14:11:33.925 febs [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2021-04-02 14:11:34.274 febs [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-04-02 14:11:34.400 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2021-04-02 14:11:34.447 febs [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2021-04-02 14:11:34.598 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-04-02 14:11:34.812 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2021-04-02 14:11:34.825 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-04-02 14:11:34.825 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Environment :null
2021-04-02 14:11:34.825 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-04-02 14:11:35.600 febs [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2021-04-02 14:11:35.613 febs [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2021-04-02 14:11:35.650 febs [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2021-04-02 14:11:35.662 febs [restartedMain] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2021-04-02 14:11:35.662 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2021-04-02 14:11:35.676 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-11001"]
2021-04-02 14:11:35.702 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 11001 (http) with context path ''
2021-04-02 14:11:35.705 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"192.168.0.103","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":11001,"scheduled":false,"serviceName":"DEFAULT_GROUP@@brd-sys","stopped":false,"weight":1.0} to beat map.
2021-04-02 14:11:35.769 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [REGISTER-SERVICE] public registering service DEFAULT_GROUP@@brd-sys with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"192.168.0.103","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":11001,"weight":1.0}
2021-04-02 14:11:35.810 febs [scheduling-1] INFO  c.s.brd.sys.common.task.CacheTask - delete expired user
2021-04-02 14:11:35.869 febs [restartedMain] INFO  c.a.c.n.r.NacosServiceRegistry - nacos registry, DEFAULT_GROUP brd-sys 192.168.0.103:11001 register finished
2021-04-02 14:11:36.021 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - Started BrdSysApplication in 9.424 seconds (JVM running for 10.991)
2021-04-02 14:11:36.025 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - Redis连接中 ······
2021-04-02 14:11:36.030 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存初始化 ······
2021-04-02 14:11:36.030 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存用户数据 ······
2021-04-02 14:11:36.079 febs [restartedMain] INFO  p6spy - 2021-04-02 14:11:36 | 耗时 18 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user;
2021-04-02 14:11:36.096 febs [restartedMain] INFO  p6spy - 2021-04-02 14:11:36 | 耗时 10 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sysadmin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 14:11:36.204 febs [restartedMain] INFO  p6spy - 2021-04-02 14:11:36 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin';
2021-04-02 14:11:36.229 febs [restartedMain] INFO  p6spy - 2021-04-02 14:11:36 | 耗时 7 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'sysadmin' and m.perms is not null and m.perms <> '';
2021-04-02 14:11:36.252 febs [restartedMain] INFO  p6spy - 2021-04-02 14:11:36 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='-1';
2021-04-02 14:11:36.306 febs [restartedMain] INFO  p6spy - 2021-04-02 14:11:36 | 耗时 53 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengcheng1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 14:11:36.366 febs [restartedMain] INFO  p6spy - 2021-04-02 14:11:36 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengcheng1';
2021-04-02 14:11:36.381 febs [restartedMain] INFO  p6spy - 2021-04-02 14:11:36 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengcheng1' and m.perms is not null and m.perms <> '';
2021-04-02 14:11:36.396 febs [restartedMain] INFO  p6spy - 2021-04-02 14:11:36 | 耗时 4 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='163';
2021-04-02 14:11:36.462 febs [restartedMain] INFO  p6spy - 2021-04-02 14:11:36 | 耗时 55 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yulin1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 14:11:36.521 febs [restartedMain] INFO  p6spy - 2021-04-02 14:11:36 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yulin1';
2021-04-02 14:11:36.537 febs [restartedMain] INFO  p6spy - 2021-04-02 14:11:36 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yulin1' and m.perms is not null and m.perms <> '';
2021-04-02 14:11:36.554 febs [restartedMain] INFO  p6spy - 2021-04-02 14:11:36 | 耗时 6 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='164';
2021-04-02 14:11:36.564 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2021-04-02 14:11:36.564 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2021-04-02 14:11:36.564 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2021-04-02 14:11:36.564 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -                                                       
2021-04-02 14:11:36.564 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - FEBS 启动完毕，时间：2021-04-02T14:11:36.564
2021-04-02 14:11:36.566 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys+DEFAULT_GROUP
2021-04-02 14:11:36.567 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys, group=DEFAULT_GROUP, cnt=1
2021-04-02 14:11:36.567 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys.yaml+DEFAULT_GROUP
2021-04-02 14:11:36.567 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys.yaml, group=DEFAULT_GROUP, cnt=1
2021-04-02 14:11:36.567 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys-dev.yaml+DEFAULT_GROUP
2021-04-02 14:11:36.567 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys-dev.yaml, group=DEFAULT_GROUP, cnt=1
2021-04-02 14:46:52.318 febs [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-04-02 14:46:52.793 febs [restartedMain] INFO  c.a.n.c.c.i.LocalConfigInfoProcessor - LOCAL_SNAPSHOT_PATH:C:\Users\Dukzzz\nacos\config
2021-04-02 14:46:52.814 febs [restartedMain] INFO  c.a.nacos.client.config.impl.Limiter - limitTime:5.0
2021-04-02 14:46:53.190 febs [restartedMain] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-brd-sys2-local.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys2.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys2,DEFAULT_GROUP'}]
2021-04-02 14:46:53.195 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - The following profiles are active: local
2021-04-02 14:46:54.476 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-04-02 14:46:54.478 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-04-02 14:46:54.523 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 33ms. Found 0 Redis repository interfaces.
2021-04-02 14:46:54.793 febs [restartedMain] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=8c4fe861-2a7b-3271-bb5c-24bd86b9b2e5
2021-04-02 14:46:54.918 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [com.smart.brd.sys.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$7118bf0b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:46:54.994 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:46:55.066 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$8dca34c0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:46:55.074 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:46:55.077 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:46:55.115 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [com.smart.brd.sys.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$abd7eb07] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:46:55.371 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.smart.brd.sys.common.config.RedisConfig$$EnhancerBySpringCGLIB$$3d34815b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:46:55.386 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:46:55.390 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [com.smart.brd.sys.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:46:55.432 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:46:55.440 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [com.smart.brd.sys.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$5c37d52d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:46:55.443 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:46:55.450 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$62043089] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:46:55.459 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:46:55.461 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:46:55.464 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2021-04-02 14:46:55.470 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2021-04-02 14:46:55.830 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2021-04-02 14:46:55.831 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2021-04-02 14:46:55.831 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2021-04-02 14:46:55.831 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2021-04-02 14:46:55.831 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:46:55.842 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:46:55.849 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:46:56.320 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:46:56.327 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:46:56.376 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:46:56.379 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy144] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:46:56.386 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:46:56.388 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy145] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:46:56.389 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [com.smart.brd.sys.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:46:56.420 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [com.smart.brd.sys.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:46:56.438 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userTokenServiceImpl' of type [com.smart.brd.sys.system.usertoken.service.impl.UserTokenServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:46:56.442 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:46:56.444 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy148] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:46:56.445 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [com.smart.brd.sys.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:46:56.463 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:46:56.464 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy150] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:46:56.465 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [com.smart.brd.sys.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:46:56.513 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:46:56.514 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy152] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:46:56.516 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [com.smart.brd.sys.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:46:56.530 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:46:56.531 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [com.sun.proxy.$Proxy154] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:46:56.538 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:46:56.539 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy155] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:46:56.540 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [com.smart.brd.sys.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:46:56.556 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:46:56.558 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:46:56.561 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:46:56.568 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:46:56.569 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:46:56.573 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:46:56.576 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:46:56.579 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:46:56.587 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:46:56.589 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:46:56.595 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:46:56.603 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:46:56.623 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:46:56.642 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [com.smart.brd.sys.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:46:56.642 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [com.smart.brd.sys.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:46:56.643 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [com.smart.brd.sys.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:46:56.652 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:46:56.669 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 14:46:57.119 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 11101 (http)
2021-04-02 14:46:57.126 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-11101"]
2021-04-02 14:46:57.127 febs [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2021-04-02 14:46:57.127 febs [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.31]
2021-04-02 14:46:57.222 febs [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2021-04-02 14:46:57.222 febs [restartedMain] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4007 ms
2021-04-02 14:46:57.314 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-04-02 14:46:57.323 febs [restartedMain] INFO  c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@51a4920c
2021-04-02 14:46:57.952 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2021-04-02 14:46:57.961 febs [restartedMain] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-02 14:46:57.961 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.2 created.
2021-04-02 14:46:57.962 febs [restartedMain] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2021-04-02 14:46:57.962 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-02 14:46:57.962 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2021-04-02 14:46:57.963 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.2
2021-04-02 14:46:57.963 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@5127a36
2021-04-02 14:46:58.104 febs [restartedMain] INFO  p6spy - 2021-04-02 14:46:58 | 耗时 64 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2021-04-02 14:46:58.854 febs [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-04-02 14:46:58.962 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2021-04-02 14:46:59.010 febs [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2021-04-02 14:46:59.156 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-04-02 14:46:59.369 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2021-04-02 14:46:59.382 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-04-02 14:46:59.382 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Environment :null
2021-04-02 14:46:59.382 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-04-02 14:47:00.108 febs [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2021-04-02 14:47:00.118 febs [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2021-04-02 14:47:00.150 febs [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2021-04-02 14:47:00.160 febs [restartedMain] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2021-04-02 14:47:00.160 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2021-04-02 14:47:00.174 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-11101"]
2021-04-02 14:47:00.196 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 11101 (http) with context path ''
2021-04-02 14:47:00.199 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"192.168.0.103","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":11101,"scheduled":false,"serviceName":"DEFAULT_GROUP@@brd-sys2","stopped":false,"weight":1.0} to beat map.
2021-04-02 14:47:00.252 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [REGISTER-SERVICE] public registering service DEFAULT_GROUP@@brd-sys2 with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"192.168.0.103","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":11101,"weight":1.0}
2021-04-02 14:47:00.291 febs [scheduling-1] INFO  c.s.brd.sys.common.task.CacheTask - delete expired user
2021-04-02 14:47:00.351 febs [restartedMain] INFO  c.a.c.n.r.NacosServiceRegistry - nacos registry, DEFAULT_GROUP brd-sys2 192.168.0.103:11101 register finished
2021-04-02 14:47:00.485 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - Started BrdSysApplication in 9.125 seconds (JVM running for 10.235)
2021-04-02 14:47:00.488 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - Redis连接中 ······
2021-04-02 14:47:00.507 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存初始化 ······
2021-04-02 14:47:00.507 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存用户数据 ······
2021-04-02 14:47:00.727 febs [restartedMain] INFO  p6spy - 2021-04-02 14:47:00 | 耗时 170 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user;
2021-04-02 14:47:00.779 febs [restartedMain] INFO  p6spy - 2021-04-02 14:47:00 | 耗时 44 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sysadmin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 14:47:00.958 febs [restartedMain] INFO  p6spy - 2021-04-02 14:47:00 | 耗时 21 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin';
2021-04-02 14:47:01.097 febs [restartedMain] INFO  p6spy - 2021-04-02 14:47:01 | 耗时 83 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'sysadmin' and m.perms is not null and m.perms <> '';
2021-04-02 14:47:01.263 febs [restartedMain] INFO  p6spy - 2021-04-02 14:47:01 | 耗时 96 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='-1';
2021-04-02 14:47:01.376 febs [restartedMain] INFO  p6spy - 2021-04-02 14:47:01 | 耗时 111 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengcheng1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 14:47:01.459 febs [restartedMain] INFO  p6spy - 2021-04-02 14:47:01 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengcheng1';
2021-04-02 14:47:01.476 febs [restartedMain] INFO  p6spy - 2021-04-02 14:47:01 | 耗时 6 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengcheng1' and m.perms is not null and m.perms <> '';
2021-04-02 14:47:01.493 febs [restartedMain] INFO  p6spy - 2021-04-02 14:47:01 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='163';
2021-04-02 14:47:01.596 febs [restartedMain] INFO  p6spy - 2021-04-02 14:47:01 | 耗时 83 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yulin1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 14:47:01.705 febs [restartedMain] INFO  p6spy - 2021-04-02 14:47:01 | 耗时 16 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yulin1';
2021-04-02 14:47:01.756 febs [restartedMain] INFO  p6spy - 2021-04-02 14:47:01 | 耗时 16 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yulin1' and m.perms is not null and m.perms <> '';
2021-04-02 14:47:01.808 febs [restartedMain] INFO  p6spy - 2021-04-02 14:47:01 | 耗时 17 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='164';
2021-04-02 14:47:01.945 febs [restartedMain] INFO  p6spy - 2021-04-02 14:47:01 | 耗时 98 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yonghu1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 14:47:02.067 febs [restartedMain] INFO  p6spy - 2021-04-02 14:47:02 | 耗时 22 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yonghu1';
2021-04-02 14:47:02.192 febs [restartedMain] INFO  p6spy - 2021-04-02 14:47:02 | 耗时 82 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yonghu1' and m.perms is not null and m.perms <> '';
2021-04-02 14:47:02.289 febs [restartedMain] INFO  p6spy - 2021-04-02 14:47:02 | 耗时 95 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='173';
2021-04-02 14:47:02.374 febs [restartedMain] INFO  p6spy - 2021-04-02 14:47:02 | 耗时 35 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yonghu2' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 14:47:02.470 febs [restartedMain] INFO  p6spy - 2021-04-02 14:47:02 | 耗时 15 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yonghu2';
2021-04-02 14:47:02.520 febs [restartedMain] INFO  p6spy - 2021-04-02 14:47:02 | 耗时 15 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yonghu2' and m.perms is not null and m.perms <> '';
2021-04-02 14:47:02.537 febs [restartedMain] INFO  p6spy - 2021-04-02 14:47:02 | 耗时 15 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='174';
2021-04-02 14:47:02.570 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2021-04-02 14:47:02.570 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2021-04-02 14:47:02.570 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2021-04-02 14:47:02.570 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -                                                       
2021-04-02 14:47:02.570 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - FEBS 启动完毕，时间：2021-04-02T14:47:02.570
2021-04-02 14:47:02.573 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2+DEFAULT_GROUP
2021-04-02 14:47:02.573 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2, group=DEFAULT_GROUP, cnt=1
2021-04-02 14:47:02.573 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2.yaml+DEFAULT_GROUP
2021-04-02 14:47:02.573 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2.yaml, group=DEFAULT_GROUP, cnt=1
2021-04-02 14:47:02.573 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2-local.yaml+DEFAULT_GROUP
2021-04-02 14:47:02.573 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2-local.yaml, group=DEFAULT_GROUP, cnt=1
2021-04-02 14:50:16.079 febs [http-nio-11101-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-04-02 14:50:16.079 febs [http-nio-11101-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2021-04-02 14:50:16.089 febs [http-nio-11101-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 10 ms
2021-04-02 14:50:16.262 febs [http-nio-11101-exec-1] INFO  p6spy - 2021-04-02 14:50:16 | 耗时 54 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-04-02 14:50:18.834 febs [http-nio-11101-exec-6] INFO  c.s.b.sys.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2021-04-02 14:50:18.993 febs [http-nio-11101-exec-6] INFO  p6spy - 2021-04-02 14:50:18 | 耗时 11 ms | SQL 语句：
UPDATE t_user SET last_login_time='2021-04-02T14:50:18.974+0800', user_type=0 WHERE username = 'sysadmin';
2021-04-02 14:50:19.054 febs [http-nio-11101-exec-6] INFO  p6spy - 2021-04-02 14:50:19 | 耗时 59 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sysadmin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 14:50:19.210 febs [http-nio-11101-exec-6] INFO  p6spy - 2021-04-02 14:50:19 | 耗时 13 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'sysadmin', '2021-04-02T14:50:19.135+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1' );
2021-04-02 14:50:19.315 febs [http-nio-11101-exec-6] INFO  p6spy - 2021-04-02 14:50:19 | 耗时 45 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='-1';
2021-04-02 14:50:19.412 febs [http-nio-11101-exec-5] INFO  p6spy - 2021-04-02 14:50:19 | 耗时 63 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-04-02 14:50:19.441 febs [http-nio-11101-exec-2] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 14:50:19.511 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-04-02 14:50:19 | 耗时 54 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin') order by m.order_num;
2021-04-02 14:50:48.405 febs [http-nio-11101-exec-8] INFO  c.s.b.sys.common.aspect.LimitAspect - IP:127.0.0.1 第 2 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2021-04-02 14:50:49.673 febs [http-nio-11101-exec-13] INFO  c.s.b.sys.common.aspect.LimitAspect - IP:127.0.0.1 第 3 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2021-04-02 14:50:49.938 febs [http-nio-11101-exec-9] INFO  c.s.b.sys.common.aspect.LimitAspect - IP:127.0.0.1 第 4 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2021-04-02 14:50:51.954 febs [http-nio-11101-exec-15] INFO  c.s.b.sys.common.aspect.LimitAspect - IP:127.0.0.1 第 5 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2021-04-02 14:50:52.949 febs [http-nio-11101-exec-11] INFO  c.s.b.sys.common.aspect.LimitAspect - IP:127.0.0.1 第 6 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2021-04-02 14:50:53.152 febs [http-nio-11101-exec-17] INFO  c.s.b.sys.common.aspect.LimitAspect - IP:127.0.0.1 第 7 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2021-04-02 14:50:58.087 febs [http-nio-11101-exec-19] INFO  c.s.b.sys.common.aspect.LimitAspect - IP:127.0.0.1 第 8 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2021-04-02 14:51:10.044 febs [http-nio-11101-exec-14] INFO  c.s.b.sys.common.aspect.LimitAspect - IP:127.0.0.1 第 9 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2021-04-02 14:51:10.104 febs [http-nio-11101-exec-14] INFO  p6spy - 2021-04-02 14:51:10 | 耗时 47 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = '2';
2021-04-02 14:51:10.627 febs [http-nio-11101-exec-10] INFO  c.s.b.sys.common.aspect.LimitAspect - IP:127.0.0.1 第 10 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2021-04-02 14:51:10.677 febs [http-nio-11101-exec-10] INFO  p6spy - 2021-04-02 14:51:10 | 耗时 38 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = '2';
2021-04-02 14:51:11.804 febs [http-nio-11101-exec-23] INFO  c.s.b.sys.common.aspect.LimitAspect - IP:127.0.0.1 第 11 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2021-04-02 14:51:11.862 febs [http-nio-11101-exec-23] INFO  p6spy - 2021-04-02 14:51:11 | 耗时 46 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = '2';
2021-04-02 14:51:19.101 febs [http-nio-11101-exec-12] INFO  c.s.b.sys.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2021-04-02 14:51:19.132 febs [http-nio-11101-exec-12] INFO  p6spy - 2021-04-02 14:51:19 | 耗时 10 ms | SQL 语句：
UPDATE t_user SET last_login_time='2021-04-02T14:51:19.120+0800', user_type=0 WHERE username = 'sysadmin';
2021-04-02 14:51:19.187 febs [http-nio-11101-exec-12] INFO  p6spy - 2021-04-02 14:51:19 | 耗时 54 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sysadmin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 14:51:19.277 febs [http-nio-11101-exec-12] INFO  p6spy - 2021-04-02 14:51:19 | 耗时 10 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'sysadmin', '2021-04-02T14:51:19.266+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1' );
2021-04-02 14:51:19.322 febs [http-nio-11101-exec-12] INFO  p6spy - 2021-04-02 14:51:19 | 耗时 4 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='-1';
2021-04-02 14:51:19.706 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-02 14:51:19 | 耗时 61 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-04-02 14:51:19.919 febs [http-nio-11101-exec-27] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 14:51:19.933 febs [http-nio-11101-exec-27] INFO  p6spy - 2021-04-02 14:51:19 | 耗时 10 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin') order by m.order_num;
2021-04-02 15:01:19.237 febs [http-nio-11101-exec-28] INFO  p6spy - 2021-04-02 15:01:19 | 耗时 50 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-04-02 15:01:19.402 febs [http-nio-11101-exec-21] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 15:01:19.416 febs [http-nio-11101-exec-21] INFO  p6spy - 2021-04-02 15:01:19 | 耗时 11 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin') order by m.order_num;
2021-04-02 15:09:18.423 febs [http-nio-11101-exec-22] INFO  p6spy - 2021-04-02 15:09:18 | 耗时 63 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-04-02 15:09:18.543 febs [http-nio-11101-exec-16] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 15:09:18.597 febs [http-nio-11101-exec-16] INFO  p6spy - 2021-04-02 15:09:18 | 耗时 50 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin') order by m.order_num;
2021-04-02 15:21:42.582 febs [http-nio-11101-exec-26] INFO  c.s.b.sys.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2021-04-02 15:21:42.614 febs [http-nio-11101-exec-26] INFO  p6spy - 2021-04-02 15:21:42 | 耗时 9 ms | SQL 语句：
UPDATE t_user SET last_login_time='2021-04-02T15:21:42.603+0800', user_type=0 WHERE username = 'chengcheng';
2021-04-02 15:21:42.677 febs [http-nio-11101-exec-26] INFO  p6spy - 2021-04-02 15:21:42 | 耗时 60 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengcheng' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 15:21:42.767 febs [http-nio-11101-exec-26] INFO  p6spy - 2021-04-02 15:21:42 | 耗时 5 ms | SQL 语句：
SELECT DEPT_ID,parent_id,type,dept_name,order_num,create_time,modify_time,dept_code,tenant_id,dept_address,longitude,latitude,province,city,county,town FROM t_dept WHERE parent_id = 140558060232900608;
2021-04-02 15:21:42.794 febs [http-nio-11101-exec-26] INFO  p6spy - 2021-04-02 15:21:42 | 耗时 13 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'chengcheng', '2021-04-02T15:21:42.779+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1' );
2021-04-02 15:21:43.272 febs [http-nio-11101-exec-25] INFO  p6spy - 2021-04-02 15:21:43 | 耗时 63 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'chengcheng';
2021-04-02 15:21:43.483 febs [http-nio-11101-exec-7] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 15:21:43.491 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 15:21:43 | 耗时 5 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengcheng') order by m.order_num;
2021-04-02 15:22:03.329 febs [http-nio-11101-exec-29] INFO  c.s.b.sys.common.aspect.LimitAspect - IP:127.0.0.1 第 2 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2021-04-02 15:22:03.358 febs [http-nio-11101-exec-29] INFO  p6spy - 2021-04-02 15:22:03 | 耗时 9 ms | SQL 语句：
UPDATE t_user SET last_login_time='2021-04-02T15:22:03.346+0800', user_type=0 WHERE username = 'chengcheng1';
2021-04-02 15:22:03.387 febs [http-nio-11101-exec-29] INFO  p6spy - 2021-04-02 15:22:03 | 耗时 28 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengcheng1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 15:22:03.462 febs [http-nio-11101-exec-29] INFO  p6spy - 2021-04-02 15:22:03 | 耗时 6 ms | SQL 语句：
SELECT DEPT_ID,parent_id,type,dept_name,order_num,create_time,modify_time,dept_code,tenant_id,dept_address,longitude,latitude,province,city,county,town FROM t_dept WHERE parent_id = 140558060232900608;
2021-04-02 15:22:03.482 febs [http-nio-11101-exec-29] INFO  p6spy - 2021-04-02 15:22:03 | 耗时 10 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'chengcheng1', '2021-04-02T15:22:03.468+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1' );
2021-04-02 15:22:03.944 febs [http-nio-11101-exec-30] INFO  p6spy - 2021-04-02 15:22:03 | 耗时 61 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'chengcheng1';
2021-04-02 15:22:04.155 febs [http-nio-11101-exec-31] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 15:22:04.168 febs [http-nio-11101-exec-31] INFO  p6spy - 2021-04-02 15:22:04 | 耗时 10 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengcheng1') order by m.order_num;
2021-04-02 15:22:08.738 febs [http-nio-11101-exec-32] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 15:22:08.842 febs [http-nio-11101-exec-32] INFO  p6spy - 2021-04-02 15:22:08 | 耗时 42 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 and (u.dept_id = 140558060232900608 or u.create_dept = 140558060232900608) u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 15:22:11.957 febs [http-nio-11101-exec-33] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 15:22:11.984 febs [http-nio-11101-exec-34] INFO  p6spy - 2021-04-02 15:22:11 | 耗时 11 ms | SQL 语句：
SELECT DEPT_ID,parent_id,type,dept_name,order_num,create_time,modify_time,dept_code,tenant_id,dept_address,longitude,latitude,province,city,county,town FROM t_dept WHERE DEPT_ID = 140558060232900608 ORDER BY order_num ASC;
2021-04-02 15:22:11.988 febs [http-nio-11101-exec-33] INFO  p6spy - 2021-04-02 15:22:11 | 耗时 7 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role WHERE create_dept = 140558060232900608 ) TOTAL;
2021-04-02 15:22:11.998 febs [http-nio-11101-exec-33] INFO  p6spy - 2021-04-02 15:22:11 | 耗时 5 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role WHERE create_dept = 140558060232900608 LIMIT 0,10;
2021-04-02 15:22:23.067 febs [http-nio-11101-exec-35] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 15:22:23.117 febs [http-nio-11101-exec-35] INFO  p6spy - 2021-04-02 15:22:23 | 耗时 31 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = '3333';
2021-04-02 15:22:23.229 febs [http-nio-11101-exec-35] INFO  p6spy - 2021-04-02 15:22:23 | 耗时 60 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = '3333';
2021-04-02 15:22:23.278 febs [http-nio-11101-exec-35] INFO  p6spy - 2021-04-02 15:22:23 | 耗时 46 ms | SQL 语句：
INSERT INTO t_user ( username, password, tenant_id, mobile, status, create_time, gender, avatar, user_type, is_xcx, is_show, create_dept ) VALUES ( '3333', '8923bb27632f6ce4697c215db99ff168', 0, '13333333333', '1', '2021-04-02T15:22:23.229+0800', '2', 'default.jpg', 0, 0, 1, 140558060232900608 );
2021-04-02 15:22:23.294 febs [http-nio-11101-exec-35] INFO  p6spy - 2021-04-02 15:22:23 | 耗时 12 ms | SQL 语句：
INSERT INTO t_user_role ( user_id, role_id ) VALUES ( 176, 28 );
2021-04-02 15:22:23.310 febs [http-nio-11101-exec-35] INFO  p6spy - 2021-04-02 15:22:23 | 耗时 13 ms | SQL 语句：
INSERT INTO t_user_config ( USER_ID, theme, layout, multi_page, fix_siderbar, fix_header, color ) VALUES ( 176, 'dark', 'side', '0', '1', '1', 'rgb(66, 185, 131)' );
2021-04-02 15:22:23.370 febs [http-nio-11101-exec-35] INFO  p6spy - 2021-04-02 15:22:23 | 耗时 59 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = '3333' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 15:22:23.403 febs [http-nio-11101-exec-35] INFO  p6spy - 2021-04-02 15:22:23 | 耗时 7 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = '3333';
2021-04-02 15:22:23.424 febs [http-nio-11101-exec-35] INFO  p6spy - 2021-04-02 15:22:23 | 耗时 6 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = '3333' and m.perms is not null and m.perms <> '';
2021-04-02 15:22:23.431 febs [http-nio-11101-exec-35] INFO  p6spy - 2021-04-02 15:22:23 | 耗时 4 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='176';
2021-04-02 15:22:23.477 febs [asyncTaskExecutor-1] INFO  p6spy - 2021-04-02 15:22:23 | 耗时 10 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'chengcheng1', '新增用户', 372, 'com.smart.brd.sys.system.controller.UserController.addUser()', ' request: org.apache.shiro.web.servlet.ShiroHttpServletRequest@409b42f7 user: "User(userId=176, username=3333, password=8923bb27632f6ce4697c215db99ff168, deptId=null, deptIds=null, tenantId=0, deptName=null, email=null, mobile=13333333333, status=1, createTime=Fri Apr 02 15:22:23 CST 2021, modifyTime=null, lastLoginTime=null, gender=2, description=null, avatar=default.jpg, roleId=28, roleName=null, expireTime=null, sortField=null, sortOrder=null, createTimeFrom=null, createTimeTo=null, id=null, userType=0, condition=null, openId=null, isXcx=0, isShow=1, createDept=140558060232900608, province=null, city=null, county=null, town=null, housing=null)"', '127.0.0.1', '2021-04-02T15:22:23.464+0800', '内网IP|0|0|内网IP|内网IP' );
2021-04-02 15:22:23.841 febs [http-nio-11101-exec-36] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 15:22:23.868 febs [http-nio-11101-exec-36] INFO  p6spy - 2021-04-02 15:22:23 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 and (u.dept_id = 140558060232900608 or u.create_dept = 140558060232900608) u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 15:23:17.925 febs [http-nio-11101-exec-38] INFO  c.s.b.sys.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2021-04-02 15:23:17.976 febs [http-nio-11101-exec-38] INFO  p6spy - 2021-04-02 15:23:17 | 耗时 35 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = '333';
2021-04-02 15:23:19.389 febs [http-nio-11101-exec-39] INFO  c.s.b.sys.common.aspect.LimitAspect - IP:127.0.0.1 第 2 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2021-04-02 15:23:19.443 febs [http-nio-11101-exec-39] INFO  p6spy - 2021-04-02 15:23:19 | 耗时 41 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = '333';
2021-04-02 15:23:20.416 febs [http-nio-11101-exec-40] INFO  c.s.b.sys.common.aspect.LimitAspect - IP:127.0.0.1 第 3 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2021-04-02 15:23:20.473 febs [http-nio-11101-exec-40] INFO  p6spy - 2021-04-02 15:23:20 | 耗时 43 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = '333';
2021-04-02 15:23:26.610 febs [http-nio-11101-exec-41] INFO  c.s.b.sys.common.aspect.LimitAspect - IP:127.0.0.1 第 4 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2021-04-02 15:23:26.660 febs [http-nio-11101-exec-41] INFO  p6spy - 2021-04-02 15:23:26 | 耗时 33 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = '333';
2021-04-02 15:23:27.790 febs [http-nio-11101-exec-42] INFO  c.s.b.sys.common.aspect.LimitAspect - IP:127.0.0.1 第 5 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2021-04-02 15:23:27.847 febs [http-nio-11101-exec-42] INFO  p6spy - 2021-04-02 15:23:27 | 耗时 40 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = '333';
2021-04-02 15:24:10.779 febs [http-nio-11101-exec-43] INFO  c.s.b.sys.common.aspect.LimitAspect - IP:127.0.0.1 第 6 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2021-04-02 15:24:10.830 febs [http-nio-11101-exec-43] INFO  p6spy - 2021-04-02 15:24:10 | 耗时 30 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = '333';
2021-04-02 15:27:33.694 febs [http-nio-11101-exec-44] INFO  c.s.b.sys.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2021-04-02 15:27:33.993 febs [http-nio-11101-exec-44] INFO  p6spy - 2021-04-02 15:27:33 | 耗时 41 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = '333';
2021-04-02 15:35:34.307 febs [http-nio-11101-exec-45] INFO  c.s.b.sys.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2021-04-02 15:35:34.392 febs [http-nio-11101-exec-45] INFO  p6spy - 2021-04-02 15:35:34 | 耗时 8 ms | SQL 语句：
UPDATE t_user SET last_login_time='2021-04-02T15:35:34.382+0800', user_type=0 WHERE username = '3333';
2021-04-02 15:35:34.416 febs [http-nio-11101-exec-45] INFO  p6spy - 2021-04-02 15:35:34 | 耗时 22 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = '3333' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 15:35:34.506 febs [http-nio-11101-exec-45] INFO  p6spy - 2021-04-02 15:35:34 | 耗时 21 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( '3333', '2021-04-02T15:35:34.484+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1' );
2021-04-02 15:35:34.592 febs [http-nio-11101-exec-45] INFO  p6spy - 2021-04-02 15:35:34 | 耗时 6 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = '3333' and m.perms is not null and m.perms <> '';
2021-04-02 15:35:34.657 febs [http-nio-11101-exec-46] INFO  p6spy - 2021-04-02 15:35:34 | 耗时 34 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = '3333';
2021-04-02 15:35:34.991 febs [http-nio-11101-exec-47] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 15:35:34.999 febs [http-nio-11101-exec-47] INFO  p6spy - 2021-04-02 15:35:34 | 耗时 6 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = '3333') order by m.order_num;
2021-04-02 15:35:35.290 febs [http-nio-11101-exec-48] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 15:35:35.300 febs [http-nio-11101-exec-48] INFO  p6spy - 2021-04-02 15:35:35 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 15:38:23.197 febs [http-nio-11101-exec-49] INFO  p6spy - 2021-04-02 15:38:23 | 耗时 59 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = '3333';
2021-04-02 15:38:23.349 febs [http-nio-11101-exec-50] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 15:38:23.361 febs [http-nio-11101-exec-50] INFO  p6spy - 2021-04-02 15:38:23 | 耗时 10 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = '3333') order by m.order_num;
2021-04-02 15:38:23.823 febs [http-nio-11101-exec-1] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 15:38:23.835 febs [http-nio-11101-exec-1] INFO  p6spy - 2021-04-02 15:38:23 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 15:38:55.429 febs [http-nio-11101-exec-6] INFO  c.s.b.sys.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2021-04-02 15:38:55.461 febs [http-nio-11101-exec-6] INFO  p6spy - 2021-04-02 15:38:55 | 耗时 10 ms | SQL 语句：
UPDATE t_user SET last_login_time='2021-04-02T15:38:55.449+0800', user_type=0 WHERE username = '3333';
2021-04-02 15:38:55.493 febs [http-nio-11101-exec-6] INFO  p6spy - 2021-04-02 15:38:55 | 耗时 31 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = '3333' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 15:38:55.573 febs [http-nio-11101-exec-6] INFO  p6spy - 2021-04-02 15:38:55 | 耗时 10 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( '3333', '2021-04-02T15:38:55.560+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1' );
2021-04-02 15:38:55.623 febs [http-nio-11101-exec-6] INFO  p6spy - 2021-04-02 15:38:55 | 耗时 6 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = '3333' and m.perms is not null and m.perms <> '';
2021-04-02 15:38:55.684 febs [http-nio-11101-exec-5] INFO  p6spy - 2021-04-02 15:38:55 | 耗时 39 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = '3333';
2021-04-02 15:38:55.739 febs [http-nio-11101-exec-2] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 15:38:55.755 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-04-02 15:38:55 | 耗时 14 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = '3333') order by m.order_num;
2021-04-02 15:40:17.966 febs [http-nio-11101-exec-8] INFO  c.s.b.sys.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2021-04-02 15:40:17.993 febs [http-nio-11101-exec-8] INFO  p6spy - 2021-04-02 15:40:17 | 耗时 9 ms | SQL 语句：
UPDATE t_user SET last_login_time='2021-04-02T15:40:17.983+0800', user_type=0 WHERE username = 'chengcheng1';
2021-04-02 15:40:18.028 febs [http-nio-11101-exec-8] INFO  p6spy - 2021-04-02 15:40:18 | 耗时 33 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengcheng1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 15:40:18.098 febs [http-nio-11101-exec-8] INFO  p6spy - 2021-04-02 15:40:18 | 耗时 5 ms | SQL 语句：
SELECT DEPT_ID,parent_id,type,dept_name,order_num,create_time,modify_time,dept_code,tenant_id,dept_address,longitude,latitude,province,city,county,town FROM t_dept WHERE parent_id = 140558060232900608;
2021-04-02 15:40:18.113 febs [http-nio-11101-exec-8] INFO  p6spy - 2021-04-02 15:40:18 | 耗时 9 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'chengcheng1', '2021-04-02T15:40:18.103+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1' );
2021-04-02 15:40:18.536 febs [http-nio-11101-exec-13] INFO  p6spy - 2021-04-02 15:40:18 | 耗时 60 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'chengcheng1';
2021-04-02 15:40:18.749 febs [http-nio-11101-exec-9] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 15:40:18.764 febs [http-nio-11101-exec-9] INFO  p6spy - 2021-04-02 15:40:18 | 耗时 11 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengcheng1') order by m.order_num;
2021-04-02 15:40:42.242 febs [http-nio-11101-exec-15] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 15:40:42.265 febs [http-nio-11101-exec-15] INFO  p6spy - 2021-04-02 15:40:42 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 and (u.dept_id = 140558060232900608 or u.create_dept = 140558060232900608) u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 15:40:44.977 febs [http-nio-11101-exec-11] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 15:40:45.000 febs [http-nio-11101-exec-17] INFO  p6spy - 2021-04-02 15:40:45 | 耗时 11 ms | SQL 语句：
SELECT DEPT_ID,parent_id,type,dept_name,order_num,create_time,modify_time,dept_code,tenant_id,dept_address,longitude,latitude,province,city,county,town FROM t_dept WHERE DEPT_ID = 140558060232900608 ORDER BY order_num ASC;
2021-04-02 15:40:45.027 febs [http-nio-11101-exec-11] INFO  p6spy - 2021-04-02 15:40:45 | 耗时 34 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role WHERE create_dept = 140558060232900608 ) TOTAL;
2021-04-02 15:40:45.034 febs [http-nio-11101-exec-11] INFO  p6spy - 2021-04-02 15:40:45 | 耗时 5 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role WHERE create_dept = 140558060232900608 LIMIT 0,10;
2021-04-02 15:40:54.312 febs [http-nio-11101-exec-19] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 15:40:54.363 febs [http-nio-11101-exec-19] INFO  p6spy - 2021-04-02 15:40:54 | 耗时 43 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = '15991477401';
2021-04-02 15:40:54.471 febs [http-nio-11101-exec-19] INFO  p6spy - 2021-04-02 15:40:54 | 耗时 58 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = '15991477401';
2021-04-02 15:40:54.527 febs [http-nio-11101-exec-19] INFO  p6spy - 2021-04-02 15:40:54 | 耗时 55 ms | SQL 语句：
INSERT INTO t_user ( username, password, tenant_id, mobile, status, create_time, gender, avatar, user_type, is_xcx, is_show, create_dept ) VALUES ( '15991477401', '0c2a9ce9ffbfd08b107b189b9aafa290', 0, '13333333333', '1', '2021-04-02T15:40:54.471+0800', '2', 'default.jpg', 0, 0, 1, 140558060232900608 );
2021-04-02 15:40:54.539 febs [http-nio-11101-exec-19] INFO  p6spy - 2021-04-02 15:40:54 | 耗时 10 ms | SQL 语句：
INSERT INTO t_user_role ( user_id, role_id ) VALUES ( 177, 28 );
2021-04-02 15:40:54.551 febs [http-nio-11101-exec-19] INFO  p6spy - 2021-04-02 15:40:54 | 耗时 11 ms | SQL 语句：
INSERT INTO t_user_config ( USER_ID, theme, layout, multi_page, fix_siderbar, fix_header, color ) VALUES ( 177, 'dark', 'side', '0', '1', '1', 'rgb(66, 185, 131)' );
2021-04-02 15:40:54.587 febs [http-nio-11101-exec-19] INFO  p6spy - 2021-04-02 15:40:54 | 耗时 35 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = '15991477401' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 15:40:54.645 febs [http-nio-11101-exec-19] INFO  p6spy - 2021-04-02 15:40:54 | 耗时 4 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = '15991477401';
2021-04-02 15:40:54.660 febs [http-nio-11101-exec-19] INFO  p6spy - 2021-04-02 15:40:54 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = '15991477401' and m.perms is not null and m.perms <> '';
2021-04-02 15:40:54.666 febs [http-nio-11101-exec-19] INFO  p6spy - 2021-04-02 15:40:54 | 耗时 4 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='177';
2021-04-02 15:40:54.702 febs [asyncTaskExecutor-2] INFO  p6spy - 2021-04-02 15:40:54 | 耗时 9 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'chengcheng1', '新增用户', 373, 'com.smart.brd.sys.system.controller.UserController.addUser()', ' request: org.apache.shiro.web.servlet.ShiroHttpServletRequest@4dac5f6f user: "User(userId=177, username=15991477401, password=0c2a9ce9ffbfd08b107b189b9aafa290, deptId=null, deptIds=null, tenantId=0, deptName=null, email=null, mobile=13333333333, status=1, createTime=Fri Apr 02 15:40:54 CST 2021, modifyTime=null, lastLoginTime=null, gender=2, description=null, avatar=default.jpg, roleId=28, roleName=null, expireTime=null, sortField=null, sortOrder=null, createTimeFrom=null, createTimeTo=null, id=null, userType=0, condition=null, openId=null, isXcx=0, isShow=1, createDept=140558060232900608, province=null, city=null, county=null, town=null, housing=null)"', '127.0.0.1', '2021-04-02T15:40:54.691+0800', '内网IP|0|0|内网IP|内网IP' );
2021-04-02 15:40:54.816 febs [http-nio-11101-exec-14] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 15:40:54.825 febs [http-nio-11101-exec-14] INFO  p6spy - 2021-04-02 15:40:54 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 and (u.dept_id = 140558060232900608 or u.create_dept = 140558060232900608) u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 15:41:06.298 febs [http-nio-11101-exec-23] INFO  c.s.b.sys.common.aspect.LimitAspect - IP:127.0.0.1 第 2 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2021-04-02 15:41:06.339 febs [http-nio-11101-exec-23] INFO  p6spy - 2021-04-02 15:41:06 | 耗时 10 ms | SQL 语句：
UPDATE t_user SET last_login_time='2021-04-02T15:41:06.327+0800', user_type=0 WHERE username = '15991477401';
2021-04-02 15:41:06.379 febs [http-nio-11101-exec-23] INFO  p6spy - 2021-04-02 15:41:06 | 耗时 39 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = '15991477401' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 15:41:06.461 febs [http-nio-11101-exec-23] INFO  p6spy - 2021-04-02 15:41:06 | 耗时 13 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( '15991477401', '2021-04-02T15:41:06.447+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1' );
2021-04-02 15:41:06.597 febs [http-nio-11101-exec-23] INFO  p6spy - 2021-04-02 15:41:06 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = '15991477401' and m.perms is not null and m.perms <> '';
2021-04-02 15:41:06.996 febs [http-nio-11101-exec-12] INFO  p6spy - 2021-04-02 15:41:06 | 耗时 66 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = '15991477401';
2021-04-02 15:41:07.208 febs [http-nio-11101-exec-18] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 15:41:07.219 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-02 15:41:07 | 耗时 9 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = '15991477401') order by m.order_num;
2021-04-02 15:41:07.461 febs [http-nio-11101-exec-27] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 15:41:07.470 febs [http-nio-11101-exec-27] INFO  p6spy - 2021-04-02 15:41:07 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 15:41:18.015 febs [http-nio-11101-exec-28] INFO  p6spy - 2021-04-02 15:41:18 | 耗时 60 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = '15991477401';
2021-04-02 15:41:18.106 febs [http-nio-11101-exec-21] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 15:41:18.113 febs [http-nio-11101-exec-21] INFO  p6spy - 2021-04-02 15:41:18 | 耗时 5 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = '15991477401') order by m.order_num;
2021-04-02 15:41:18.511 febs [http-nio-11101-exec-22] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 15:41:18.520 febs [http-nio-11101-exec-22] INFO  p6spy - 2021-04-02 15:41:18 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 15:41:26.348 febs [http-nio-11101-exec-24] INFO  c.s.b.sys.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2021-04-02 15:41:26.378 febs [http-nio-11101-exec-24] INFO  p6spy - 2021-04-02 15:41:26 | 耗时 9 ms | SQL 语句：
UPDATE t_user SET last_login_time='2021-04-02T15:41:26.368+0800', user_type=0 WHERE username = 'chengcheng1';
2021-04-02 15:41:26.411 febs [http-nio-11101-exec-24] INFO  p6spy - 2021-04-02 15:41:26 | 耗时 32 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengcheng1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 15:41:26.479 febs [http-nio-11101-exec-24] INFO  p6spy - 2021-04-02 15:41:26 | 耗时 4 ms | SQL 语句：
SELECT DEPT_ID,parent_id,type,dept_name,order_num,create_time,modify_time,dept_code,tenant_id,dept_address,longitude,latitude,province,city,county,town FROM t_dept WHERE parent_id = 140558060232900608;
2021-04-02 15:41:26.497 febs [http-nio-11101-exec-24] INFO  p6spy - 2021-04-02 15:41:26 | 耗时 11 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'chengcheng1', '2021-04-02T15:41:26.485+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1' );
2021-04-02 15:41:26.594 febs [http-nio-11101-exec-26] INFO  p6spy - 2021-04-02 15:41:26 | 耗时 38 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'chengcheng1';
2021-04-02 15:41:26.647 febs [http-nio-11101-exec-25] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 15:41:26.659 febs [http-nio-11101-exec-25] INFO  p6spy - 2021-04-02 15:41:26 | 耗时 10 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengcheng1') order by m.order_num;
2021-04-02 15:41:27.215 febs [http-nio-11101-exec-7] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 15:41:27.233 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 15:41:27 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 and (u.dept_id = 140558060232900608 or u.create_dept = 140558060232900608) u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 15:41:28.635 febs [http-nio-11101-exec-20] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 15:41:28.657 febs [http-nio-11101-exec-20] INFO  p6spy - 2021-04-02 15:41:28 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role WHERE create_dept = 140558060232900608 ) TOTAL;
2021-04-02 15:41:28.662 febs [http-nio-11101-exec-20] INFO  p6spy - 2021-04-02 15:41:28 | 耗时 4 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role WHERE create_dept = 140558060232900608 LIMIT 0,10;
2021-04-02 15:41:30.888 febs [http-nio-11101-exec-29] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 15:41:30.952 febs [http-nio-11101-exec-30] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 15:41:30.964 febs [http-nio-11101-exec-29] INFO  p6spy - 2021-04-02 15:41:30 | 耗时 27 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu ORDER BY order_num ASC;
2021-04-02 15:41:30.974 febs [http-nio-11101-exec-30] INFO  p6spy - 2021-04-02 15:41:30 | 耗时 5 ms | SQL 语句：
SELECT role_id,menu_id FROM t_role_menu WHERE role_id = '28';
2021-04-02 15:41:34.469 febs [http-nio-11101-exec-31] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 15:41:34.495 febs [http-nio-11101-exec-31] INFO  p6spy - 2021-04-02 15:41:34 | 耗时 5 ms | SQL 语句：
SELECT user_id,role_id FROM t_user_role WHERE role_id IN ('28');
2021-04-02 15:41:34.509 febs [http-nio-11101-exec-31] INFO  p6spy - 2021-04-02 15:41:34 | 耗时 11 ms | SQL 语句：
UPDATE t_role SET modify_time='2021-04-02T15:41:34.496+0800', create_dept=140558060232900608 WHERE ROLE_ID=28;
2021-04-02 15:41:34.565 febs [http-nio-11101-exec-31] INFO  p6spy - 2021-04-02 15:41:34 | 耗时 53 ms | SQL 语句：
DELETE FROM t_role_menu WHERE role_id = 28;
2021-04-02 15:41:34.577 febs [http-nio-11101-exec-31] INFO  p6spy - 2021-04-02 15:41:34 | 耗时 9 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 28, 2 );
2021-04-02 15:41:34.588 febs [http-nio-11101-exec-31] INFO  p6spy - 2021-04-02 15:41:34 | 耗时 10 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 28, 9027 );
2021-04-02 15:41:34.599 febs [http-nio-11101-exec-31] INFO  p6spy - 2021-04-02 15:41:34 | 耗时 10 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 28, 9028 );
2021-04-02 15:41:34.610 febs [http-nio-11101-exec-31] INFO  p6spy - 2021-04-02 15:41:34 | 耗时 9 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 28, 12 );
2021-04-02 15:41:34.621 febs [http-nio-11101-exec-31] INFO  p6spy - 2021-04-02 15:41:34 | 耗时 10 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 28, 9047 );
2021-04-02 15:41:34.632 febs [http-nio-11101-exec-31] INFO  p6spy - 2021-04-02 15:41:34 | 耗时 9 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 28, 13 );
2021-04-02 15:41:34.644 febs [http-nio-11101-exec-31] INFO  p6spy - 2021-04-02 15:41:34 | 耗时 11 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 28, 9048 );
2021-04-02 15:41:34.654 febs [http-nio-11101-exec-31] INFO  p6spy - 2021-04-02 15:41:34 | 耗时 9 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 28, 9 );
2021-04-02 15:41:34.664 febs [http-nio-11101-exec-31] INFO  p6spy - 2021-04-02 15:41:34 | 耗时 9 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 28, 9044 );
2021-04-02 15:41:34.679 febs [http-nio-11101-exec-31] INFO  p6spy - 2021-04-02 15:41:34 | 耗时 12 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 28, 10 );
2021-04-02 15:41:34.692 febs [http-nio-11101-exec-31] INFO  p6spy - 2021-04-02 15:41:34 | 耗时 10 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 28, 9045 );
2021-04-02 15:41:34.704 febs [http-nio-11101-exec-31] INFO  p6spy - 2021-04-02 15:41:34 | 耗时 11 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 28, 3 );
2021-04-02 15:41:34.715 febs [http-nio-11101-exec-31] INFO  p6spy - 2021-04-02 15:41:34 | 耗时 10 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 28, 9029 );
2021-04-02 15:41:34.725 febs [http-nio-11101-exec-31] INFO  p6spy - 2021-04-02 15:41:34 | 耗时 9 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 28, 9030 );
2021-04-02 15:41:34.737 febs [http-nio-11101-exec-31] INFO  p6spy - 2021-04-02 15:41:34 | 耗时 11 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 28, 9031 );
2021-04-02 15:41:34.747 febs [http-nio-11101-exec-31] INFO  p6spy - 2021-04-02 15:41:34 | 耗时 9 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 28, 4 );
2021-04-02 15:41:34.759 febs [http-nio-11101-exec-31] INFO  p6spy - 2021-04-02 15:41:34 | 耗时 10 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 28, 9032 );
2021-04-02 15:41:34.770 febs [http-nio-11101-exec-31] INFO  p6spy - 2021-04-02 15:41:34 | 耗时 10 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 28, 11 );
2021-04-02 15:41:34.779 febs [http-nio-11101-exec-31] INFO  p6spy - 2021-04-02 15:41:34 | 耗时 9 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 28, 9046 );
2021-04-02 15:41:34.791 febs [http-nio-11101-exec-31] INFO  p6spy - 2021-04-02 15:41:34 | 耗时 10 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 28, 14 );
2021-04-02 15:41:34.801 febs [http-nio-11101-exec-31] INFO  p6spy - 2021-04-02 15:41:34 | 耗时 8 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 28, 9049 );
2021-04-02 15:41:34.810 febs [http-nio-11101-exec-31] INFO  p6spy - 2021-04-02 15:41:34 | 耗时 9 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 28, 9050 );
2021-04-02 15:41:34.820 febs [http-nio-11101-exec-31] INFO  p6spy - 2021-04-02 15:41:34 | 耗时 9 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 28, 9051 );
2021-04-02 15:41:34.830 febs [http-nio-11101-exec-31] INFO  p6spy - 2021-04-02 15:41:34 | 耗时 9 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 28, 9052 );
2021-04-02 15:41:34.841 febs [http-nio-11101-exec-31] INFO  p6spy - 2021-04-02 15:41:34 | 耗时 10 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 28, 9053 );
2021-04-02 15:41:34.850 febs [http-nio-11101-exec-31] INFO  p6spy - 2021-04-02 15:41:34 | 耗时 8 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 28, 9054 );
2021-04-02 15:41:34.863 febs [http-nio-11101-exec-31] INFO  p6spy - 2021-04-02 15:41:34 | 耗时 11 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 28, 5 );
2021-04-02 15:41:34.872 febs [http-nio-11101-exec-31] INFO  p6spy - 2021-04-02 15:41:34 | 耗时 8 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 28, 9033 );
2021-04-02 15:41:34.881 febs [http-nio-11101-exec-31] INFO  p6spy - 2021-04-02 15:41:34 | 耗时 8 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 28, 9034 );
2021-04-02 15:41:34.939 febs [http-nio-11101-exec-31] INFO  p6spy - 2021-04-02 15:41:34 | 耗时 56 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE USER_ID='175';
2021-04-02 15:41:34.984 febs [http-nio-11101-exec-31] INFO  p6spy - 2021-04-02 15:41:34 | 耗时 42 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengcheng';
2021-04-02 15:41:34.998 febs [http-nio-11101-exec-31] INFO  p6spy - 2021-04-02 15:41:34 | 耗时 4 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengcheng' and m.perms is not null and m.perms <> '';
2021-04-02 15:41:35.047 febs [http-nio-11101-exec-31] INFO  p6spy - 2021-04-02 15:41:35 | 耗时 48 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE USER_ID='173';
2021-04-02 15:41:35.102 febs [http-nio-11101-exec-31] INFO  p6spy - 2021-04-02 15:41:35 | 耗时 53 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengchengyonghu1';
2021-04-02 15:41:35.118 febs [http-nio-11101-exec-31] INFO  p6spy - 2021-04-02 15:41:35 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengchengyonghu1' and m.perms is not null and m.perms <> '';
2021-04-02 15:41:35.171 febs [http-nio-11101-exec-31] INFO  p6spy - 2021-04-02 15:41:35 | 耗时 52 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE USER_ID='174';
2021-04-02 15:41:35.181 febs [http-nio-11101-exec-31] INFO  p6spy - 2021-04-02 15:41:35 | 耗时 9 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengchengyonghu2';
2021-04-02 15:41:35.197 febs [http-nio-11101-exec-31] INFO  p6spy - 2021-04-02 15:41:35 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengchengyonghu2' and m.perms is not null and m.perms <> '';
2021-04-02 15:41:35.250 febs [http-nio-11101-exec-31] INFO  p6spy - 2021-04-02 15:41:35 | 耗时 51 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE USER_ID='176';
2021-04-02 15:41:35.312 febs [http-nio-11101-exec-31] INFO  p6spy - 2021-04-02 15:41:35 | 耗时 61 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE USER_ID='177';
2021-04-02 15:41:35.357 febs [http-nio-11101-exec-31] INFO  p6spy - 2021-04-02 15:41:35 | 耗时 44 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = '15991477401';
2021-04-02 15:41:35.376 febs [http-nio-11101-exec-31] INFO  p6spy - 2021-04-02 15:41:35 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = '15991477401' and m.perms is not null and m.perms <> '';
2021-04-02 15:41:35.391 febs [asyncTaskExecutor-3] INFO  p6spy - 2021-04-02 15:41:35 | 耗时 9 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'chengcheng1', '修改角色', 905, 'com.smart.brd.sys.system.controller.RoleController.updateRole()', ' request: org.apache.shiro.web.servlet.ShiroHttpServletRequest@59f4009c role: "Role(roleId=28, roleName=null, remark=null, createTime=null, modifyTime=Fri Apr 02 15:41:34 CST 2021, createDept=140558060232900608, createTimeFrom=null, createTimeTo=null, menuId=2,9027,9028,12,9047,13,9048,9,9044,10,9045,3,9029,9030,9031,4,9032,11,9046,14,9049,9050,9051,9052,9053,9054,5,9033,9034)"', '127.0.0.1', '2021-04-02T15:41:35.381+0800', '内网IP|0|0|内网IP|内网IP' );
2021-04-02 15:41:35.731 febs [http-nio-11101-exec-32] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 15:41:35.739 febs [http-nio-11101-exec-32] INFO  p6spy - 2021-04-02 15:41:35 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role WHERE create_dept = 140558060232900608 ) TOTAL;
2021-04-02 15:41:35.746 febs [http-nio-11101-exec-32] INFO  p6spy - 2021-04-02 15:41:35 | 耗时 5 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role WHERE create_dept = 140558060232900608 LIMIT 0,10;
2021-04-02 15:41:40.532 febs [http-nio-11101-exec-33] INFO  c.s.b.sys.common.aspect.LimitAspect - IP:127.0.0.1 第 2 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2021-04-02 15:41:40.559 febs [http-nio-11101-exec-33] INFO  p6spy - 2021-04-02 15:41:40 | 耗时 9 ms | SQL 语句：
UPDATE t_user SET last_login_time='2021-04-02T15:41:40.548+0800', user_type=0 WHERE username = '15991477401';
2021-04-02 15:41:40.593 febs [http-nio-11101-exec-33] INFO  p6spy - 2021-04-02 15:41:40 | 耗时 33 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = '15991477401' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 15:41:40.675 febs [http-nio-11101-exec-33] INFO  p6spy - 2021-04-02 15:41:40 | 耗时 12 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( '15991477401', '2021-04-02T15:41:40.662+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1' );
2021-04-02 15:41:40.890 febs [http-nio-11101-exec-33] INFO  p6spy - 2021-04-02 15:41:40 | 耗时 12 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = '15991477401' and m.perms is not null and m.perms <> '';
2021-04-02 15:41:40.949 febs [http-nio-11101-exec-35] INFO  p6spy - 2021-04-02 15:41:40 | 耗时 30 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = '15991477401';
2021-04-02 15:41:41.271 febs [http-nio-11101-exec-36] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 15:41:41.286 febs [http-nio-11101-exec-36] INFO  p6spy - 2021-04-02 15:41:41 | 耗时 13 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = '15991477401') order by m.order_num;
2021-04-02 15:41:41.537 febs [http-nio-11101-exec-37] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 15:41:41.546 febs [http-nio-11101-exec-37] INFO  p6spy - 2021-04-02 15:41:41 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role ) TOTAL;
2021-04-02 15:41:41.552 febs [http-nio-11101-exec-37] INFO  p6spy - 2021-04-02 15:41:41 | 耗时 5 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role LIMIT 0,10;
2021-04-02 15:42:08.494 febs [http-nio-11101-exec-39] INFO  c.s.b.sys.common.aspect.LimitAspect - IP:127.0.0.1 第 3 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2021-04-02 15:42:08.529 febs [http-nio-11101-exec-39] INFO  p6spy - 2021-04-02 15:42:08 | 耗时 16 ms | SQL 语句：
UPDATE t_user SET last_login_time='2021-04-02T15:42:08.510+0800', user_type=0 WHERE username = 'chengcheng1';
2021-04-02 15:42:08.582 febs [http-nio-11101-exec-39] INFO  p6spy - 2021-04-02 15:42:08 | 耗时 51 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengcheng1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 15:42:08.950 febs [http-nio-11101-exec-39] INFO  p6spy - 2021-04-02 15:42:08 | 耗时 15 ms | SQL 语句：
SELECT DEPT_ID,parent_id,type,dept_name,order_num,create_time,modify_time,dept_code,tenant_id,dept_address,longitude,latitude,province,city,county,town FROM t_dept WHERE parent_id = 140558060232900608;
2021-04-02 15:42:08.992 febs [http-nio-11101-exec-39] INFO  p6spy - 2021-04-02 15:42:08 | 耗时 9 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'chengcheng1', '2021-04-02T15:42:08.982+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1' );
2021-04-02 15:42:09.368 febs [http-nio-11101-exec-40] INFO  p6spy - 2021-04-02 15:42:09 | 耗时 10 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'chengcheng1';
2021-04-02 15:42:09.632 febs [http-nio-11101-exec-41] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 15:42:09.649 febs [http-nio-11101-exec-41] INFO  p6spy - 2021-04-02 15:42:09 | 耗时 14 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengcheng1') order by m.order_num;
2021-04-02 15:42:11.998 febs [http-nio-11101-exec-42] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 15:42:12.014 febs [http-nio-11101-exec-42] INFO  p6spy - 2021-04-02 15:42:12 | 耗时 7 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 and (u.dept_id = 140558060232900608 or u.create_dept = 140558060232900608) u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 15:42:14.538 febs [http-nio-11101-exec-43] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 15:42:14.556 febs [http-nio-11101-exec-43] INFO  p6spy - 2021-04-02 15:42:14 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role WHERE create_dept = 140558060232900608 ) TOTAL;
2021-04-02 15:42:14.568 febs [http-nio-11101-exec-43] INFO  p6spy - 2021-04-02 15:42:14 | 耗时 4 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role WHERE create_dept = 140558060232900608 LIMIT 0,10;
2021-04-02 15:42:15.376 febs [http-nio-11101-exec-44] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 15:42:15.390 febs [http-nio-11101-exec-44] INFO  p6spy - 2021-04-02 15:42:15 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 and (u.dept_id = 140558060232900608 or u.create_dept = 140558060232900608) u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 15:42:18.079 febs [http-nio-11101-exec-45] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 15:42:18.107 febs [http-nio-11101-exec-45] INFO  p6spy - 2021-04-02 15:42:18 | 耗时 13 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu ORDER BY order_num ASC;
2021-04-02 15:42:19.290 febs [http-nio-11101-exec-46] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 15:42:19.305 febs [http-nio-11101-exec-46] INFO  p6spy - 2021-04-02 15:42:19 | 耗时 7 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role WHERE create_dept = 140558060232900608 ) TOTAL;
2021-04-02 15:42:19.311 febs [http-nio-11101-exec-46] INFO  p6spy - 2021-04-02 15:42:19 | 耗时 5 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role WHERE create_dept = 140558060232900608 LIMIT 0,10;
2021-04-02 15:42:20.858 febs [http-nio-11101-exec-47] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 15:42:20.873 febs [http-nio-11101-exec-47] INFO  p6spy - 2021-04-02 15:42:20 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 and (u.dept_id = 140558060232900608 or u.create_dept = 140558060232900608) u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 15:47:00.295 febs [scheduling-1] INFO  c.s.brd.sys.common.task.CacheTask - delete expired user
2021-04-02 16:07:06.243 febs [http-nio-11101-exec-49] INFO  c.s.b.sys.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2021-04-02 16:07:06.278 febs [http-nio-11101-exec-49] INFO  p6spy - 2021-04-02 16:07:06 | 耗时 13 ms | SQL 语句：
UPDATE t_user SET last_login_time='2021-04-02T16:07:06.261+0800', user_type=0 WHERE username = 'sysadmin';
2021-04-02 16:07:06.321 febs [http-nio-11101-exec-49] INFO  p6spy - 2021-04-02 16:07:06 | 耗时 42 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sysadmin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 16:07:06.402 febs [http-nio-11101-exec-49] INFO  p6spy - 2021-04-02 16:07:06 | 耗时 10 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'sysadmin', '2021-04-02T16:07:06.390+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1' );
2021-04-02 16:07:06.458 febs [http-nio-11101-exec-49] INFO  p6spy - 2021-04-02 16:07:06 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='-1';
2021-04-02 16:07:06.863 febs [http-nio-11101-exec-50] INFO  p6spy - 2021-04-02 16:07:06 | 耗时 56 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-04-02 16:07:07.079 febs [http-nio-11101-exec-1] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 16:07:07.095 febs [http-nio-11101-exec-1] INFO  p6spy - 2021-04-02 16:07:07 | 耗时 12 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin') order by m.order_num;
2021-04-02 16:07:07.390 febs [http-nio-11101-exec-4] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 16:07:07.401 febs [http-nio-11101-exec-4] INFO  p6spy - 2021-04-02 16:07:07 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 16:07:09.687 febs [http-nio-11101-exec-6] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 16:07:09.712 febs [http-nio-11101-exec-6] INFO  p6spy - 2021-04-02 16:07:09 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role ) TOTAL;
2021-04-02 16:07:09.720 febs [http-nio-11101-exec-6] INFO  p6spy - 2021-04-02 16:07:09 | 耗时 6 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role LIMIT 0,10;
2021-04-02 16:07:10.717 febs [http-nio-11101-exec-5] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 16:07:10.792 febs [http-nio-11101-exec-5] INFO  p6spy - 2021-04-02 16:07:10 | 耗时 8 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 16:07:48.850 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-04-02 16:07:48 | 耗时 98 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-04-02 16:07:48.896 febs [http-nio-11101-exec-3] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 16:07:48.912 febs [http-nio-11101-exec-3] INFO  p6spy - 2021-04-02 16:07:48 | 耗时 11 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin') order by m.order_num;
2021-04-02 16:07:49.538 febs [http-nio-11101-exec-8] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 16:07:49.552 febs [http-nio-11101-exec-8] INFO  p6spy - 2021-04-02 16:07:49 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 16:07:58.212 febs [http-nio-11101-exec-13] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 16:07:58.233 febs [http-nio-11101-exec-13] INFO  p6spy - 2021-04-02 16:07:58 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 16:08:32.959 febs [http-nio-11101-exec-9] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 16:08:32.977 febs [http-nio-11101-exec-9] INFO  p6spy - 2021-04-02 16:08:32 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role ) TOTAL;
2021-04-02 16:08:32.983 febs [http-nio-11101-exec-9] INFO  p6spy - 2021-04-02 16:08:32 | 耗时 4 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role LIMIT 0,10;
2021-04-02 16:08:35.729 febs [http-nio-11101-exec-15] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 16:08:35.767 febs [http-nio-11101-exec-15] INFO  p6spy - 2021-04-02 16:08:35 | 耗时 7 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 16:09:07.930 febs [http-nio-11101-exec-17] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 16:09:07.950 febs [http-nio-11101-exec-17] INFO  p6spy - 2021-04-02 16:09:07 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 16:09:35.062 febs [http-nio-11101-exec-11] INFO  p6spy - 2021-04-02 16:09:35 | 耗时 62 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-04-02 16:09:35.160 febs [http-nio-11101-exec-19] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 16:09:35.174 febs [http-nio-11101-exec-19] INFO  p6spy - 2021-04-02 16:09:35 | 耗时 10 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin') order by m.order_num;
2021-04-02 16:09:35.836 febs [http-nio-11101-exec-14] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 16:09:35.851 febs [http-nio-11101-exec-14] INFO  p6spy - 2021-04-02 16:09:35 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 16:10:51.553 febs [http-nio-11101-exec-10] INFO  p6spy - 2021-04-02 16:10:51 | 耗时 59 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-04-02 16:10:54.540 febs [http-nio-11101-exec-12] INFO  c.s.b.sys.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2021-04-02 16:10:54.572 febs [http-nio-11101-exec-12] INFO  p6spy - 2021-04-02 16:10:54 | 耗时 10 ms | SQL 语句：
UPDATE t_user SET last_login_time='2021-04-02T16:10:54.560+0800', user_type=0 WHERE username = 'sysadmin';
2021-04-02 16:10:54.602 febs [http-nio-11101-exec-12] INFO  p6spy - 2021-04-02 16:10:54 | 耗时 28 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sysadmin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 16:10:54.687 febs [http-nio-11101-exec-12] INFO  p6spy - 2021-04-02 16:10:54 | 耗时 10 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'sysadmin', '2021-04-02T16:10:54.675+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1' );
2021-04-02 16:10:54.797 febs [http-nio-11101-exec-12] INFO  p6spy - 2021-04-02 16:10:54 | 耗时 16 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='-1';
2021-04-02 16:10:54.917 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-02 16:10:54 | 耗时 82 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-04-02 16:10:55.011 febs [http-nio-11101-exec-27] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 16:10:55.027 febs [http-nio-11101-exec-27] INFO  p6spy - 2021-04-02 16:10:55 | 耗时 11 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin') order by m.order_num;
2021-04-02 16:11:57.412 febs [http-nio-11101-exec-28] INFO  p6spy - 2021-04-02 16:11:57 | 耗时 49 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-04-02 16:11:57.507 febs [http-nio-11101-exec-21] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 16:11:57.524 febs [http-nio-11101-exec-21] INFO  p6spy - 2021-04-02 16:11:57 | 耗时 13 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin') order by m.order_num;
2021-04-02 16:12:22.802 febs [http-nio-11101-exec-22] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 16:12:22.820 febs [http-nio-11101-exec-22] INFO  p6spy - 2021-04-02 16:12:22 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 16:13:11.118 febs [http-nio-11101-exec-16] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 16:13:11.137 febs [http-nio-11101-exec-16] INFO  p6spy - 2021-04-02 16:13:11 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 16:14:41.678 febs [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-04-02 16:14:42.086 febs [restartedMain] INFO  c.a.n.c.c.i.LocalConfigInfoProcessor - LOCAL_SNAPSHOT_PATH:C:\Users\Dukzzz\nacos\config
2021-04-02 16:14:42.105 febs [restartedMain] INFO  c.a.nacos.client.config.impl.Limiter - limitTime:5.0
2021-04-02 16:14:42.515 febs [restartedMain] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-brd-sys2-local.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys2.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys2,DEFAULT_GROUP'}]
2021-04-02 16:14:42.532 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - The following profiles are active: local
2021-04-02 16:14:43.674 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-04-02 16:14:43.677 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-04-02 16:14:43.726 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 35ms. Found 0 Redis repository interfaces.
2021-04-02 16:14:44.012 febs [restartedMain] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=8c4fe861-2a7b-3271-bb5c-24bd86b9b2e5
2021-04-02 16:14:44.139 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [com.smart.brd.sys.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$ed5b3640] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:14:44.209 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:14:44.275 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$a0cabf5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:14:44.283 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:14:44.286 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:14:44.323 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [com.smart.brd.sys.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$281a623c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:14:44.572 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.smart.brd.sys.common.config.RedisConfig$$EnhancerBySpringCGLIB$$b976f890] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:14:44.588 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:14:44.590 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [com.smart.brd.sys.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:14:44.632 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:14:44.639 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [com.smart.brd.sys.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$d87a4c62] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:14:44.642 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:14:44.647 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$de46a7be] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:14:44.654 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:14:44.656 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:14:44.659 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2021-04-02 16:14:44.664 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2021-04-02 16:14:44.982 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2021-04-02 16:14:44.982 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2021-04-02 16:14:44.982 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2021-04-02 16:14:44.982 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2021-04-02 16:14:44.982 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:14:45.003 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:14:45.016 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:14:45.457 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:14:45.465 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:14:45.494 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:14:45.497 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy144] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:14:45.503 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:14:45.505 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy145] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:14:45.506 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [com.smart.brd.sys.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:14:45.557 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [com.smart.brd.sys.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:14:45.572 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userTokenServiceImpl' of type [com.smart.brd.sys.system.usertoken.service.impl.UserTokenServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:14:45.576 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:14:45.578 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy148] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:14:45.579 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [com.smart.brd.sys.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:14:45.597 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:14:45.597 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy150] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:14:45.598 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [com.smart.brd.sys.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:14:45.644 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:14:45.645 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy152] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:14:45.646 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [com.smart.brd.sys.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:14:45.659 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:14:45.659 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [com.sun.proxy.$Proxy154] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:14:45.664 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:14:45.665 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy155] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:14:45.666 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [com.smart.brd.sys.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:14:45.680 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:14:45.682 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:14:45.685 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:14:45.689 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:14:45.690 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:14:45.694 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:14:45.696 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:14:45.701 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:14:45.708 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:14:45.709 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:14:45.713 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:14:45.717 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:14:45.734 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:14:45.754 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [com.smart.brd.sys.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:14:45.755 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [com.smart.brd.sys.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:14:45.756 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [com.smart.brd.sys.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:14:45.766 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:14:45.782 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:14:46.188 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 11101 (http)
2021-04-02 16:14:46.195 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-11101"]
2021-04-02 16:14:46.196 febs [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2021-04-02 16:14:46.196 febs [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.31]
2021-04-02 16:14:46.288 febs [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2021-04-02 16:14:46.289 febs [restartedMain] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3721 ms
2021-04-02 16:14:46.385 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-04-02 16:14:46.393 febs [restartedMain] INFO  c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@341f790b
2021-04-02 16:14:47.028 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2021-04-02 16:14:47.038 febs [restartedMain] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-02 16:14:47.038 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.2 created.
2021-04-02 16:14:47.038 febs [restartedMain] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2021-04-02 16:14:47.039 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-02 16:14:47.040 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2021-04-02 16:14:47.040 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.2
2021-04-02 16:14:47.040 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@54060b7
2021-04-02 16:14:47.096 febs [restartedMain] INFO  p6spy - 2021-04-02 16:14:47 | 耗时 5 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2021-04-02 16:14:47.929 febs [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-04-02 16:14:48.075 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2021-04-02 16:14:48.286 febs [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2021-04-02 16:14:48.315 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-04-02 16:14:48.565 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2021-04-02 16:14:48.579 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-04-02 16:14:48.580 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Environment :null
2021-04-02 16:14:48.580 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-04-02 16:14:49.445 febs [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2021-04-02 16:14:49.457 febs [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2021-04-02 16:14:49.498 febs [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2021-04-02 16:14:49.511 febs [restartedMain] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2021-04-02 16:14:49.511 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2021-04-02 16:14:49.526 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-11101"]
2021-04-02 16:14:49.550 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 11101 (http) with context path ''
2021-04-02 16:14:49.553 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"192.168.0.103","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":11101,"scheduled":false,"serviceName":"DEFAULT_GROUP@@brd-sys2","stopped":false,"weight":1.0} to beat map.
2021-04-02 16:14:49.613 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [REGISTER-SERVICE] public registering service DEFAULT_GROUP@@brd-sys2 with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"192.168.0.103","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":11101,"weight":1.0}
2021-04-02 16:14:49.642 febs [scheduling-1] INFO  c.s.brd.sys.common.task.CacheTask - delete expired user
2021-04-02 16:14:49.701 febs [restartedMain] INFO  c.a.c.n.r.NacosServiceRegistry - nacos registry, DEFAULT_GROUP brd-sys2 192.168.0.103:11101 register finished
2021-04-02 16:14:49.858 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - Started BrdSysApplication in 9.152 seconds (JVM running for 10.431)
2021-04-02 16:14:49.861 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - Redis连接中 ······
2021-04-02 16:14:49.867 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存初始化 ······
2021-04-02 16:14:49.867 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存用户数据 ······
2021-04-02 16:14:49.921 febs [restartedMain] INFO  p6spy - 2021-04-02 16:14:49 | 耗时 22 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user;
2021-04-02 16:14:49.940 febs [restartedMain] INFO  p6spy - 2021-04-02 16:14:49 | 耗时 9 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sysadmin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 16:14:50.066 febs [restartedMain] INFO  p6spy - 2021-04-02 16:14:50 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin';
2021-04-02 16:14:50.092 febs [restartedMain] INFO  p6spy - 2021-04-02 16:14:50 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'sysadmin' and m.perms is not null and m.perms <> '';
2021-04-02 16:14:50.117 febs [restartedMain] INFO  p6spy - 2021-04-02 16:14:50 | 耗时 4 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='-1';
2021-04-02 16:14:50.173 febs [restartedMain] INFO  p6spy - 2021-04-02 16:14:50 | 耗时 53 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengcheng1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 16:14:50.233 febs [restartedMain] INFO  p6spy - 2021-04-02 16:14:50 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengcheng1';
2021-04-02 16:14:50.250 febs [restartedMain] INFO  p6spy - 2021-04-02 16:14:50 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengcheng1' and m.perms is not null and m.perms <> '';
2021-04-02 16:14:50.268 febs [restartedMain] INFO  p6spy - 2021-04-02 16:14:50 | 耗时 6 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='163';
2021-04-02 16:14:50.340 febs [restartedMain] INFO  p6spy - 2021-04-02 16:14:50 | 耗时 55 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yulin1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 16:14:50.410 febs [restartedMain] INFO  p6spy - 2021-04-02 16:14:50 | 耗时 6 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yulin1';
2021-04-02 16:14:50.429 febs [restartedMain] INFO  p6spy - 2021-04-02 16:14:50 | 耗时 6 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yulin1' and m.perms is not null and m.perms <> '';
2021-04-02 16:14:50.447 febs [restartedMain] INFO  p6spy - 2021-04-02 16:14:50 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='164';
2021-04-02 16:14:50.520 febs [restartedMain] INFO  p6spy - 2021-04-02 16:14:50 | 耗时 55 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengchengyonghu1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 16:14:50.608 febs [restartedMain] INFO  p6spy - 2021-04-02 16:14:50 | 耗时 47 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengchengyonghu1';
2021-04-02 16:14:50.679 febs [restartedMain] INFO  p6spy - 2021-04-02 16:14:50 | 耗时 7 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengchengyonghu1' and m.perms is not null and m.perms <> '';
2021-04-02 16:14:50.685 febs [restartedMain] INFO  p6spy - 2021-04-02 16:14:50 | 耗时 4 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='173';
2021-04-02 16:14:50.755 febs [restartedMain] INFO  p6spy - 2021-04-02 16:14:50 | 耗时 58 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengchengyonghu2' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 16:14:50.819 febs [restartedMain] INFO  p6spy - 2021-04-02 16:14:50 | 耗时 6 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengchengyonghu2';
2021-04-02 16:14:50.840 febs [restartedMain] INFO  p6spy - 2021-04-02 16:14:50 | 耗时 7 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengchengyonghu2' and m.perms is not null and m.perms <> '';
2021-04-02 16:14:50.850 febs [restartedMain] INFO  p6spy - 2021-04-02 16:14:50 | 耗时 6 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='174';
2021-04-02 16:14:50.923 febs [restartedMain] INFO  p6spy - 2021-04-02 16:14:50 | 耗时 55 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengcheng' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 16:14:51.007 febs [restartedMain] INFO  p6spy - 2021-04-02 16:14:51 | 耗时 50 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengcheng';
2021-04-02 16:14:51.114 febs [restartedMain] INFO  p6spy - 2021-04-02 16:14:51 | 耗时 6 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengcheng' and m.perms is not null and m.perms <> '';
2021-04-02 16:14:51.123 febs [restartedMain] INFO  p6spy - 2021-04-02 16:14:51 | 耗时 6 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='175';
2021-04-02 16:14:51.135 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2021-04-02 16:14:51.135 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2021-04-02 16:14:51.135 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2021-04-02 16:14:51.136 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -                                                       
2021-04-02 16:14:51.136 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - FEBS 启动完毕，时间：2021-04-02T16:14:51.136
2021-04-02 16:14:51.150 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2+DEFAULT_GROUP
2021-04-02 16:14:51.152 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2, group=DEFAULT_GROUP, cnt=1
2021-04-02 16:14:51.152 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2.yaml+DEFAULT_GROUP
2021-04-02 16:14:51.152 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2.yaml, group=DEFAULT_GROUP, cnt=1
2021-04-02 16:14:51.153 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2-local.yaml+DEFAULT_GROUP
2021-04-02 16:14:51.153 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2-local.yaml, group=DEFAULT_GROUP, cnt=1
2021-04-02 16:15:01.554 febs [http-nio-11101-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-04-02 16:15:01.554 febs [http-nio-11101-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2021-04-02 16:15:01.582 febs [http-nio-11101-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 28 ms
2021-04-02 16:15:01.939 febs [http-nio-11101-exec-1] INFO  p6spy - 2021-04-02 16:15:01 | 耗时 63 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-04-02 16:15:02.127 febs [http-nio-11101-exec-4] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 16:15:02.288 febs [http-nio-11101-exec-4] INFO  p6spy - 2021-04-02 16:15:02 | 耗时 10 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin') order by m.order_num;
2021-04-02 16:15:03.036 febs [http-nio-11101-exec-3] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 16:15:03.229 febs [http-nio-11101-exec-3] INFO  p6spy - 2021-04-02 16:15:03 | 耗时 36 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 -- u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 16:15:03.324 febs [http-nio-11101-exec-3] INFO  p6spy - 2021-04-02 16:15:03 | 耗时 87 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 -- u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-04-02 16:15:06.287 febs [http-nio-11101-exec-7] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 16:15:06.385 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 16:15:06 | 耗时 45 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role ) TOTAL;
2021-04-02 16:15:06.392 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 16:15:06 | 耗时 5 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role LIMIT 0,10;
2021-04-02 16:15:08.366 febs [http-nio-11101-exec-5] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 16:15:08.385 febs [http-nio-11101-exec-5] INFO  p6spy - 2021-04-02 16:15:08 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 -- u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 16:15:08.411 febs [http-nio-11101-exec-5] INFO  p6spy - 2021-04-02 16:15:08 | 耗时 25 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 -- u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-04-02 16:15:14.968 febs [http-nio-11101-exec-2] INFO  c.s.b.sys.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2021-04-02 16:15:15.078 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-04-02 16:15:15 | 耗时 68 ms | SQL 语句：
UPDATE t_user SET last_login_time='2021-04-02T16:15:14.992+0800', user_type=0 WHERE username = 'sysadmin';
2021-04-02 16:15:15.139 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-04-02 16:15:15 | 耗时 58 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sysadmin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 16:15:15.371 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-04-02 16:15:15 | 耗时 144 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'sysadmin', '2021-04-02T16:15:15.209+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1' );
2021-04-02 16:15:15.496 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-04-02 16:15:15 | 耗时 6 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='-1';
2021-04-02 16:15:15.626 febs [http-nio-11101-exec-8] INFO  p6spy - 2021-04-02 16:15:15 | 耗时 80 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-04-02 16:15:15.971 febs [http-nio-11101-exec-9] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 16:15:15.989 febs [http-nio-11101-exec-9] INFO  p6spy - 2021-04-02 16:15:15 | 耗时 11 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin') order by m.order_num;
2021-04-02 16:15:16.284 febs [http-nio-11101-exec-10] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 16:15:16.296 febs [http-nio-11101-exec-10] INFO  p6spy - 2021-04-02 16:15:16 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 -- u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 16:15:16.342 febs [http-nio-11101-exec-10] INFO  p6spy - 2021-04-02 16:15:16 | 耗时 43 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 -- u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-04-02 16:15:30.078 febs [http-nio-11101-exec-11] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 16:15:30.106 febs [http-nio-11101-exec-11] INFO  p6spy - 2021-04-02 16:15:30 | 耗时 7 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 -- u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 16:15:30.125 febs [http-nio-11101-exec-11] INFO  p6spy - 2021-04-02 16:15:30 | 耗时 16 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 -- u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-04-02 16:15:31.769 febs [http-nio-11101-exec-12] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 16:15:31.811 febs [http-nio-11101-exec-12] INFO  p6spy - 2021-04-02 16:15:31 | 耗时 12 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role ) TOTAL;
2021-04-02 16:15:31.835 febs [http-nio-11101-exec-12] INFO  p6spy - 2021-04-02 16:15:31 | 耗时 22 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role LIMIT 0,10;
2021-04-02 16:15:33.618 febs [http-nio-11101-exec-15] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 16:15:33.650 febs [http-nio-11101-exec-15] INFO  p6spy - 2021-04-02 16:15:33 | 耗时 10 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu ORDER BY order_num ASC;
2021-04-02 16:15:33.656 febs [http-nio-11101-exec-14] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 16:15:33.704 febs [http-nio-11101-exec-14] INFO  p6spy - 2021-04-02 16:15:33 | 耗时 22 ms | SQL 语句：
SELECT role_id,menu_id FROM t_role_menu WHERE role_id = '-1';
2021-04-02 16:16:55.340 febs [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-04-02 16:16:55.791 febs [restartedMain] INFO  c.a.n.c.c.i.LocalConfigInfoProcessor - LOCAL_SNAPSHOT_PATH:C:\Users\Dukzzz\nacos\config
2021-04-02 16:16:55.810 febs [restartedMain] INFO  c.a.nacos.client.config.impl.Limiter - limitTime:5.0
2021-04-02 16:16:56.169 febs [restartedMain] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-brd-sys2-local.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys2.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys2,DEFAULT_GROUP'}]
2021-04-02 16:16:56.183 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - The following profiles are active: local
2021-04-02 16:16:57.562 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-04-02 16:16:57.568 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-04-02 16:16:57.680 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 81ms. Found 0 Redis repository interfaces.
2021-04-02 16:16:58.383 febs [restartedMain] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=8c4fe861-2a7b-3271-bb5c-24bd86b9b2e5
2021-04-02 16:16:58.586 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [com.smart.brd.sys.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$fc75d5aa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:16:58.660 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:16:58.727 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$19274b5f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:16:58.737 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:16:58.740 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:16:58.777 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [com.smart.brd.sys.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$373501a6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:16:59.366 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.smart.brd.sys.common.config.RedisConfig$$EnhancerBySpringCGLIB$$c89197fa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:16:59.398 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:16:59.402 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [com.smart.brd.sys.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:16:59.490 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:16:59.502 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [com.smart.brd.sys.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$e794ebcc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:16:59.507 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:16:59.517 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$ed614728] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:16:59.536 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:16:59.539 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:16:59.544 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2021-04-02 16:16:59.550 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2021-04-02 16:16:59.869 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2021-04-02 16:16:59.869 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2021-04-02 16:16:59.870 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2021-04-02 16:16:59.870 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2021-04-02 16:16:59.870 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:16:59.908 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:16:59.935 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:00.545 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:00.553 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:00.587 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:00.590 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy144] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:00.597 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:00.598 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy145] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:00.599 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [com.smart.brd.sys.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:00.629 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [com.smart.brd.sys.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:00.646 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userTokenServiceImpl' of type [com.smart.brd.sys.system.usertoken.service.impl.UserTokenServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:00.650 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:00.651 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy148] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:00.652 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [com.smart.brd.sys.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:00.677 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:00.678 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy150] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:00.678 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [com.smart.brd.sys.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:00.753 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:00.754 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy152] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:00.755 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [com.smart.brd.sys.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:00.779 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:00.780 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [com.sun.proxy.$Proxy154] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:00.787 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:00.788 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy155] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:00.789 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [com.smart.brd.sys.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:00.803 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:00.805 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:00.808 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:00.813 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:00.814 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:00.818 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:00.821 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:00.824 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:00.831 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:00.833 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:00.838 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:00.841 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:00.858 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:00.875 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [com.smart.brd.sys.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:00.876 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [com.smart.brd.sys.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:00.876 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [com.smart.brd.sys.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:00.884 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:00.902 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:01.355 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 11101 (http)
2021-04-02 16:17:01.364 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-11101"]
2021-04-02 16:17:01.365 febs [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2021-04-02 16:17:01.365 febs [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.31]
2021-04-02 16:17:01.470 febs [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2021-04-02 16:17:01.471 febs [restartedMain] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 5254 ms
2021-04-02 16:17:01.626 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-04-02 16:17:01.636 febs [restartedMain] INFO  c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1ab1a6bc
2021-04-02 16:17:02.254 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2021-04-02 16:17:02.264 febs [restartedMain] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-02 16:17:02.264 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.2 created.
2021-04-02 16:17:02.265 febs [restartedMain] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2021-04-02 16:17:02.265 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-02 16:17:02.265 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2021-04-02 16:17:02.266 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.2
2021-04-02 16:17:02.266 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@672d2709
2021-04-02 16:17:02.331 febs [restartedMain] INFO  p6spy - 2021-04-02 16:17:02 | 耗时 7 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2021-04-02 16:17:03.193 febs [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-04-02 16:17:03.331 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2021-04-02 16:17:03.543 febs [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2021-04-02 16:17:03.571 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-04-02 16:17:03.842 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2021-04-02 16:17:03.861 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-04-02 16:17:03.861 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Environment :null
2021-04-02 16:17:03.862 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-04-02 16:17:04.938 febs [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2021-04-02 16:17:04.949 febs [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2021-04-02 16:17:04.987 febs [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2021-04-02 16:17:04.999 febs [restartedMain] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2021-04-02 16:17:04.999 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2021-04-02 16:17:05.014 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-11101"]
2021-04-02 16:17:05.048 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 11101 (http) with context path ''
2021-04-02 16:17:05.052 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"192.168.0.103","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":11101,"scheduled":false,"serviceName":"DEFAULT_GROUP@@brd-sys2","stopped":false,"weight":1.0} to beat map.
2021-04-02 16:17:05.112 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [REGISTER-SERVICE] public registering service DEFAULT_GROUP@@brd-sys2 with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"192.168.0.103","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":11101,"weight":1.0}
2021-04-02 16:17:05.137 febs [scheduling-1] INFO  c.s.brd.sys.common.task.CacheTask - delete expired user
2021-04-02 16:17:05.186 febs [restartedMain] INFO  c.a.c.n.r.NacosServiceRegistry - nacos registry, DEFAULT_GROUP brd-sys2 192.168.0.103:11101 register finished
2021-04-02 16:17:05.337 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - Started BrdSysApplication in 11.019 seconds (JVM running for 12.33)
2021-04-02 16:17:05.341 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - Redis连接中 ······
2021-04-02 16:17:05.346 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存初始化 ······
2021-04-02 16:17:05.346 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存用户数据 ······
2021-04-02 16:17:05.409 febs [restartedMain] INFO  p6spy - 2021-04-02 16:17:05 | 耗时 18 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user;
2021-04-02 16:17:05.429 febs [restartedMain] INFO  p6spy - 2021-04-02 16:17:05 | 耗时 9 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sysadmin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 16:17:05.595 febs [restartedMain] INFO  p6spy - 2021-04-02 16:17:05 | 耗时 7 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin';
2021-04-02 16:17:05.623 febs [restartedMain] INFO  p6spy - 2021-04-02 16:17:05 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'sysadmin' and m.perms is not null and m.perms <> '';
2021-04-02 16:17:05.646 febs [restartedMain] INFO  p6spy - 2021-04-02 16:17:05 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='-1';
2021-04-02 16:17:05.702 febs [restartedMain] INFO  p6spy - 2021-04-02 16:17:05 | 耗时 53 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengcheng1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 16:17:05.761 febs [restartedMain] INFO  p6spy - 2021-04-02 16:17:05 | 耗时 4 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengcheng1';
2021-04-02 16:17:05.779 febs [restartedMain] INFO  p6spy - 2021-04-02 16:17:05 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengcheng1' and m.perms is not null and m.perms <> '';
2021-04-02 16:17:05.795 febs [restartedMain] INFO  p6spy - 2021-04-02 16:17:05 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='163';
2021-04-02 16:17:05.872 febs [restartedMain] INFO  p6spy - 2021-04-02 16:17:05 | 耗时 63 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yulin1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 16:17:05.933 febs [restartedMain] INFO  p6spy - 2021-04-02 16:17:05 | 耗时 7 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yulin1';
2021-04-02 16:17:05.952 febs [restartedMain] INFO  p6spy - 2021-04-02 16:17:05 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yulin1' and m.perms is not null and m.perms <> '';
2021-04-02 16:17:05.969 febs [restartedMain] INFO  p6spy - 2021-04-02 16:17:05 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='164';
2021-04-02 16:17:06.037 febs [restartedMain] INFO  p6spy - 2021-04-02 16:17:06 | 耗时 55 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengchengyonghu1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 16:17:06.099 febs [restartedMain] INFO  p6spy - 2021-04-02 16:17:06 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengchengyonghu1';
2021-04-02 16:17:06.117 febs [restartedMain] INFO  p6spy - 2021-04-02 16:17:06 | 耗时 6 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengchengyonghu1' and m.perms is not null and m.perms <> '';
2021-04-02 16:17:06.125 febs [restartedMain] INFO  p6spy - 2021-04-02 16:17:06 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='173';
2021-04-02 16:17:06.194 febs [restartedMain] INFO  p6spy - 2021-04-02 16:17:06 | 耗时 56 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengchengyonghu2' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 16:17:06.259 febs [restartedMain] INFO  p6spy - 2021-04-02 16:17:06 | 耗时 8 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengchengyonghu2';
2021-04-02 16:17:06.279 febs [restartedMain] INFO  p6spy - 2021-04-02 16:17:06 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengchengyonghu2' and m.perms is not null and m.perms <> '';
2021-04-02 16:17:06.287 febs [restartedMain] INFO  p6spy - 2021-04-02 16:17:06 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='174';
2021-04-02 16:17:06.363 febs [restartedMain] INFO  p6spy - 2021-04-02 16:17:06 | 耗时 53 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengcheng' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 16:17:06.420 febs [restartedMain] INFO  p6spy - 2021-04-02 16:17:06 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengcheng';
2021-04-02 16:17:06.436 febs [restartedMain] INFO  p6spy - 2021-04-02 16:17:06 | 耗时 4 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengcheng' and m.perms is not null and m.perms <> '';
2021-04-02 16:17:06.442 febs [restartedMain] INFO  p6spy - 2021-04-02 16:17:06 | 耗时 4 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='175';
2021-04-02 16:17:06.454 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2021-04-02 16:17:06.454 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2021-04-02 16:17:06.454 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2021-04-02 16:17:06.454 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -                                                       
2021-04-02 16:17:06.455 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - FEBS 启动完毕，时间：2021-04-02T16:17:06.455
2021-04-02 16:17:06.456 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2+DEFAULT_GROUP
2021-04-02 16:17:06.457 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2, group=DEFAULT_GROUP, cnt=1
2021-04-02 16:17:06.457 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2.yaml+DEFAULT_GROUP
2021-04-02 16:17:06.458 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2.yaml, group=DEFAULT_GROUP, cnt=1
2021-04-02 16:17:06.458 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2-local.yaml+DEFAULT_GROUP
2021-04-02 16:17:06.459 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2-local.yaml, group=DEFAULT_GROUP, cnt=1
2021-04-02 16:17:11.461 febs [http-nio-11101-exec-10] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-04-02 16:17:11.461 febs [http-nio-11101-exec-10] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2021-04-02 16:17:11.476 febs [http-nio-11101-exec-10] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 15 ms
2021-04-02 16:17:11.725 febs [http-nio-11101-exec-10] INFO  p6spy - 2021-04-02 16:17:11 | 耗时 59 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-04-02 16:17:11.874 febs [http-nio-11101-exec-3] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 16:17:11.948 febs [http-nio-11101-exec-3] INFO  p6spy - 2021-04-02 16:17:11 | 耗时 10 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin') order by m.order_num;
2021-04-02 16:17:12.482 febs [http-nio-11101-exec-4] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 16:17:12.573 febs [http-nio-11101-exec-4] INFO  p6spy - 2021-04-02 16:17:12 | 耗时 29 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role ) TOTAL;
2021-04-02 16:17:12.588 febs [http-nio-11101-exec-4] INFO  p6spy - 2021-04-02 16:17:12 | 耗时 6 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role LIMIT 0,10;
2021-04-02 16:17:21.590 febs [http-nio-11101-exec-2] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 16:17:21.682 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-04-02 16:17:21 | 耗时 38 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 and u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 16:17:21.746 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-04-02 16:17:21 | 耗时 59 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 and u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-04-02 16:17:47.202 febs [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-04-02 16:17:47.611 febs [restartedMain] INFO  c.a.n.c.c.i.LocalConfigInfoProcessor - LOCAL_SNAPSHOT_PATH:C:\Users\Dukzzz\nacos\config
2021-04-02 16:17:47.632 febs [restartedMain] INFO  c.a.nacos.client.config.impl.Limiter - limitTime:5.0
2021-04-02 16:17:48.043 febs [restartedMain] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-brd-sys2-local.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys2.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys2,DEFAULT_GROUP'}]
2021-04-02 16:17:48.054 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - The following profiles are active: local
2021-04-02 16:17:49.383 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-04-02 16:17:49.385 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-04-02 16:17:49.431 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 32ms. Found 0 Redis repository interfaces.
2021-04-02 16:17:49.701 febs [restartedMain] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=8c4fe861-2a7b-3271-bb5c-24bd86b9b2e5
2021-04-02 16:17:49.859 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [com.smart.brd.sys.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$acb91950] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:49.932 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:49.999 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$c96a8f05] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:50.008 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:50.011 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:50.049 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [com.smart.brd.sys.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$e778454c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:50.308 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.smart.brd.sys.common.config.RedisConfig$$EnhancerBySpringCGLIB$$78d4dba0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:50.323 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:50.326 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [com.smart.brd.sys.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:50.368 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:50.375 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [com.smart.brd.sys.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$97d82f72] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:50.378 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:50.384 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$9da48ace] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:50.392 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:50.393 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:50.396 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2021-04-02 16:17:50.403 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2021-04-02 16:17:50.649 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2021-04-02 16:17:50.650 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2021-04-02 16:17:50.650 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2021-04-02 16:17:50.650 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2021-04-02 16:17:50.650 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:50.674 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:50.684 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:51.138 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:51.144 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:51.172 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:51.175 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy144] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:51.181 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:51.183 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy145] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:51.184 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [com.smart.brd.sys.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:51.215 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [com.smart.brd.sys.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:51.229 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userTokenServiceImpl' of type [com.smart.brd.sys.system.usertoken.service.impl.UserTokenServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:51.233 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:51.234 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy148] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:51.235 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [com.smart.brd.sys.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:51.254 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:51.255 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy150] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:51.256 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [com.smart.brd.sys.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:51.300 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:51.301 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy152] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:51.302 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [com.smart.brd.sys.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:51.316 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:51.318 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [com.sun.proxy.$Proxy154] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:51.322 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:51.323 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy155] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:51.324 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [com.smart.brd.sys.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:51.339 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:51.341 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:51.343 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:51.348 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:51.350 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:51.353 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:51.356 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:51.360 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:51.366 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:51.368 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:51.373 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:51.375 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:51.391 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:51.409 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [com.smart.brd.sys.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:51.410 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [com.smart.brd.sys.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:51.411 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [com.smart.brd.sys.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:51.420 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:51.437 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:17:51.844 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 11101 (http)
2021-04-02 16:17:51.851 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-11101"]
2021-04-02 16:17:51.852 febs [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2021-04-02 16:17:51.852 febs [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.31]
2021-04-02 16:17:51.948 febs [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2021-04-02 16:17:51.949 febs [restartedMain] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3855 ms
2021-04-02 16:17:52.065 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-04-02 16:17:52.074 febs [restartedMain] INFO  c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@5973485a
2021-04-02 16:17:52.692 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2021-04-02 16:17:52.705 febs [restartedMain] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-02 16:17:52.705 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.2 created.
2021-04-02 16:17:52.706 febs [restartedMain] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2021-04-02 16:17:52.707 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-02 16:17:52.707 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2021-04-02 16:17:52.707 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.2
2021-04-02 16:17:52.707 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@74a7b92
2021-04-02 16:17:52.791 febs [restartedMain] INFO  p6spy - 2021-04-02 16:17:52 | 耗时 6 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2021-04-02 16:17:53.672 febs [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-04-02 16:17:53.803 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2021-04-02 16:17:54.013 febs [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2021-04-02 16:17:54.043 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-04-02 16:17:54.310 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2021-04-02 16:17:54.330 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-04-02 16:17:54.330 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Environment :null
2021-04-02 16:17:54.331 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-04-02 16:17:55.108 febs [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2021-04-02 16:17:55.118 febs [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2021-04-02 16:17:55.153 febs [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2021-04-02 16:17:55.165 febs [restartedMain] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2021-04-02 16:17:55.166 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2021-04-02 16:17:55.181 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-11101"]
2021-04-02 16:17:55.206 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 11101 (http) with context path ''
2021-04-02 16:17:55.210 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"192.168.0.103","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":11101,"scheduled":false,"serviceName":"DEFAULT_GROUP@@brd-sys2","stopped":false,"weight":1.0} to beat map.
2021-04-02 16:17:55.269 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [REGISTER-SERVICE] public registering service DEFAULT_GROUP@@brd-sys2 with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"192.168.0.103","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":11101,"weight":1.0}
2021-04-02 16:17:55.320 febs [restartedMain] INFO  c.a.c.n.r.NacosServiceRegistry - nacos registry, DEFAULT_GROUP brd-sys2 192.168.0.103:11101 register finished
2021-04-02 16:17:55.326 febs [scheduling-1] INFO  c.s.brd.sys.common.task.CacheTask - delete expired user
2021-04-02 16:17:55.470 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - Started BrdSysApplication in 9.28 seconds (JVM running for 10.386)
2021-04-02 16:17:55.473 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - Redis连接中 ······
2021-04-02 16:17:55.482 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存初始化 ······
2021-04-02 16:17:55.482 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存用户数据 ······
2021-04-02 16:17:55.535 febs [restartedMain] INFO  p6spy - 2021-04-02 16:17:55 | 耗时 17 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user;
2021-04-02 16:17:55.567 febs [restartedMain] INFO  p6spy - 2021-04-02 16:17:55 | 耗时 12 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sysadmin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 16:17:55.749 febs [restartedMain] INFO  p6spy - 2021-04-02 16:17:55 | 耗时 6 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin';
2021-04-02 16:17:55.783 febs [restartedMain] INFO  p6spy - 2021-04-02 16:17:55 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'sysadmin' and m.perms is not null and m.perms <> '';
2021-04-02 16:17:55.817 febs [restartedMain] INFO  p6spy - 2021-04-02 16:17:55 | 耗时 6 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='-1';
2021-04-02 16:17:55.876 febs [restartedMain] INFO  p6spy - 2021-04-02 16:17:55 | 耗时 55 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengcheng1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 16:17:55.937 febs [restartedMain] INFO  p6spy - 2021-04-02 16:17:55 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengcheng1';
2021-04-02 16:17:55.960 febs [restartedMain] INFO  p6spy - 2021-04-02 16:17:55 | 耗时 6 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengcheng1' and m.perms is not null and m.perms <> '';
2021-04-02 16:17:55.980 febs [restartedMain] INFO  p6spy - 2021-04-02 16:17:55 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='163';
2021-04-02 16:17:56.049 febs [restartedMain] INFO  p6spy - 2021-04-02 16:17:56 | 耗时 54 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yulin1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 16:17:56.112 febs [restartedMain] INFO  p6spy - 2021-04-02 16:17:56 | 耗时 7 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yulin1';
2021-04-02 16:17:56.133 febs [restartedMain] INFO  p6spy - 2021-04-02 16:17:56 | 耗时 6 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yulin1' and m.perms is not null and m.perms <> '';
2021-04-02 16:17:56.180 febs [restartedMain] INFO  p6spy - 2021-04-02 16:17:56 | 耗时 8 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='164';
2021-04-02 16:17:56.247 febs [restartedMain] INFO  p6spy - 2021-04-02 16:17:56 | 耗时 54 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengchengyonghu1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 16:17:56.309 febs [restartedMain] INFO  p6spy - 2021-04-02 16:17:56 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengchengyonghu1';
2021-04-02 16:17:56.328 febs [restartedMain] INFO  p6spy - 2021-04-02 16:17:56 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengchengyonghu1' and m.perms is not null and m.perms <> '';
2021-04-02 16:17:56.335 febs [restartedMain] INFO  p6spy - 2021-04-02 16:17:56 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='173';
2021-04-02 16:17:56.405 febs [restartedMain] INFO  p6spy - 2021-04-02 16:17:56 | 耗时 55 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengchengyonghu2' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 16:17:56.465 febs [restartedMain] INFO  p6spy - 2021-04-02 16:17:56 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengchengyonghu2';
2021-04-02 16:17:56.481 febs [restartedMain] INFO  p6spy - 2021-04-02 16:17:56 | 耗时 6 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengchengyonghu2' and m.perms is not null and m.perms <> '';
2021-04-02 16:17:56.489 febs [restartedMain] INFO  p6spy - 2021-04-02 16:17:56 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='174';
2021-04-02 16:17:56.556 febs [restartedMain] INFO  p6spy - 2021-04-02 16:17:56 | 耗时 54 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengcheng' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 16:17:56.619 febs [restartedMain] INFO  p6spy - 2021-04-02 16:17:56 | 耗时 6 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengcheng';
2021-04-02 16:17:56.640 febs [restartedMain] INFO  p6spy - 2021-04-02 16:17:56 | 耗时 6 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengcheng' and m.perms is not null and m.perms <> '';
2021-04-02 16:17:56.648 febs [restartedMain] INFO  p6spy - 2021-04-02 16:17:56 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='175';
2021-04-02 16:17:56.658 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2021-04-02 16:17:56.658 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2021-04-02 16:17:56.658 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2021-04-02 16:17:56.658 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -                                                       
2021-04-02 16:17:56.658 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - FEBS 启动完毕，时间：2021-04-02T16:17:56.658
2021-04-02 16:17:56.663 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2+DEFAULT_GROUP
2021-04-02 16:17:56.663 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2, group=DEFAULT_GROUP, cnt=1
2021-04-02 16:17:56.664 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2.yaml+DEFAULT_GROUP
2021-04-02 16:17:56.664 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2.yaml, group=DEFAULT_GROUP, cnt=1
2021-04-02 16:17:56.665 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2-local.yaml+DEFAULT_GROUP
2021-04-02 16:17:56.665 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2-local.yaml, group=DEFAULT_GROUP, cnt=1
2021-04-02 16:18:01.144 febs [http-nio-11101-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-04-02 16:18:01.144 febs [http-nio-11101-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2021-04-02 16:18:01.157 febs [http-nio-11101-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 13 ms
2021-04-02 16:18:01.404 febs [http-nio-11101-exec-1] INFO  p6spy - 2021-04-02 16:18:01 | 耗时 56 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-04-02 16:18:01.497 febs [http-nio-11101-exec-2] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 16:18:01.563 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-04-02 16:18:01 | 耗时 10 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin') order by m.order_num;
2021-04-02 16:18:02.536 febs [http-nio-11101-exec-5] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 16:18:02.720 febs [http-nio-11101-exec-5] INFO  p6spy - 2021-04-02 16:18:02 | 耗时 33 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 -- and u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 16:18:02.800 febs [http-nio-11101-exec-5] INFO  p6spy - 2021-04-02 16:18:02 | 耗时 65 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 -- and u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-04-02 16:18:21.564 febs [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-04-02 16:18:22.057 febs [restartedMain] INFO  c.a.n.c.c.i.LocalConfigInfoProcessor - LOCAL_SNAPSHOT_PATH:C:\Users\Dukzzz\nacos\config
2021-04-02 16:18:22.079 febs [restartedMain] INFO  c.a.nacos.client.config.impl.Limiter - limitTime:5.0
2021-04-02 16:18:22.461 febs [restartedMain] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-brd-sys2-local.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys2.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys2,DEFAULT_GROUP'}]
2021-04-02 16:18:22.480 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - The following profiles are active: local
2021-04-02 16:18:23.619 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-04-02 16:18:23.621 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-04-02 16:18:23.671 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 38ms. Found 0 Redis repository interfaces.
2021-04-02 16:18:23.961 febs [restartedMain] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=8c4fe861-2a7b-3271-bb5c-24bd86b9b2e5
2021-04-02 16:18:24.094 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [com.smart.brd.sys.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$54ae9f9a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:18:24.168 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:18:24.239 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$7160154f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:18:24.248 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:18:24.251 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:18:24.291 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [com.smart.brd.sys.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$8f6dcb96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:18:24.550 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.smart.brd.sys.common.config.RedisConfig$$EnhancerBySpringCGLIB$$20ca61ea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:18:24.566 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:18:24.568 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [com.smart.brd.sys.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:18:24.611 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:18:24.617 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [com.smart.brd.sys.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$3fcdb5bc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:18:24.620 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:18:24.627 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$459a1118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:18:24.634 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:18:24.636 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:18:24.639 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2021-04-02 16:18:24.645 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2021-04-02 16:18:24.877 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2021-04-02 16:18:24.877 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2021-04-02 16:18:24.878 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2021-04-02 16:18:24.878 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2021-04-02 16:18:24.878 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:18:24.895 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:18:24.906 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:18:25.345 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:18:25.352 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:18:25.387 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:18:25.391 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy144] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:18:25.397 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:18:25.397 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy145] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:18:25.399 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [com.smart.brd.sys.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:18:25.428 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [com.smart.brd.sys.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:18:25.445 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userTokenServiceImpl' of type [com.smart.brd.sys.system.usertoken.service.impl.UserTokenServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:18:25.449 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:18:25.450 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy148] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:18:25.451 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [com.smart.brd.sys.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:18:25.471 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:18:25.472 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy150] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:18:25.473 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [com.smart.brd.sys.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:18:25.535 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:18:25.535 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy152] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:18:25.537 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [com.smart.brd.sys.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:18:25.551 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:18:25.552 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [com.sun.proxy.$Proxy154] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:18:25.558 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:18:25.559 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy155] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:18:25.560 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [com.smart.brd.sys.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:18:25.574 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:18:25.576 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:18:25.579 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:18:25.583 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:18:25.585 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:18:25.588 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:18:25.591 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:18:25.594 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:18:25.600 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:18:25.602 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:18:25.606 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:18:25.609 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:18:25.627 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:18:25.647 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [com.smart.brd.sys.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:18:25.647 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [com.smart.brd.sys.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:18:25.648 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [com.smart.brd.sys.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:18:25.657 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:18:25.673 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:18:26.087 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 11101 (http)
2021-04-02 16:18:26.095 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-11101"]
2021-04-02 16:18:26.095 febs [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2021-04-02 16:18:26.096 febs [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.31]
2021-04-02 16:18:26.191 febs [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2021-04-02 16:18:26.191 febs [restartedMain] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3683 ms
2021-04-02 16:18:26.287 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-04-02 16:18:26.295 febs [restartedMain] INFO  c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@54607b3a
2021-04-02 16:18:26.920 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2021-04-02 16:18:26.930 febs [restartedMain] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-02 16:18:26.930 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.2 created.
2021-04-02 16:18:26.931 febs [restartedMain] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2021-04-02 16:18:26.932 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-02 16:18:26.932 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2021-04-02 16:18:26.932 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.2
2021-04-02 16:18:26.933 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@26b8d28a
2021-04-02 16:18:26.990 febs [restartedMain] INFO  p6spy - 2021-04-02 16:18:26 | 耗时 6 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2021-04-02 16:18:27.805 febs [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-04-02 16:18:27.935 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2021-04-02 16:18:28.140 febs [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2021-04-02 16:18:28.166 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-04-02 16:18:28.422 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2021-04-02 16:18:28.436 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-04-02 16:18:28.436 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Environment :null
2021-04-02 16:18:28.436 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-04-02 16:18:29.198 febs [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2021-04-02 16:18:29.209 febs [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2021-04-02 16:18:29.245 febs [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2021-04-02 16:18:29.258 febs [restartedMain] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2021-04-02 16:18:29.258 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2021-04-02 16:18:29.273 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-11101"]
2021-04-02 16:18:29.299 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 11101 (http) with context path ''
2021-04-02 16:18:29.302 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"192.168.0.103","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":11101,"scheduled":false,"serviceName":"DEFAULT_GROUP@@brd-sys2","stopped":false,"weight":1.0} to beat map.
2021-04-02 16:18:29.358 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [REGISTER-SERVICE] public registering service DEFAULT_GROUP@@brd-sys2 with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"192.168.0.103","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":11101,"weight":1.0}
2021-04-02 16:18:29.380 febs [scheduling-1] INFO  c.s.brd.sys.common.task.CacheTask - delete expired user
2021-04-02 16:18:29.432 febs [restartedMain] INFO  c.a.c.n.r.NacosServiceRegistry - nacos registry, DEFAULT_GROUP brd-sys2 192.168.0.103:11101 register finished
2021-04-02 16:18:29.622 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - Started BrdSysApplication in 8.979 seconds (JVM running for 10.14)
2021-04-02 16:18:29.626 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - Redis连接中 ······
2021-04-02 16:18:29.632 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存初始化 ······
2021-04-02 16:18:29.632 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存用户数据 ······
2021-04-02 16:18:29.678 febs [restartedMain] INFO  p6spy - 2021-04-02 16:18:29 | 耗时 13 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user;
2021-04-02 16:18:29.696 febs [restartedMain] INFO  p6spy - 2021-04-02 16:18:29 | 耗时 9 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sysadmin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 16:18:29.895 febs [restartedMain] INFO  p6spy - 2021-04-02 16:18:29 | 耗时 7 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin';
2021-04-02 16:18:29.979 febs [restartedMain] INFO  p6spy - 2021-04-02 16:18:29 | 耗时 7 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'sysadmin' and m.perms is not null and m.perms <> '';
2021-04-02 16:18:30.021 febs [restartedMain] INFO  p6spy - 2021-04-02 16:18:30 | 耗时 13 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='-1';
2021-04-02 16:18:30.083 febs [restartedMain] INFO  p6spy - 2021-04-02 16:18:30 | 耗时 56 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengcheng1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 16:18:30.150 febs [restartedMain] INFO  p6spy - 2021-04-02 16:18:30 | 耗时 6 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengcheng1';
2021-04-02 16:18:30.176 febs [restartedMain] INFO  p6spy - 2021-04-02 16:18:30 | 耗时 6 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengcheng1' and m.perms is not null and m.perms <> '';
2021-04-02 16:18:30.195 febs [restartedMain] INFO  p6spy - 2021-04-02 16:18:30 | 耗时 6 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='163';
2021-04-02 16:18:30.276 febs [restartedMain] INFO  p6spy - 2021-04-02 16:18:30 | 耗时 62 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yulin1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 16:18:30.343 febs [restartedMain] INFO  p6spy - 2021-04-02 16:18:30 | 耗时 7 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yulin1';
2021-04-02 16:18:30.370 febs [restartedMain] INFO  p6spy - 2021-04-02 16:18:30 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yulin1' and m.perms is not null and m.perms <> '';
2021-04-02 16:18:30.391 febs [restartedMain] INFO  p6spy - 2021-04-02 16:18:30 | 耗时 6 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='164';
2021-04-02 16:18:30.472 febs [restartedMain] INFO  p6spy - 2021-04-02 16:18:30 | 耗时 65 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengchengyonghu1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 16:18:30.543 febs [restartedMain] INFO  p6spy - 2021-04-02 16:18:30 | 耗时 7 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengchengyonghu1';
2021-04-02 16:18:30.573 febs [restartedMain] INFO  p6spy - 2021-04-02 16:18:30 | 耗时 7 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengchengyonghu1' and m.perms is not null and m.perms <> '';
2021-04-02 16:18:30.586 febs [restartedMain] INFO  p6spy - 2021-04-02 16:18:30 | 耗时 8 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='173';
2021-04-02 16:18:30.657 febs [restartedMain] INFO  p6spy - 2021-04-02 16:18:30 | 耗时 51 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengchengyonghu2' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 16:18:30.721 febs [restartedMain] INFO  p6spy - 2021-04-02 16:18:30 | 耗时 9 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengchengyonghu2';
2021-04-02 16:18:30.741 febs [restartedMain] INFO  p6spy - 2021-04-02 16:18:30 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengchengyonghu2' and m.perms is not null and m.perms <> '';
2021-04-02 16:18:30.753 febs [restartedMain] INFO  p6spy - 2021-04-02 16:18:30 | 耗时 10 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='174';
2021-04-02 16:18:30.824 febs [restartedMain] INFO  p6spy - 2021-04-02 16:18:30 | 耗时 55 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengcheng' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 16:18:30.895 febs [restartedMain] INFO  p6spy - 2021-04-02 16:18:30 | 耗时 11 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengcheng';
2021-04-02 16:18:31.002 febs [restartedMain] INFO  p6spy - 2021-04-02 16:18:31 | 耗时 46 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengcheng' and m.perms is not null and m.perms <> '';
2021-04-02 16:18:31.049 febs [restartedMain] INFO  p6spy - 2021-04-02 16:18:31 | 耗时 44 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='175';
2021-04-02 16:18:31.061 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2021-04-02 16:18:31.061 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2021-04-02 16:18:31.061 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2021-04-02 16:18:31.061 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -                                                       
2021-04-02 16:18:31.062 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - FEBS 启动完毕，时间：2021-04-02T16:18:31.061
2021-04-02 16:18:31.067 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2+DEFAULT_GROUP
2021-04-02 16:18:31.068 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2, group=DEFAULT_GROUP, cnt=1
2021-04-02 16:18:31.069 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2.yaml+DEFAULT_GROUP
2021-04-02 16:18:31.069 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2.yaml, group=DEFAULT_GROUP, cnt=1
2021-04-02 16:18:31.070 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2-local.yaml+DEFAULT_GROUP
2021-04-02 16:18:31.070 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2-local.yaml, group=DEFAULT_GROUP, cnt=1
2021-04-02 16:19:47.142 febs [http-nio-11101-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-04-02 16:19:47.142 febs [http-nio-11101-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2021-04-02 16:19:47.166 febs [http-nio-11101-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 23 ms
2021-04-02 16:19:47.444 febs [http-nio-11101-exec-1] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 16:19:47.746 febs [http-nio-11101-exec-1] INFO  p6spy - 2021-04-02 16:19:47 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role ) TOTAL;
2021-04-02 16:19:47.761 febs [http-nio-11101-exec-1] INFO  p6spy - 2021-04-02 16:19:47 | 耗时 6 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role LIMIT 0,10;
2021-04-02 16:19:50.243 febs [http-nio-11101-exec-2] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 16:19:50.345 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-04-02 16:19:50 | 耗时 35 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 and u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 16:19:50.406 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-04-02 16:19:50 | 耗时 56 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 and u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-04-02 16:20:05.410 febs [http-nio-11101-exec-3] INFO  c.s.b.sys.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2021-04-02 16:20:05.504 febs [http-nio-11101-exec-3] INFO  p6spy - 2021-04-02 16:20:05 | 耗时 26 ms | SQL 语句：
UPDATE t_user SET last_login_time='2021-04-02T16:20:05.434+0800', user_type=0 WHERE username = 'chengcheng1';
2021-04-02 16:20:05.563 febs [http-nio-11101-exec-3] INFO  p6spy - 2021-04-02 16:20:05 | 耗时 56 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengcheng1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 16:20:05.636 febs [http-nio-11101-exec-3] INFO  p6spy - 2021-04-02 16:20:05 | 耗时 5 ms | SQL 语句：
SELECT DEPT_ID,parent_id,type,dept_name,order_num,create_time,modify_time,dept_code,tenant_id,dept_address,longitude,latitude,province,city,county,town FROM t_dept WHERE parent_id = 140558060232900608;
2021-04-02 16:20:05.716 febs [http-nio-11101-exec-3] INFO  p6spy - 2021-04-02 16:20:05 | 耗时 53 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'chengcheng1', '2021-04-02T16:20:05.649+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1' );
2021-04-02 16:20:05.983 febs [http-nio-11101-exec-5] INFO  p6spy - 2021-04-02 16:20:05 | 耗时 91 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'chengcheng1';
2021-04-02 16:20:06.081 febs [http-nio-11101-exec-6] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 16:20:06.118 febs [http-nio-11101-exec-6] INFO  p6spy - 2021-04-02 16:20:06 | 耗时 11 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengcheng1') order by m.order_num;
2021-04-02 16:20:06.964 febs [http-nio-11101-exec-7] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 16:20:06.994 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 16:20:06 | 耗时 7 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 and (u.dept_id = 140558060232900608 or u.create_dept = 140558060232900608) and u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 16:20:07.008 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 16:20:07 | 耗时 11 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 and (u.dept_id = 140558060232900608 or u.create_dept = 140558060232900608) and u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-04-02 16:20:08.952 febs [http-nio-11101-exec-9] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 16:20:08.979 febs [http-nio-11101-exec-9] INFO  p6spy - 2021-04-02 16:20:08 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role WHERE create_dept = 140558060232900608 ) TOTAL;
2021-04-02 16:20:08.985 febs [http-nio-11101-exec-9] INFO  p6spy - 2021-04-02 16:20:08 | 耗时 5 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role WHERE create_dept = 140558060232900608 LIMIT 0,10;
2021-04-02 16:20:09.912 febs [http-nio-11101-exec-8] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 16:20:09.943 febs [http-nio-11101-exec-8] INFO  p6spy - 2021-04-02 16:20:09 | 耗时 9 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 and (u.dept_id = 140558060232900608 or u.create_dept = 140558060232900608) and u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 16:20:09.957 febs [http-nio-11101-exec-8] INFO  p6spy - 2021-04-02 16:20:09 | 耗时 11 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 and (u.dept_id = 140558060232900608 or u.create_dept = 140558060232900608) and u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-04-02 16:20:15.210 febs [http-nio-11101-exec-11] INFO  c.s.b.sys.common.aspect.LimitAspect - IP:127.0.0.1 第 2 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2021-04-02 16:20:15.246 febs [http-nio-11101-exec-11] INFO  p6spy - 2021-04-02 16:20:15 | 耗时 11 ms | SQL 语句：
UPDATE t_user SET last_login_time='2021-04-02T16:20:15.229+0800', user_type=0 WHERE username = 'sysadmin';
2021-04-02 16:20:15.309 febs [http-nio-11101-exec-11] INFO  p6spy - 2021-04-02 16:20:15 | 耗时 59 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sysadmin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 16:20:15.390 febs [http-nio-11101-exec-11] INFO  p6spy - 2021-04-02 16:20:15 | 耗时 11 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'sysadmin', '2021-04-02T16:20:15.375+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1' );
2021-04-02 16:20:15.454 febs [http-nio-11101-exec-11] INFO  p6spy - 2021-04-02 16:20:15 | 耗时 6 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='-1';
2021-04-02 16:20:15.490 febs [http-nio-11101-exec-15] INFO  p6spy - 2021-04-02 16:20:15 | 耗时 14 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-04-02 16:20:15.818 febs [http-nio-11101-exec-13] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 16:20:15.836 febs [http-nio-11101-exec-13] INFO  p6spy - 2021-04-02 16:20:15 | 耗时 11 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin') order by m.order_num;
2021-04-02 16:20:16.107 febs [http-nio-11101-exec-14] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 16:20:16.121 febs [http-nio-11101-exec-14] INFO  p6spy - 2021-04-02 16:20:16 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 and u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 16:20:16.162 febs [http-nio-11101-exec-14] INFO  p6spy - 2021-04-02 16:20:16 | 耗时 39 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 and u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-04-02 16:22:52.037 febs [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-04-02 16:22:52.453 febs [restartedMain] INFO  c.a.n.c.c.i.LocalConfigInfoProcessor - LOCAL_SNAPSHOT_PATH:C:\Users\Dukzzz\nacos\config
2021-04-02 16:22:52.474 febs [restartedMain] INFO  c.a.nacos.client.config.impl.Limiter - limitTime:5.0
2021-04-02 16:22:53.907 febs [restartedMain] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-brd-sys2-local.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys2.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys2,DEFAULT_GROUP'}]
2021-04-02 16:22:53.922 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - The following profiles are active: local
2021-04-02 16:22:55.105 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-04-02 16:22:55.107 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-04-02 16:22:55.176 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 55ms. Found 0 Redis repository interfaces.
2021-04-02 16:22:55.466 febs [restartedMain] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=8c4fe861-2a7b-3271-bb5c-24bd86b9b2e5
2021-04-02 16:22:55.613 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [com.smart.brd.sys.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$629c5a99] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:22:55.688 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:22:55.758 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$7f4dd04e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:22:55.765 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:22:55.769 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:22:55.805 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [com.smart.brd.sys.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$9d5b8695] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:22:56.065 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.smart.brd.sys.common.config.RedisConfig$$EnhancerBySpringCGLIB$$2eb81ce9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:22:56.084 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:22:56.088 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [com.smart.brd.sys.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:22:56.130 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:22:56.137 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [com.smart.brd.sys.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$4dbb70bb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:22:56.140 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:22:56.147 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$5387cc17] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:22:56.165 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:22:56.168 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:22:56.172 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2021-04-02 16:22:56.179 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2021-04-02 16:22:59.360 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2021-04-02 16:22:59.361 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2021-04-02 16:22:59.362 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2021-04-02 16:22:59.362 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2021-04-02 16:22:59.363 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:22:59.394 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:22:59.412 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:23:00.444 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:23:00.457 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:23:00.521 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:23:00.528 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy144] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:23:00.541 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:23:00.544 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy145] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:23:00.547 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [com.smart.brd.sys.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:23:00.593 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [com.smart.brd.sys.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:23:00.626 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userTokenServiceImpl' of type [com.smart.brd.sys.system.usertoken.service.impl.UserTokenServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:23:00.635 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:23:00.638 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy148] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:23:00.640 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [com.smart.brd.sys.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:23:00.688 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:23:00.713 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy150] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:23:00.724 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [com.smart.brd.sys.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:23:00.842 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:23:00.845 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy152] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:23:00.847 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [com.smart.brd.sys.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:23:00.881 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:23:00.884 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [com.sun.proxy.$Proxy154] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:23:00.895 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:23:00.897 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy155] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:23:00.901 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [com.smart.brd.sys.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:23:00.926 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:23:00.931 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:23:00.937 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:23:00.949 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:23:00.952 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:23:00.961 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:23:00.969 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:23:00.976 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:23:00.993 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:23:00.998 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:23:01.007 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:23:01.015 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:23:01.074 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:23:01.115 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [com.smart.brd.sys.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:23:01.115 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [com.smart.brd.sys.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:23:01.116 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [com.smart.brd.sys.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:23:01.136 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:23:01.162 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:23:02.153 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 11101 (http)
2021-04-02 16:23:02.175 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-11101"]
2021-04-02 16:23:02.176 febs [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2021-04-02 16:23:02.177 febs [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.31]
2021-04-02 16:23:02.419 febs [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2021-04-02 16:23:02.420 febs [restartedMain] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 8464 ms
2021-04-02 16:23:02.612 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-04-02 16:23:02.629 febs [restartedMain] INFO  c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@4ae40cad
2021-04-02 16:23:04.165 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2021-04-02 16:23:04.192 febs [restartedMain] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-02 16:23:04.192 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.2 created.
2021-04-02 16:23:04.193 febs [restartedMain] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2021-04-02 16:23:04.195 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-02 16:23:04.195 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2021-04-02 16:23:04.195 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.2
2021-04-02 16:23:04.195 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@11d88135
2021-04-02 16:23:05.152 febs [restartedMain] INFO  p6spy - 2021-04-02 16:23:05 | 耗时 135 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2021-04-02 16:23:07.183 febs [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-04-02 16:23:07.488 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2021-04-02 16:23:07.906 febs [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2021-04-02 16:23:07.984 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-04-02 16:23:08.597 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2021-04-02 16:23:08.636 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-04-02 16:23:08.637 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Environment :null
2021-04-02 16:23:08.638 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-04-02 16:23:10.570 febs [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2021-04-02 16:23:10.596 febs [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2021-04-02 16:23:10.685 febs [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2021-04-02 16:23:10.714 febs [restartedMain] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2021-04-02 16:23:10.714 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2021-04-02 16:23:10.752 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-11101"]
2021-04-02 16:23:10.816 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 11101 (http) with context path ''
2021-04-02 16:23:10.824 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"192.168.0.103","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":11101,"scheduled":false,"serviceName":"DEFAULT_GROUP@@brd-sys2","stopped":false,"weight":1.0} to beat map.
2021-04-02 16:23:10.975 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [REGISTER-SERVICE] public registering service DEFAULT_GROUP@@brd-sys2 with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"192.168.0.103","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":11101,"weight":1.0}
2021-04-02 16:23:11.076 febs [scheduling-1] INFO  c.s.brd.sys.common.task.CacheTask - delete expired user
2021-04-02 16:23:11.217 febs [restartedMain] INFO  c.a.c.n.r.NacosServiceRegistry - nacos registry, DEFAULT_GROUP brd-sys2 192.168.0.103:11101 register finished
2021-04-02 16:23:11.598 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - Started BrdSysApplication in 20.618 seconds (JVM running for 21.941)
2021-04-02 16:23:11.607 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - Redis连接中 ······
2021-04-02 16:23:11.668 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存初始化 ······
2021-04-02 16:23:11.669 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存用户数据 ······
2021-04-02 16:23:11.968 febs [restartedMain] INFO  p6spy - 2021-04-02 16:23:11 | 耗时 183 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user;
2021-04-02 16:23:12.054 febs [restartedMain] INFO  p6spy - 2021-04-02 16:23:12 | 耗时 67 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sysadmin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 16:23:12.351 febs [restartedMain] INFO  p6spy - 2021-04-02 16:23:12 | 耗时 23 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin';
2021-04-02 16:23:12.552 febs [restartedMain] INFO  p6spy - 2021-04-02 16:23:12 | 耗时 16 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'sysadmin' and m.perms is not null and m.perms <> '';
2021-04-02 16:23:12.715 febs [restartedMain] INFO  p6spy - 2021-04-02 16:23:12 | 耗时 86 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='-1';
2021-04-02 16:23:12.824 febs [restartedMain] INFO  p6spy - 2021-04-02 16:23:12 | 耗时 104 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengcheng1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 16:23:12.914 febs [restartedMain] INFO  p6spy - 2021-04-02 16:23:12 | 耗时 10 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengcheng1';
2021-04-02 16:23:12.964 febs [restartedMain] INFO  p6spy - 2021-04-02 16:23:12 | 耗时 21 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengcheng1' and m.perms is not null and m.perms <> '';
2021-04-02 16:23:13.097 febs [restartedMain] INFO  p6spy - 2021-04-02 16:23:13 | 耗时 11 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='163';
2021-04-02 16:23:13.232 febs [restartedMain] INFO  p6spy - 2021-04-02 16:23:13 | 耗时 57 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yulin1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 16:23:13.398 febs [restartedMain] INFO  p6spy - 2021-04-02 16:23:13 | 耗时 32 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yulin1';
2021-04-02 16:23:13.488 febs [restartedMain] INFO  p6spy - 2021-04-02 16:23:13 | 耗时 54 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yulin1' and m.perms is not null and m.perms <> '';
2021-04-02 16:23:13.739 febs [restartedMain] INFO  p6spy - 2021-04-02 16:23:13 | 耗时 32 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='164';
2021-04-02 16:23:13.847 febs [restartedMain] INFO  p6spy - 2021-04-02 16:23:13 | 耗时 64 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengchengyonghu1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 16:23:14.095 febs [restartedMain] INFO  p6spy - 2021-04-02 16:23:14 | 耗时 27 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengchengyonghu1';
2021-04-02 16:23:14.354 febs [restartedMain] INFO  p6spy - 2021-04-02 16:23:14 | 耗时 40 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengchengyonghu1' and m.perms is not null and m.perms <> '';
2021-04-02 16:23:14.381 febs [restartedMain] INFO  p6spy - 2021-04-02 16:23:14 | 耗时 21 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='173';
2021-04-02 16:23:14.569 febs [restartedMain] INFO  p6spy - 2021-04-02 16:23:14 | 耗时 99 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengchengyonghu2' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 16:23:14.664 febs [restartedMain] INFO  p6spy - 2021-04-02 16:23:14 | 耗时 15 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengchengyonghu2';
2021-04-02 16:23:14.812 febs [restartedMain] INFO  p6spy - 2021-04-02 16:23:14 | 耗时 15 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengchengyonghu2' and m.perms is not null and m.perms <> '';
2021-04-02 16:23:14.830 febs [restartedMain] INFO  p6spy - 2021-04-02 16:23:14 | 耗时 11 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='174';
2021-04-02 16:23:14.946 febs [restartedMain] INFO  p6spy - 2021-04-02 16:23:14 | 耗时 81 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengcheng' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 16:23:15.062 febs [restartedMain] INFO  p6spy - 2021-04-02 16:23:15 | 耗时 14 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengcheng';
2021-04-02 16:23:15.124 febs [restartedMain] INFO  p6spy - 2021-04-02 16:23:15 | 耗时 16 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengcheng' and m.perms is not null and m.perms <> '';
2021-04-02 16:23:15.164 febs [restartedMain] INFO  p6spy - 2021-04-02 16:23:15 | 耗时 38 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='175';
2021-04-02 16:23:15.228 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2021-04-02 16:23:15.228 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2021-04-02 16:23:15.228 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2021-04-02 16:23:15.228 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -                                                       
2021-04-02 16:23:15.228 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - FEBS 启动完毕，时间：2021-04-02T16:23:15.228
2021-04-02 16:23:15.235 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2+DEFAULT_GROUP
2021-04-02 16:23:15.236 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2, group=DEFAULT_GROUP, cnt=1
2021-04-02 16:23:15.237 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2.yaml+DEFAULT_GROUP
2021-04-02 16:23:15.237 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2.yaml, group=DEFAULT_GROUP, cnt=1
2021-04-02 16:23:15.238 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2-local.yaml+DEFAULT_GROUP
2021-04-02 16:23:15.238 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2-local.yaml, group=DEFAULT_GROUP, cnt=1
2021-04-02 16:23:31.332 febs [http-nio-11101-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-04-02 16:23:31.332 febs [http-nio-11101-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2021-04-02 16:23:31.344 febs [http-nio-11101-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 12 ms
2021-04-02 16:23:31.799 febs [http-nio-11101-exec-1] INFO  p6spy - 2021-04-02 16:23:31 | 耗时 121 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-04-02 16:23:31.982 febs [http-nio-11101-exec-2] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 16:23:32.146 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-04-02 16:23:32 | 耗时 45 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin') order by m.order_num;
2021-04-02 16:23:32.802 febs [http-nio-11101-exec-3] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 16:23:33.313 febs [http-nio-11101-exec-3] INFO  p6spy - 2021-04-02 16:23:33 | 耗时 57 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 -- and u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 16:23:33.400 febs [http-nio-11101-exec-3] INFO  p6spy - 2021-04-02 16:23:33 | 耗时 72 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 -- and u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-04-02 16:23:33.948 febs [http-nio-11101-exec-4] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 16:23:34.079 febs [http-nio-11101-exec-4] INFO  p6spy - 2021-04-02 16:23:34 | 耗时 77 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role ) TOTAL;
2021-04-02 16:23:34.092 febs [http-nio-11101-exec-4] INFO  p6spy - 2021-04-02 16:23:34 | 耗时 10 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role LIMIT 0,10;
2021-04-02 16:23:36.136 febs [http-nio-11101-exec-5] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 16:23:36.279 febs [http-nio-11101-exec-5] INFO  p6spy - 2021-04-02 16:23:36 | 耗时 93 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu ORDER BY order_num ASC;
2021-04-02 16:23:36.293 febs [http-nio-11101-exec-6] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 16:23:36.382 febs [http-nio-11101-exec-6] INFO  p6spy - 2021-04-02 16:23:36 | 耗时 64 ms | SQL 语句：
SELECT role_id,menu_id FROM t_role_menu WHERE role_id = '-1';
2021-04-02 16:23:47.876 febs [http-nio-11101-exec-7] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 16:23:48.004 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 16:23:48 | 耗时 11 ms | SQL 语句：
SELECT user_id,role_id FROM t_user_role WHERE role_id IN ('-1');
2021-04-02 16:23:48.039 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 16:23:48 | 耗时 21 ms | SQL 语句：
UPDATE t_role SET modify_time='2021-04-02T16:23:48.006+0800' WHERE ROLE_ID=-1;
2021-04-02 16:23:48.075 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 16:23:48 | 耗时 24 ms | SQL 语句：
DELETE FROM t_role_menu WHERE role_id = -1;
2021-04-02 16:23:48.100 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 16:23:48 | 耗时 21 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 5 );
2021-04-02 16:23:48.131 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 16:23:48 | 耗时 28 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9033 );
2021-04-02 16:23:48.180 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 16:23:48 | 耗时 46 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9034 );
2021-04-02 16:23:48.216 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 16:23:48 | 耗时 31 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9023 );
2021-04-02 16:23:48.254 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 16:23:48 | 耗时 33 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9024 );
2021-04-02 16:23:48.283 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 16:23:48 | 耗时 24 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 2 );
2021-04-02 16:23:48.308 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 16:23:48 | 耗时 20 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9027 );
2021-04-02 16:23:48.330 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 16:23:48 | 耗时 18 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9028 );
2021-04-02 16:23:48.350 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 16:23:48 | 耗时 18 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 12 );
2021-04-02 16:23:48.391 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 16:23:48 | 耗时 36 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9047 );
2021-04-02 16:23:48.432 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 16:23:48 | 耗时 36 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 13 );
2021-04-02 16:23:48.495 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 16:23:48 | 耗时 26 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9048 );
2021-04-02 16:23:48.530 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 16:23:48 | 耗时 32 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9 );
2021-04-02 16:23:49.117 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 16:23:49 | 耗时 582 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9044 );
2021-04-02 16:23:49.144 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 16:23:49 | 耗时 24 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 10 );
2021-04-02 16:23:49.176 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 16:23:49 | 耗时 27 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9045 );
2021-04-02 16:23:49.508 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 16:23:49 | 耗时 330 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 3 );
2021-04-02 16:23:49.534 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 16:23:49 | 耗时 24 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9029 );
2021-04-02 16:23:49.555 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 16:23:49 | 耗时 19 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9030 );
2021-04-02 16:23:49.579 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 16:23:49 | 耗时 22 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9031 );
2021-04-02 16:23:49.599 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 16:23:49 | 耗时 18 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 4 );
2021-04-02 16:23:49.629 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 16:23:49 | 耗时 27 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9032 );
2021-04-02 16:23:49.651 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 16:23:49 | 耗时 20 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 11 );
2021-04-02 16:23:49.676 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 16:23:49 | 耗时 22 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9046 );
2021-04-02 16:23:49.700 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 16:23:49 | 耗时 20 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 14 );
2021-04-02 16:23:49.745 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 16:23:49 | 耗时 41 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9049 );
2021-04-02 16:23:49.774 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 16:23:49 | 耗时 25 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9050 );
2021-04-02 16:23:49.798 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 16:23:49 | 耗时 21 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9051 );
2021-04-02 16:23:49.826 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 16:23:49 | 耗时 25 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9052 );
2021-04-02 16:23:49.854 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 16:23:49 | 耗时 26 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9053 );
2021-04-02 16:23:49.880 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 16:23:49 | 耗时 24 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9054 );
2021-04-02 16:23:49.903 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 16:23:49 | 耗时 21 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9025 );
2021-04-02 16:23:49.953 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 16:23:49 | 耗时 47 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 1 );
2021-04-02 16:23:49.975 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 16:23:49 | 耗时 18 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 6 );
2021-04-02 16:23:50.019 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 16:23:50 | 耗时 41 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9035 );
2021-04-02 16:23:50.083 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 16:23:50 | 耗时 61 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9036 );
2021-04-02 16:23:50.104 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 16:23:50 | 耗时 19 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9037 );
2021-04-02 16:23:50.142 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 16:23:50 | 耗时 33 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 7 );
2021-04-02 16:23:50.169 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 16:23:50 | 耗时 23 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9038 );
2021-04-02 16:23:50.214 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 16:23:50 | 耗时 40 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9039 );
2021-04-02 16:23:50.307 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 16:23:50 | 耗时 90 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9040 );
2021-04-02 16:23:50.331 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 16:23:50 | 耗时 20 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 8 );
2021-04-02 16:23:50.415 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 16:23:50 | 耗时 81 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9041 );
2021-04-02 16:23:50.450 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 16:23:50 | 耗时 31 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9042 );
2021-04-02 16:23:50.474 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 16:23:50 | 耗时 20 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9043 );
2021-04-02 16:23:50.588 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 16:23:50 | 耗时 110 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9057 );
2021-04-02 16:23:51.177 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 16:23:51 | 耗时 584 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE USER_ID='-1';
2021-04-02 16:23:51.207 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 16:23:51 | 耗时 24 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin';
2021-04-02 16:23:51.400 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 16:23:51 | 耗时 24 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'sysadmin' and m.perms is not null and m.perms <> '';
2021-04-02 16:23:51.584 febs [asyncTaskExecutor-1] INFO  p6spy - 2021-04-02 16:23:51 | 耗时 75 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'sysadmin', '修改角色', 3537, 'com.smart.brd.sys.system.controller.RoleController.updateRole()', ' request: org.apache.shiro.web.servlet.ShiroHttpServletRequest@3fcd4a65 role: "Role(roleId=-1, roleName=null, remark=null, createTime=null, modifyTime=Fri Apr 02 16:23:48 CST 2021, createDept=null, createTimeFrom=null, createTimeTo=null, menuId=5,9033,9034,9023,9024,2,9027,9028,12,9047,13,9048,9,9044,10,9045,3,9029,9030,9031,4,9032,11,9046,14,9049,9050,9051,9052,9053,9054,9025,1,6,9035,9036,9037,7,9038,9039,9040,8,9041,9042,9043,9057)"', '127.0.0.1', '2021-04-02T16:23:51.492+0800', '内网IP|0|0|内网IP|内网IP' );
2021-04-02 16:23:52.909 febs [http-nio-11101-exec-8] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 16:23:52.988 febs [http-nio-11101-exec-8] INFO  p6spy - 2021-04-02 16:23:52 | 耗时 46 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role ) TOTAL;
2021-04-02 16:23:53.047 febs [http-nio-11101-exec-8] INFO  p6spy - 2021-04-02 16:23:53 | 耗时 57 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role LIMIT 0,10;
2021-04-02 16:25:24.306 febs [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-04-02 16:25:24.728 febs [restartedMain] INFO  c.a.n.c.c.i.LocalConfigInfoProcessor - LOCAL_SNAPSHOT_PATH:C:\Users\Dukzzz\nacos\config
2021-04-02 16:25:24.751 febs [restartedMain] INFO  c.a.nacos.client.config.impl.Limiter - limitTime:5.0
2021-04-02 16:25:26.302 febs [restartedMain] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-brd-sys2-local.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys2.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys2,DEFAULT_GROUP'}]
2021-04-02 16:25:26.320 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - The following profiles are active: local
2021-04-02 16:25:27.431 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-04-02 16:25:27.434 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-04-02 16:25:27.486 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 39ms. Found 0 Redis repository interfaces.
2021-04-02 16:25:27.756 febs [restartedMain] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=8c4fe861-2a7b-3271-bb5c-24bd86b9b2e5
2021-04-02 16:25:27.916 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [com.smart.brd.sys.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$378751b9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:25:27.985 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:25:28.051 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$5438c76e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:25:28.058 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:25:28.061 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:25:28.096 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [com.smart.brd.sys.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$72467db5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:25:28.374 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.smart.brd.sys.common.config.RedisConfig$$EnhancerBySpringCGLIB$$3a31409] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:25:28.391 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:25:28.394 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [com.smart.brd.sys.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:25:28.437 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:25:28.443 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [com.smart.brd.sys.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$22a667db] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:25:28.446 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:25:28.452 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$2872c337] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:25:28.459 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:25:28.461 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:25:28.464 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2021-04-02 16:25:28.469 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2021-04-02 16:25:33.988 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2021-04-02 16:25:33.989 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2021-04-02 16:25:33.989 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2021-04-02 16:25:33.989 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2021-04-02 16:25:33.990 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:25:34.016 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:25:34.029 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:25:34.488 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:25:34.495 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:25:34.522 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:25:34.525 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy144] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:25:34.531 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:25:34.532 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy145] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:25:34.533 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [com.smart.brd.sys.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:25:34.560 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [com.smart.brd.sys.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:25:34.575 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userTokenServiceImpl' of type [com.smart.brd.sys.system.usertoken.service.impl.UserTokenServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:25:34.580 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:25:34.581 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy148] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:25:34.582 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [com.smart.brd.sys.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:25:34.600 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:25:34.601 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy150] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:25:34.602 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [com.smart.brd.sys.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:25:34.645 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:25:34.646 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy152] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:25:34.647 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [com.smart.brd.sys.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:25:34.661 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:25:34.662 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [com.sun.proxy.$Proxy154] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:25:34.665 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:25:34.666 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy155] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:25:34.669 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [com.smart.brd.sys.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:25:34.682 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:25:34.683 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:25:34.686 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:25:34.691 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:25:34.692 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:25:34.695 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:25:34.698 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:25:34.701 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:25:34.707 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:25:34.709 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:25:34.713 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:25:34.715 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:25:34.733 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:25:34.749 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [com.smart.brd.sys.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:25:34.749 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [com.smart.brd.sys.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:25:34.750 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [com.smart.brd.sys.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:25:34.759 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:25:34.774 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:25:35.188 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 11101 (http)
2021-04-02 16:25:35.196 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-11101"]
2021-04-02 16:25:35.197 febs [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2021-04-02 16:25:35.197 febs [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.31]
2021-04-02 16:25:35.301 febs [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2021-04-02 16:25:35.301 febs [restartedMain] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 8945 ms
2021-04-02 16:25:35.415 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-04-02 16:25:35.423 febs [restartedMain] INFO  c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@45b732f0
2021-04-02 16:25:36.032 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2021-04-02 16:25:36.045 febs [restartedMain] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-02 16:25:36.045 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.2 created.
2021-04-02 16:25:36.046 febs [restartedMain] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2021-04-02 16:25:36.047 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-02 16:25:36.047 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2021-04-02 16:25:36.048 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.2
2021-04-02 16:25:36.048 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@546a64a5
2021-04-02 16:25:36.212 febs [restartedMain] INFO  p6spy - 2021-04-02 16:25:36 | 耗时 37 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2021-04-02 16:25:37.054 febs [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-04-02 16:25:37.211 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2021-04-02 16:25:37.410 febs [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2021-04-02 16:25:37.435 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-04-02 16:25:37.677 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2021-04-02 16:25:37.691 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-04-02 16:25:37.691 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Environment :null
2021-04-02 16:25:37.691 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-04-02 16:25:38.484 febs [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2021-04-02 16:25:38.496 febs [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2021-04-02 16:25:38.530 febs [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2021-04-02 16:25:38.544 febs [restartedMain] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2021-04-02 16:25:38.544 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2021-04-02 16:25:38.561 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-11101"]
2021-04-02 16:25:38.586 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 11101 (http) with context path ''
2021-04-02 16:25:38.590 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"192.168.0.103","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":11101,"scheduled":false,"serviceName":"DEFAULT_GROUP@@brd-sys2","stopped":false,"weight":1.0} to beat map.
2021-04-02 16:25:38.653 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [REGISTER-SERVICE] public registering service DEFAULT_GROUP@@brd-sys2 with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"192.168.0.103","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":11101,"weight":1.0}
2021-04-02 16:25:39.002 febs [restartedMain] INFO  c.a.c.n.r.NacosServiceRegistry - nacos registry, DEFAULT_GROUP brd-sys2 192.168.0.103:11101 register finished
2021-04-02 16:25:39.039 febs [scheduling-1] INFO  c.s.brd.sys.common.task.CacheTask - delete expired user
2021-04-02 16:25:39.150 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - Started BrdSysApplication in 15.817 seconds (JVM running for 16.977)
2021-04-02 16:25:39.154 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - Redis连接中 ······
2021-04-02 16:25:39.193 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存初始化 ······
2021-04-02 16:25:39.193 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存用户数据 ······
2021-04-02 16:25:39.608 febs [restartedMain] INFO  p6spy - 2021-04-02 16:25:39 | 耗时 82 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user;
2021-04-02 16:25:39.721 febs [restartedMain] INFO  p6spy - 2021-04-02 16:25:39 | 耗时 89 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sysadmin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 16:25:40.075 febs [restartedMain] INFO  p6spy - 2021-04-02 16:25:40 | 耗时 93 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin';
2021-04-02 16:25:40.224 febs [restartedMain] INFO  p6spy - 2021-04-02 16:25:40 | 耗时 92 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'sysadmin' and m.perms is not null and m.perms <> '';
2021-04-02 16:25:40.283 febs [restartedMain] INFO  p6spy - 2021-04-02 16:25:40 | 耗时 19 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='-1';
2021-04-02 16:25:40.388 febs [restartedMain] INFO  p6spy - 2021-04-02 16:25:40 | 耗时 101 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengcheng1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 16:25:40.532 febs [restartedMain] INFO  p6spy - 2021-04-02 16:25:40 | 耗时 20 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengcheng1';
2021-04-02 16:25:40.781 febs [restartedMain] INFO  p6spy - 2021-04-02 16:25:40 | 耗时 27 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengcheng1' and m.perms is not null and m.perms <> '';
2021-04-02 16:25:41.152 febs [restartedMain] INFO  p6spy - 2021-04-02 16:25:41 | 耗时 174 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='163';
2021-04-02 16:25:41.515 febs [restartedMain] INFO  p6spy - 2021-04-02 16:25:41 | 耗时 151 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yulin1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 16:25:41.765 febs [restartedMain] INFO  p6spy - 2021-04-02 16:25:41 | 耗时 36 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yulin1';
2021-04-02 16:25:42.176 febs [restartedMain] INFO  p6spy - 2021-04-02 16:25:42 | 耗时 324 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yulin1' and m.perms is not null and m.perms <> '';
2021-04-02 16:25:42.427 febs [restartedMain] INFO  p6spy - 2021-04-02 16:25:42 | 耗时 107 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='164';
2021-04-02 16:25:42.744 febs [restartedMain] INFO  p6spy - 2021-04-02 16:25:42 | 耗时 135 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengchengyonghu1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 16:25:43.162 febs [restartedMain] INFO  p6spy - 2021-04-02 16:25:43 | 耗时 61 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengchengyonghu1';
2021-04-02 16:25:43.367 febs [restartedMain] INFO  p6spy - 2021-04-02 16:25:43 | 耗时 27 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengchengyonghu1' and m.perms is not null and m.perms <> '';
2021-04-02 16:25:43.393 febs [restartedMain] INFO  p6spy - 2021-04-02 16:25:43 | 耗时 24 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='173';
2021-04-02 16:25:43.719 febs [restartedMain] INFO  p6spy - 2021-04-02 16:25:43 | 耗时 177 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengchengyonghu2' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 16:25:44.486 febs [restartedMain] INFO  p6spy - 2021-04-02 16:25:44 | 耗时 112 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengchengyonghu2';
2021-04-02 16:25:44.693 febs [restartedMain] INFO  p6spy - 2021-04-02 16:25:44 | 耗时 143 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengchengyonghu2' and m.perms is not null and m.perms <> '';
2021-04-02 16:25:44.735 febs [restartedMain] INFO  p6spy - 2021-04-02 16:25:44 | 耗时 38 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='174';
2021-04-02 16:25:45.134 febs [restartedMain] INFO  p6spy - 2021-04-02 16:25:45 | 耗时 160 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengcheng' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 16:25:45.284 febs [restartedMain] INFO  p6spy - 2021-04-02 16:25:45 | 耗时 29 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengcheng';
2021-04-02 16:25:45.478 febs [restartedMain] INFO  p6spy - 2021-04-02 16:25:45 | 耗时 93 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengcheng' and m.perms is not null and m.perms <> '';
2021-04-02 16:25:45.506 febs [restartedMain] INFO  p6spy - 2021-04-02 16:25:45 | 耗时 24 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='175';
2021-04-02 16:25:45.563 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2021-04-02 16:25:45.564 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2021-04-02 16:25:45.564 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2021-04-02 16:25:45.564 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -                                                       
2021-04-02 16:25:45.564 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - FEBS 启动完毕，时间：2021-04-02T16:25:45.564
2021-04-02 16:25:45.574 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2+DEFAULT_GROUP
2021-04-02 16:25:45.576 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2, group=DEFAULT_GROUP, cnt=1
2021-04-02 16:25:45.576 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2.yaml+DEFAULT_GROUP
2021-04-02 16:25:45.577 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2.yaml, group=DEFAULT_GROUP, cnt=1
2021-04-02 16:25:45.577 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2-local.yaml+DEFAULT_GROUP
2021-04-02 16:25:45.577 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2-local.yaml, group=DEFAULT_GROUP, cnt=1
2021-04-02 16:28:29.747 febs [http-nio-11101-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-04-02 16:28:29.748 febs [http-nio-11101-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2021-04-02 16:28:29.760 febs [http-nio-11101-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 12 ms
2021-04-02 16:28:29.995 febs [http-nio-11101-exec-1] INFO  p6spy - 2021-04-02 16:28:29 | 耗时 57 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-04-02 16:28:30.223 febs [http-nio-11101-exec-3] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 16:28:30.287 febs [http-nio-11101-exec-3] INFO  p6spy - 2021-04-02 16:28:30 | 耗时 16 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin') order by m.order_num;
2021-04-02 16:28:30.871 febs [http-nio-11101-exec-4] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 16:28:30.960 febs [http-nio-11101-exec-4] INFO  p6spy - 2021-04-02 16:28:30 | 耗时 23 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role ) TOTAL;
2021-04-02 16:28:30.974 febs [http-nio-11101-exec-4] INFO  p6spy - 2021-04-02 16:28:30 | 耗时 5 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role LIMIT 0,10;
2021-04-02 16:28:33.788 febs [http-nio-11101-exec-2] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 16:28:33.833 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-04-02 16:28:33 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 and u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 16:28:33.845 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-04-02 16:28:33 | 耗时 10 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 and u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-04-02 16:28:36.010 febs [http-nio-11101-exec-5] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 16:28:36.025 febs [http-nio-11101-exec-5] INFO  p6spy - 2021-04-02 16:28:36 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role ) TOTAL;
2021-04-02 16:28:36.031 febs [http-nio-11101-exec-5] INFO  p6spy - 2021-04-02 16:28:36 | 耗时 5 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role LIMIT 0,10;
2021-04-02 16:30:45.384 febs [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-04-02 16:30:45.799 febs [restartedMain] INFO  c.a.n.c.c.i.LocalConfigInfoProcessor - LOCAL_SNAPSHOT_PATH:C:\Users\Dukzzz\nacos\config
2021-04-02 16:30:45.820 febs [restartedMain] INFO  c.a.nacos.client.config.impl.Limiter - limitTime:5.0
2021-04-02 16:30:46.179 febs [restartedMain] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-brd-sys2-local.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys2.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys2,DEFAULT_GROUP'}]
2021-04-02 16:30:46.197 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - The following profiles are active: local
2021-04-02 16:30:47.333 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-04-02 16:30:47.336 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-04-02 16:30:47.381 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 34ms. Found 0 Redis repository interfaces.
2021-04-02 16:30:47.640 febs [restartedMain] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=8c4fe861-2a7b-3271-bb5c-24bd86b9b2e5
2021-04-02 16:30:47.773 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [com.smart.brd.sys.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$850ad0fd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:30:47.859 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:30:47.932 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$a1bc46b2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:30:47.940 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:30:47.944 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:30:47.985 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [com.smart.brd.sys.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$bfc9fcf9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:30:48.239 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.smart.brd.sys.common.config.RedisConfig$$EnhancerBySpringCGLIB$$5126934d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:30:48.254 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:30:48.256 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [com.smart.brd.sys.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:30:48.301 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:30:48.307 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [com.smart.brd.sys.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$7029e71f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:30:48.312 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:30:48.317 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$75f6427b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:30:48.325 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:30:48.327 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:30:48.329 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2021-04-02 16:30:48.335 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2021-04-02 16:30:48.572 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2021-04-02 16:30:48.573 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2021-04-02 16:30:48.573 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2021-04-02 16:30:48.573 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2021-04-02 16:30:48.573 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:30:48.594 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:30:48.606 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:30:49.171 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:30:49.178 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:30:49.211 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:30:49.213 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy144] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:30:49.219 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:30:49.220 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy145] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:30:49.222 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [com.smart.brd.sys.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:30:49.253 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [com.smart.brd.sys.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:30:49.269 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userTokenServiceImpl' of type [com.smart.brd.sys.system.usertoken.service.impl.UserTokenServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:30:49.273 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:30:49.274 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy148] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:30:49.275 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [com.smart.brd.sys.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:30:49.295 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:30:49.296 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy150] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:30:49.297 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [com.smart.brd.sys.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:30:49.358 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:30:49.359 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy152] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:30:49.360 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [com.smart.brd.sys.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:30:49.373 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:30:49.374 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [com.sun.proxy.$Proxy154] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:30:49.379 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:30:49.380 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy155] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:30:49.382 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [com.smart.brd.sys.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:30:49.397 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:30:49.400 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:30:49.402 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:30:49.407 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:30:49.408 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:30:49.412 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:30:49.416 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:30:49.419 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:30:49.425 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:30:49.427 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:30:49.432 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:30:49.435 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:30:49.453 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:30:49.469 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [com.smart.brd.sys.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:30:49.470 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [com.smart.brd.sys.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:30:49.471 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [com.smart.brd.sys.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:30:49.478 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:30:49.495 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:30:49.958 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 11101 (http)
2021-04-02 16:30:49.972 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-11101"]
2021-04-02 16:30:49.972 febs [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2021-04-02 16:30:49.973 febs [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.31]
2021-04-02 16:30:50.088 febs [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2021-04-02 16:30:50.088 febs [restartedMain] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3857 ms
2021-04-02 16:30:50.225 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-04-02 16:30:50.243 febs [restartedMain] INFO  c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3ed8ec89
2021-04-02 16:30:50.992 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2021-04-02 16:30:51.002 febs [restartedMain] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-02 16:30:51.003 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.2 created.
2021-04-02 16:30:51.003 febs [restartedMain] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2021-04-02 16:30:51.004 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-02 16:30:51.004 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2021-04-02 16:30:51.004 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.2
2021-04-02 16:30:51.005 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@37c93260
2021-04-02 16:30:51.063 febs [restartedMain] INFO  p6spy - 2021-04-02 16:30:51 | 耗时 6 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2021-04-02 16:30:51.893 febs [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-04-02 16:30:52.023 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2021-04-02 16:30:52.242 febs [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2021-04-02 16:30:52.270 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-04-02 16:30:52.536 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2021-04-02 16:30:52.551 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-04-02 16:30:52.551 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Environment :null
2021-04-02 16:30:52.551 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-04-02 16:30:53.328 febs [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2021-04-02 16:30:53.338 febs [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2021-04-02 16:30:53.376 febs [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2021-04-02 16:30:53.390 febs [restartedMain] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2021-04-02 16:30:53.390 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2021-04-02 16:30:53.406 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-11101"]
2021-04-02 16:30:53.432 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 11101 (http) with context path ''
2021-04-02 16:30:53.435 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"192.168.0.103","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":11101,"scheduled":false,"serviceName":"DEFAULT_GROUP@@brd-sys2","stopped":false,"weight":1.0} to beat map.
2021-04-02 16:30:53.495 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [REGISTER-SERVICE] public registering service DEFAULT_GROUP@@brd-sys2 with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"192.168.0.103","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":11101,"weight":1.0}
2021-04-02 16:30:53.520 febs [scheduling-1] INFO  c.s.brd.sys.common.task.CacheTask - delete expired user
2021-04-02 16:30:53.581 febs [restartedMain] INFO  c.a.c.n.r.NacosServiceRegistry - nacos registry, DEFAULT_GROUP brd-sys2 192.168.0.103:11101 register finished
2021-04-02 16:30:53.738 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - Started BrdSysApplication in 9.367 seconds (JVM running for 10.659)
2021-04-02 16:30:53.742 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - Redis连接中 ······
2021-04-02 16:30:53.747 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存初始化 ······
2021-04-02 16:30:53.747 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存用户数据 ······
2021-04-02 16:30:53.795 febs [restartedMain] INFO  p6spy - 2021-04-02 16:30:53 | 耗时 15 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user;
2021-04-02 16:30:53.827 febs [restartedMain] INFO  p6spy - 2021-04-02 16:30:53 | 耗时 13 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sysadmin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 16:30:54.050 febs [restartedMain] INFO  p6spy - 2021-04-02 16:30:54 | 耗时 29 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin';
2021-04-02 16:30:54.155 febs [restartedMain] INFO  p6spy - 2021-04-02 16:30:54 | 耗时 45 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'sysadmin' and m.perms is not null and m.perms <> '';
2021-04-02 16:30:54.297 febs [restartedMain] INFO  p6spy - 2021-04-02 16:30:54 | 耗时 23 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='-1';
2021-04-02 16:30:54.359 febs [restartedMain] INFO  p6spy - 2021-04-02 16:30:54 | 耗时 58 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengcheng1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 16:30:54.438 febs [restartedMain] INFO  p6spy - 2021-04-02 16:30:54 | 耗时 6 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengcheng1';
2021-04-02 16:30:54.463 febs [restartedMain] INFO  p6spy - 2021-04-02 16:30:54 | 耗时 6 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengcheng1' and m.perms is not null and m.perms <> '';
2021-04-02 16:30:54.486 febs [restartedMain] INFO  p6spy - 2021-04-02 16:30:54 | 耗时 6 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='163';
2021-04-02 16:30:54.562 febs [restartedMain] INFO  p6spy - 2021-04-02 16:30:54 | 耗时 56 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yulin1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 16:30:54.624 febs [restartedMain] INFO  p6spy - 2021-04-02 16:30:54 | 耗时 6 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yulin1';
2021-04-02 16:30:54.647 febs [restartedMain] INFO  p6spy - 2021-04-02 16:30:54 | 耗时 6 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yulin1' and m.perms is not null and m.perms <> '';
2021-04-02 16:30:54.672 febs [restartedMain] INFO  p6spy - 2021-04-02 16:30:54 | 耗时 7 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='164';
2021-04-02 16:30:54.745 febs [restartedMain] INFO  p6spy - 2021-04-02 16:30:54 | 耗时 57 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengchengyonghu1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 16:30:54.801 febs [restartedMain] INFO  p6spy - 2021-04-02 16:30:54 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengchengyonghu1';
2021-04-02 16:30:54.821 febs [restartedMain] INFO  p6spy - 2021-04-02 16:30:54 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengchengyonghu1' and m.perms is not null and m.perms <> '';
2021-04-02 16:30:54.827 febs [restartedMain] INFO  p6spy - 2021-04-02 16:30:54 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='173';
2021-04-02 16:30:54.893 febs [restartedMain] INFO  p6spy - 2021-04-02 16:30:54 | 耗时 54 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengchengyonghu2' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 16:30:54.955 febs [restartedMain] INFO  p6spy - 2021-04-02 16:30:54 | 耗时 6 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengchengyonghu2';
2021-04-02 16:30:54.977 febs [restartedMain] INFO  p6spy - 2021-04-02 16:30:54 | 耗时 6 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengchengyonghu2' and m.perms is not null and m.perms <> '';
2021-04-02 16:30:54.989 febs [restartedMain] INFO  p6spy - 2021-04-02 16:30:54 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='174';
2021-04-02 16:30:55.056 febs [restartedMain] INFO  p6spy - 2021-04-02 16:30:55 | 耗时 52 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengcheng' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 16:30:55.116 febs [restartedMain] INFO  p6spy - 2021-04-02 16:30:55 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengcheng';
2021-04-02 16:30:55.135 febs [restartedMain] INFO  p6spy - 2021-04-02 16:30:55 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengcheng' and m.perms is not null and m.perms <> '';
2021-04-02 16:30:55.143 febs [restartedMain] INFO  p6spy - 2021-04-02 16:30:55 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='175';
2021-04-02 16:30:55.156 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2021-04-02 16:30:55.156 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2021-04-02 16:30:55.156 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2021-04-02 16:30:55.156 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -                                                       
2021-04-02 16:30:55.157 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - FEBS 启动完毕，时间：2021-04-02T16:30:55.156
2021-04-02 16:30:55.162 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2+DEFAULT_GROUP
2021-04-02 16:30:55.163 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2, group=DEFAULT_GROUP, cnt=1
2021-04-02 16:30:55.164 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2.yaml+DEFAULT_GROUP
2021-04-02 16:30:55.164 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2.yaml, group=DEFAULT_GROUP, cnt=1
2021-04-02 16:30:55.164 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2-local.yaml+DEFAULT_GROUP
2021-04-02 16:30:55.164 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2-local.yaml, group=DEFAULT_GROUP, cnt=1
2021-04-02 16:41:43.872 febs [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-04-02 16:41:44.346 febs [restartedMain] INFO  c.a.n.c.c.i.LocalConfigInfoProcessor - LOCAL_SNAPSHOT_PATH:C:\Users\Dukzzz\nacos\config
2021-04-02 16:41:44.371 febs [restartedMain] INFO  c.a.nacos.client.config.impl.Limiter - limitTime:5.0
2021-04-02 16:41:44.773 febs [restartedMain] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-brd-sys2-local.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys2.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys2,DEFAULT_GROUP'}]
2021-04-02 16:41:44.788 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - The following profiles are active: local
2021-04-02 16:41:45.914 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-04-02 16:41:45.916 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-04-02 16:41:45.967 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 37ms. Found 0 Redis repository interfaces.
2021-04-02 16:41:46.339 febs [restartedMain] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=8c4fe861-2a7b-3271-bb5c-24bd86b9b2e5
2021-04-02 16:41:46.514 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [com.smart.brd.sys.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$dae1b21e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:41:46.613 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:41:46.687 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$f79327d3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:41:46.705 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:41:46.710 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:41:46.752 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [com.smart.brd.sys.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$15a0de1a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:41:47.055 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.smart.brd.sys.common.config.RedisConfig$$EnhancerBySpringCGLIB$$a6fd746e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:41:47.071 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:41:47.074 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [com.smart.brd.sys.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:41:47.116 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:41:47.123 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [com.smart.brd.sys.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$c600c840] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:41:47.126 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:41:47.137 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$cbcd239c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:41:47.150 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:41:47.152 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:41:47.155 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2021-04-02 16:41:47.161 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2021-04-02 16:41:47.390 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2021-04-02 16:41:47.390 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2021-04-02 16:41:47.390 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2021-04-02 16:41:47.390 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2021-04-02 16:41:47.391 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:41:47.401 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:41:47.409 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:41:47.886 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:41:47.893 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:41:47.934 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:41:47.936 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy144] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:41:47.943 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:41:47.944 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy145] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:41:47.945 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [com.smart.brd.sys.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:41:47.972 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [com.smart.brd.sys.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:41:47.986 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userTokenServiceImpl' of type [com.smart.brd.sys.system.usertoken.service.impl.UserTokenServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:41:47.990 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:41:47.991 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy148] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:41:47.992 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [com.smart.brd.sys.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:41:48.011 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:41:48.012 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy150] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:41:48.013 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [com.smart.brd.sys.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:41:48.055 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:41:48.056 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy152] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:41:48.057 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [com.smart.brd.sys.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:41:48.071 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:41:48.072 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [com.sun.proxy.$Proxy154] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:41:48.078 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:41:48.079 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy155] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:41:48.080 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [com.smart.brd.sys.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:41:48.094 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:41:48.096 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:41:48.099 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:41:48.104 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:41:48.105 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:41:48.108 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:41:48.112 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:41:48.115 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:41:48.121 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:41:48.123 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:41:48.128 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:41:48.130 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:41:48.149 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:41:48.165 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [com.smart.brd.sys.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:41:48.165 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [com.smart.brd.sys.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:41:48.166 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [com.smart.brd.sys.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:41:48.174 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:41:48.190 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 16:41:48.585 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 11101 (http)
2021-04-02 16:41:48.600 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-11101"]
2021-04-02 16:41:48.600 febs [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2021-04-02 16:41:48.601 febs [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.31]
2021-04-02 16:41:48.693 febs [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2021-04-02 16:41:48.695 febs [restartedMain] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3883 ms
2021-04-02 16:41:48.808 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-04-02 16:41:48.819 febs [restartedMain] INFO  c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3092934b
2021-04-02 16:41:49.422 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2021-04-02 16:41:49.431 febs [restartedMain] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-02 16:41:49.432 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.2 created.
2021-04-02 16:41:49.432 febs [restartedMain] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2021-04-02 16:41:49.433 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-02 16:41:49.433 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2021-04-02 16:41:49.433 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.2
2021-04-02 16:41:49.433 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@40ed293e
2021-04-02 16:41:49.510 febs [restartedMain] INFO  p6spy - 2021-04-02 16:41:49 | 耗时 6 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2021-04-02 16:41:49.952 febs [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2021-04-02 16:41:50.326 febs [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-04-02 16:41:50.467 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2021-04-02 16:41:50.662 febs [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2021-04-02 16:41:50.690 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-04-02 16:41:50.942 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2021-04-02 16:41:50.956 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-04-02 16:41:50.956 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Environment :null
2021-04-02 16:41:50.956 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-04-02 16:41:51.817 febs [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2021-04-02 16:41:51.827 febs [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2021-04-02 16:41:51.876 febs [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2021-04-02 16:41:51.903 febs [restartedMain] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2021-04-02 16:41:51.904 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2021-04-02 16:41:51.941 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-11101"]
2021-04-02 16:41:51.967 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 11101 (http) with context path ''
2021-04-02 16:41:51.971 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"192.168.0.103","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":11101,"scheduled":false,"serviceName":"DEFAULT_GROUP@@brd-sys2","stopped":false,"weight":1.0} to beat map.
2021-04-02 16:41:52.052 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [REGISTER-SERVICE] public registering service DEFAULT_GROUP@@brd-sys2 with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"192.168.0.103","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":11101,"weight":1.0}
2021-04-02 16:41:52.064 febs [scheduling-1] INFO  c.s.brd.sys.common.task.CacheTask - delete expired user
2021-04-02 16:41:52.164 febs [restartedMain] INFO  c.a.c.n.r.NacosServiceRegistry - nacos registry, DEFAULT_GROUP brd-sys2 192.168.0.103:11101 register finished
2021-04-02 16:41:52.385 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - Started BrdSysApplication in 9.501 seconds (JVM running for 10.532)
2021-04-02 16:41:52.390 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - Redis连接中 ······
2021-04-02 16:41:52.396 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存初始化 ······
2021-04-02 16:41:52.396 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存用户数据 ······
2021-04-02 16:41:52.501 febs [restartedMain] INFO  p6spy - 2021-04-02 16:41:52 | 耗时 9 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user;
2021-04-02 16:41:52.526 febs [restartedMain] INFO  p6spy - 2021-04-02 16:41:52 | 耗时 10 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sysadmin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 16:41:52.703 febs [restartedMain] INFO  p6spy - 2021-04-02 16:41:52 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin';
2021-04-02 16:41:52.740 febs [restartedMain] INFO  p6spy - 2021-04-02 16:41:52 | 耗时 6 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'sysadmin' and m.perms is not null and m.perms <> '';
2021-04-02 16:41:52.767 febs [restartedMain] INFO  p6spy - 2021-04-02 16:41:52 | 耗时 4 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='-1';
2021-04-02 16:41:52.822 febs [restartedMain] INFO  p6spy - 2021-04-02 16:41:52 | 耗时 52 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengcheng1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 16:41:52.882 febs [restartedMain] INFO  p6spy - 2021-04-02 16:41:52 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengcheng1';
2021-04-02 16:41:52.900 febs [restartedMain] INFO  p6spy - 2021-04-02 16:41:52 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengcheng1' and m.perms is not null and m.perms <> '';
2021-04-02 16:41:52.919 febs [restartedMain] INFO  p6spy - 2021-04-02 16:41:52 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='163';
2021-04-02 16:41:52.986 febs [restartedMain] INFO  p6spy - 2021-04-02 16:41:52 | 耗时 53 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yulin1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 16:41:53.059 febs [restartedMain] INFO  p6spy - 2021-04-02 16:41:53 | 耗时 10 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yulin1';
2021-04-02 16:41:53.078 febs [restartedMain] INFO  p6spy - 2021-04-02 16:41:53 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yulin1' and m.perms is not null and m.perms <> '';
2021-04-02 16:41:53.094 febs [restartedMain] INFO  p6spy - 2021-04-02 16:41:53 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='164';
2021-04-02 16:41:53.160 febs [restartedMain] INFO  p6spy - 2021-04-02 16:41:53 | 耗时 52 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengchengyonghu1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 16:41:53.222 febs [restartedMain] INFO  p6spy - 2021-04-02 16:41:53 | 耗时 6 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengchengyonghu1';
2021-04-02 16:41:53.239 febs [restartedMain] INFO  p6spy - 2021-04-02 16:41:53 | 耗时 6 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengchengyonghu1' and m.perms is not null and m.perms <> '';
2021-04-02 16:41:53.247 febs [restartedMain] INFO  p6spy - 2021-04-02 16:41:53 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='173';
2021-04-02 16:41:53.313 febs [restartedMain] INFO  p6spy - 2021-04-02 16:41:53 | 耗时 53 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengchengyonghu2' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 16:41:53.378 febs [restartedMain] INFO  p6spy - 2021-04-02 16:41:53 | 耗时 6 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengchengyonghu2';
2021-04-02 16:41:53.394 febs [restartedMain] INFO  p6spy - 2021-04-02 16:41:53 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengchengyonghu2' and m.perms is not null and m.perms <> '';
2021-04-02 16:41:53.401 febs [restartedMain] INFO  p6spy - 2021-04-02 16:41:53 | 耗时 4 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='174';
2021-04-02 16:41:53.464 febs [restartedMain] INFO  p6spy - 2021-04-02 16:41:53 | 耗时 52 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengcheng' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 16:41:53.523 febs [restartedMain] INFO  p6spy - 2021-04-02 16:41:53 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengcheng';
2021-04-02 16:41:53.540 febs [restartedMain] INFO  p6spy - 2021-04-02 16:41:53 | 耗时 6 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengcheng' and m.perms is not null and m.perms <> '';
2021-04-02 16:41:53.546 febs [restartedMain] INFO  p6spy - 2021-04-02 16:41:53 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='175';
2021-04-02 16:41:53.609 febs [restartedMain] INFO  p6spy - 2021-04-02 16:41:53 | 耗时 53 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yulinyonghu1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 16:41:53.668 febs [restartedMain] INFO  p6spy - 2021-04-02 16:41:53 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yulinyonghu1';
2021-04-02 16:41:53.684 febs [restartedMain] INFO  p6spy - 2021-04-02 16:41:53 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yulinyonghu1' and m.perms is not null and m.perms <> '';
2021-04-02 16:41:53.690 febs [restartedMain] INFO  p6spy - 2021-04-02 16:41:53 | 耗时 4 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='178';
2021-04-02 16:41:53.754 febs [restartedMain] INFO  p6spy - 2021-04-02 16:41:53 | 耗时 52 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yulinyonghu2' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 16:41:53.813 febs [restartedMain] INFO  p6spy - 2021-04-02 16:41:53 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yulinyonghu2';
2021-04-02 16:41:53.831 febs [restartedMain] INFO  p6spy - 2021-04-02 16:41:53 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yulinyonghu2' and m.perms is not null and m.perms <> '';
2021-04-02 16:41:53.837 febs [restartedMain] INFO  p6spy - 2021-04-02 16:41:53 | 耗时 4 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='179';
2021-04-02 16:41:53.847 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2021-04-02 16:41:53.847 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2021-04-02 16:41:53.848 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2021-04-02 16:41:53.848 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -                                                       
2021-04-02 16:41:53.848 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - FEBS 启动完毕，时间：2021-04-02T16:41:53.848
2021-04-02 16:41:53.852 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2+DEFAULT_GROUP
2021-04-02 16:41:53.853 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2, group=DEFAULT_GROUP, cnt=1
2021-04-02 16:41:53.854 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2.yaml+DEFAULT_GROUP
2021-04-02 16:41:53.854 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2.yaml, group=DEFAULT_GROUP, cnt=1
2021-04-02 16:41:53.854 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2-local.yaml+DEFAULT_GROUP
2021-04-02 16:41:53.854 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2-local.yaml, group=DEFAULT_GROUP, cnt=1
2021-04-02 16:42:45.662 febs [http-nio-11101-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-04-02 16:42:45.662 febs [http-nio-11101-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2021-04-02 16:42:45.694 febs [http-nio-11101-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 32 ms
2021-04-02 16:42:45.920 febs [http-nio-11101-exec-1] INFO  p6spy - 2021-04-02 16:42:45 | 耗时 55 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-04-02 16:42:46.018 febs [http-nio-11101-exec-2] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 16:42:46.096 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-04-02 16:42:46 | 耗时 20 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin') order by m.order_num;
2021-04-02 16:43:32.292 febs [http-nio-11101-exec-3] INFO  p6spy - 2021-04-02 16:43:32 | 耗时 64 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-04-02 16:43:32.345 febs [http-nio-11101-exec-4] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 16:43:32.363 febs [http-nio-11101-exec-4] INFO  p6spy - 2021-04-02 16:43:32 | 耗时 11 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin') order by m.order_num;
2021-04-02 16:43:54.963 febs [http-nio-11101-exec-5] INFO  p6spy - 2021-04-02 16:43:54 | 耗时 12 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-04-02 16:43:55.021 febs [http-nio-11101-exec-6] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 16:43:55.039 febs [http-nio-11101-exec-6] INFO  p6spy - 2021-04-02 16:43:55 | 耗时 11 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin') order by m.order_num;
2021-04-02 16:44:02.671 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 16:44:02 | 耗时 62 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-04-02 16:44:02.726 febs [http-nio-11101-exec-8] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 16:44:02.743 febs [http-nio-11101-exec-8] INFO  p6spy - 2021-04-02 16:44:02 | 耗时 11 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin') order by m.order_num;
2021-04-02 16:49:12.015 febs [http-nio-11101-exec-9] INFO  p6spy - 2021-04-02 16:49:12 | 耗时 68 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-04-02 16:49:12.320 febs [http-nio-11101-exec-10] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 16:49:12.351 febs [http-nio-11101-exec-10] INFO  p6spy - 2021-04-02 16:49:12 | 耗时 26 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin') order by m.order_num;
2021-04-02 16:54:30.426 febs [http-nio-11101-exec-11] INFO  p6spy - 2021-04-02 16:54:30 | 耗时 60 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-04-02 16:54:30.578 febs [http-nio-11101-exec-12] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 16:54:30.591 febs [http-nio-11101-exec-12] INFO  p6spy - 2021-04-02 16:54:30 | 耗时 10 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin') order by m.order_num;
2021-04-02 16:58:32.502 febs [http-nio-11101-exec-14] INFO  p6spy - 2021-04-02 16:58:32 | 耗时 52 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-04-02 16:58:32.654 febs [http-nio-11101-exec-15] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 16:58:32.713 febs [http-nio-11101-exec-15] INFO  p6spy - 2021-04-02 16:58:32 | 耗时 55 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin') order by m.order_num;
2021-04-02 16:59:48.317 febs [http-nio-11101-exec-13] INFO  p6spy - 2021-04-02 16:59:48 | 耗时 91 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-04-02 16:59:48.469 febs [http-nio-11101-exec-16] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 16:59:48.520 febs [http-nio-11101-exec-16] INFO  p6spy - 2021-04-02 16:59:48 | 耗时 48 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin') order by m.order_num;
2021-04-02 17:06:43.992 febs [http-nio-11101-exec-17] INFO  p6spy - 2021-04-02 17:06:43 | 耗时 64 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-04-02 17:06:44.145 febs [http-nio-11101-exec-18] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 17:06:44.206 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-02 17:06:44 | 耗时 55 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin') order by m.order_num;
2021-04-02 17:09:00.737 febs [http-nio-11101-exec-19] INFO  p6spy - 2021-04-02 17:09:00 | 耗时 52 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-04-02 17:09:00.925 febs [http-nio-11101-exec-20] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 17:09:00.942 febs [http-nio-11101-exec-20] INFO  p6spy - 2021-04-02 17:09:00 | 耗时 14 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin') order by m.order_num;
2021-04-02 17:10:33.243 febs [http-nio-11101-exec-21] INFO  p6spy - 2021-04-02 17:10:33 | 耗时 60 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-04-02 17:10:33.403 febs [http-nio-11101-exec-22] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 17:10:33.513 febs [http-nio-11101-exec-22] INFO  p6spy - 2021-04-02 17:10:33 | 耗时 108 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin') order by m.order_num;
2021-04-02 17:17:55.925 febs [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-04-02 17:17:56.371 febs [restartedMain] INFO  c.a.n.c.c.i.LocalConfigInfoProcessor - LOCAL_SNAPSHOT_PATH:C:\Users\Dukzzz\nacos\config
2021-04-02 17:17:56.392 febs [restartedMain] INFO  c.a.nacos.client.config.impl.Limiter - limitTime:5.0
2021-04-02 17:17:56.799 febs [restartedMain] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-brd-sys2-local.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys2.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys2,DEFAULT_GROUP'}]
2021-04-02 17:17:56.814 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - The following profiles are active: local
2021-04-02 17:17:58.067 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-04-02 17:17:58.070 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-04-02 17:17:58.120 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 35ms. Found 0 Redis repository interfaces.
2021-04-02 17:17:58.398 febs [restartedMain] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=8c4fe861-2a7b-3271-bb5c-24bd86b9b2e5
2021-04-02 17:17:58.531 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [com.smart.brd.sys.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$423f1efe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:17:58.602 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:17:58.677 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$5ef094b3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:17:58.685 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:17:58.688 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:17:58.728 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [com.smart.brd.sys.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$7cfe4afa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:17:58.976 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.smart.brd.sys.common.config.RedisConfig$$EnhancerBySpringCGLIB$$e5ae14e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:17:58.991 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:17:58.993 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [com.smart.brd.sys.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:17:59.036 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:17:59.042 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [com.smart.brd.sys.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$2d5e3520] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:17:59.045 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:17:59.051 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$332a907c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:17:59.058 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:17:59.060 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:17:59.063 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2021-04-02 17:17:59.068 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2021-04-02 17:17:59.311 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2021-04-02 17:17:59.311 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2021-04-02 17:17:59.311 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2021-04-02 17:17:59.311 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2021-04-02 17:17:59.311 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:17:59.336 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:17:59.353 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:17:59.891 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:17:59.898 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:17:59.929 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:17:59.931 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy144] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:17:59.937 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:17:59.939 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy145] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:17:59.940 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [com.smart.brd.sys.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:17:59.969 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [com.smart.brd.sys.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:18:00.003 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userTokenServiceImpl' of type [com.smart.brd.sys.system.usertoken.service.impl.UserTokenServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:18:00.010 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:18:00.011 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy148] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:18:00.012 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [com.smart.brd.sys.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:18:00.034 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:18:00.035 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy150] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:18:00.036 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [com.smart.brd.sys.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:18:00.084 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:18:00.085 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy152] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:18:00.086 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [com.smart.brd.sys.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:18:00.100 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:18:00.101 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [com.sun.proxy.$Proxy154] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:18:00.107 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:18:00.108 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy155] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:18:00.109 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [com.smart.brd.sys.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:18:00.125 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:18:00.127 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:18:00.130 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:18:00.136 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:18:00.137 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:18:00.141 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:18:00.144 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:18:00.148 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:18:00.155 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:18:00.157 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:18:00.161 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:18:00.164 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:18:00.184 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:18:00.201 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [com.smart.brd.sys.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:18:00.202 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [com.smart.brd.sys.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:18:00.202 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [com.smart.brd.sys.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:18:00.210 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:18:00.227 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:18:00.703 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 11101 (http)
2021-04-02 17:18:00.713 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-11101"]
2021-04-02 17:18:00.714 febs [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2021-04-02 17:18:00.714 febs [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.31]
2021-04-02 17:18:00.819 febs [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2021-04-02 17:18:00.820 febs [restartedMain] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3972 ms
2021-04-02 17:18:01.047 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-04-02 17:18:01.069 febs [restartedMain] INFO  c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@38343ffc
2021-04-02 17:18:02.351 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2021-04-02 17:18:02.380 febs [restartedMain] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-02 17:18:02.380 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.2 created.
2021-04-02 17:18:02.382 febs [restartedMain] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2021-04-02 17:18:02.384 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-02 17:18:02.385 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2021-04-02 17:18:02.385 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.2
2021-04-02 17:18:02.385 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@5d41872
2021-04-02 17:18:02.501 febs [restartedMain] INFO  p6spy - 2021-04-02 17:18:02 | 耗时 5 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2021-04-02 17:18:04.280 febs [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-04-02 17:18:04.584 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2021-04-02 17:18:04.953 febs [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2021-04-02 17:18:05.017 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-04-02 17:18:05.576 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2021-04-02 17:18:05.627 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-04-02 17:18:05.628 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Environment :null
2021-04-02 17:18:05.629 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-04-02 17:18:07.296 febs [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2021-04-02 17:18:07.317 febs [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2021-04-02 17:18:07.370 febs [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2021-04-02 17:18:07.387 febs [restartedMain] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2021-04-02 17:18:07.387 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2021-04-02 17:18:07.412 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-11101"]
2021-04-02 17:18:07.450 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 11101 (http) with context path ''
2021-04-02 17:18:07.455 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"192.168.0.103","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":11101,"scheduled":false,"serviceName":"DEFAULT_GROUP@@brd-sys2","stopped":false,"weight":1.0} to beat map.
2021-04-02 17:18:07.544 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [REGISTER-SERVICE] public registering service DEFAULT_GROUP@@brd-sys2 with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"192.168.0.103","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":11101,"weight":1.0}
2021-04-02 17:18:07.556 febs [scheduling-1] INFO  c.s.brd.sys.common.task.CacheTask - delete expired user
2021-04-02 17:18:07.660 febs [restartedMain] INFO  c.a.c.n.r.NacosServiceRegistry - nacos registry, DEFAULT_GROUP brd-sys2 192.168.0.103:11101 register finished
2021-04-02 17:18:08.000 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - Started BrdSysApplication in 13.26 seconds (JVM running for 14.393)
2021-04-02 17:18:08.007 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - Redis连接中 ······
2021-04-02 17:18:08.013 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存初始化 ······
2021-04-02 17:18:08.013 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存用户数据 ······
2021-04-02 17:18:08.116 febs [restartedMain] INFO  p6spy - 2021-04-02 17:18:08 | 耗时 9 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user;
2021-04-02 17:18:08.137 febs [restartedMain] INFO  p6spy - 2021-04-02 17:18:08 | 耗时 10 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sysadmin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 17:18:08.350 febs [restartedMain] INFO  p6spy - 2021-04-02 17:18:08 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin';
2021-04-02 17:18:08.396 febs [restartedMain] INFO  p6spy - 2021-04-02 17:18:08 | 耗时 6 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'sysadmin' and m.perms is not null and m.perms <> '';
2021-04-02 17:18:08.432 febs [restartedMain] INFO  p6spy - 2021-04-02 17:18:08 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='-1';
2021-04-02 17:18:08.492 febs [restartedMain] INFO  p6spy - 2021-04-02 17:18:08 | 耗时 56 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengcheng1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 17:18:08.554 febs [restartedMain] INFO  p6spy - 2021-04-02 17:18:08 | 耗时 6 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengcheng1';
2021-04-02 17:18:08.617 febs [restartedMain] INFO  p6spy - 2021-04-02 17:18:08 | 耗时 46 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengcheng1' and m.perms is not null and m.perms <> '';
2021-04-02 17:18:08.723 febs [restartedMain] INFO  p6spy - 2021-04-02 17:18:08 | 耗时 6 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='163';
2021-04-02 17:18:08.798 febs [restartedMain] INFO  p6spy - 2021-04-02 17:18:08 | 耗时 54 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yulin1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 17:18:08.858 febs [restartedMain] INFO  p6spy - 2021-04-02 17:18:08 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yulin1';
2021-04-02 17:18:08.877 febs [restartedMain] INFO  p6spy - 2021-04-02 17:18:08 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yulin1' and m.perms is not null and m.perms <> '';
2021-04-02 17:18:08.896 febs [restartedMain] INFO  p6spy - 2021-04-02 17:18:08 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='164';
2021-04-02 17:18:08.964 febs [restartedMain] INFO  p6spy - 2021-04-02 17:18:08 | 耗时 54 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengchengyonghu1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 17:18:09.052 febs [restartedMain] INFO  p6spy - 2021-04-02 17:18:09 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengchengyonghu1';
2021-04-02 17:18:09.073 febs [restartedMain] INFO  p6spy - 2021-04-02 17:18:09 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengchengyonghu1' and m.perms is not null and m.perms <> '';
2021-04-02 17:18:09.082 febs [restartedMain] INFO  p6spy - 2021-04-02 17:18:09 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='173';
2021-04-02 17:18:09.147 febs [restartedMain] INFO  p6spy - 2021-04-02 17:18:09 | 耗时 52 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengchengyonghu2' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 17:18:09.209 febs [restartedMain] INFO  p6spy - 2021-04-02 17:18:09 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengchengyonghu2';
2021-04-02 17:18:09.227 febs [restartedMain] INFO  p6spy - 2021-04-02 17:18:09 | 耗时 6 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengchengyonghu2' and m.perms is not null and m.perms <> '';
2021-04-02 17:18:09.236 febs [restartedMain] INFO  p6spy - 2021-04-02 17:18:09 | 耗时 6 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='174';
2021-04-02 17:18:09.302 febs [restartedMain] INFO  p6spy - 2021-04-02 17:18:09 | 耗时 53 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengcheng' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 17:18:09.362 febs [restartedMain] INFO  p6spy - 2021-04-02 17:18:09 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengcheng';
2021-04-02 17:18:09.381 febs [restartedMain] INFO  p6spy - 2021-04-02 17:18:09 | 耗时 6 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengcheng' and m.perms is not null and m.perms <> '';
2021-04-02 17:18:09.391 febs [restartedMain] INFO  p6spy - 2021-04-02 17:18:09 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='175';
2021-04-02 17:18:09.459 febs [restartedMain] INFO  p6spy - 2021-04-02 17:18:09 | 耗时 54 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yulinyonghu1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 17:18:09.529 febs [restartedMain] INFO  p6spy - 2021-04-02 17:18:09 | 耗时 7 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yulinyonghu1';
2021-04-02 17:18:09.551 febs [restartedMain] INFO  p6spy - 2021-04-02 17:18:09 | 耗时 7 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yulinyonghu1' and m.perms is not null and m.perms <> '';
2021-04-02 17:18:09.562 febs [restartedMain] INFO  p6spy - 2021-04-02 17:18:09 | 耗时 8 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='178';
2021-04-02 17:18:09.633 febs [restartedMain] INFO  p6spy - 2021-04-02 17:18:09 | 耗时 55 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yulinyonghu2' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 17:18:09.699 febs [restartedMain] INFO  p6spy - 2021-04-02 17:18:09 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yulinyonghu2';
2021-04-02 17:18:09.721 febs [restartedMain] INFO  p6spy - 2021-04-02 17:18:09 | 耗时 6 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yulinyonghu2' and m.perms is not null and m.perms <> '';
2021-04-02 17:18:09.730 febs [restartedMain] INFO  p6spy - 2021-04-02 17:18:09 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='179';
2021-04-02 17:18:09.801 febs [restartedMain] INFO  p6spy - 2021-04-02 17:18:09 | 耗时 54 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'heyang1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 17:18:09.861 febs [restartedMain] INFO  p6spy - 2021-04-02 17:18:09 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'heyang1';
2021-04-02 17:18:09.882 febs [restartedMain] INFO  p6spy - 2021-04-02 17:18:09 | 耗时 6 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'heyang1' and m.perms is not null and m.perms <> '';
2021-04-02 17:18:09.899 febs [restartedMain] INFO  p6spy - 2021-04-02 17:18:09 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='180';
2021-04-02 17:18:09.911 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2021-04-02 17:18:09.911 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2021-04-02 17:18:09.911 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2021-04-02 17:18:09.911 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -                                                       
2021-04-02 17:18:09.911 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - FEBS 启动完毕，时间：2021-04-02T17:18:09.911
2021-04-02 17:18:09.916 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2+DEFAULT_GROUP
2021-04-02 17:18:09.917 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2, group=DEFAULT_GROUP, cnt=1
2021-04-02 17:18:09.918 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2.yaml+DEFAULT_GROUP
2021-04-02 17:18:09.918 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2.yaml, group=DEFAULT_GROUP, cnt=1
2021-04-02 17:18:09.918 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2-local.yaml+DEFAULT_GROUP
2021-04-02 17:18:09.918 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2-local.yaml, group=DEFAULT_GROUP, cnt=1
2021-04-02 17:18:57.079 febs [http-nio-11101-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-04-02 17:18:57.079 febs [http-nio-11101-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2021-04-02 17:18:57.092 febs [http-nio-11101-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 13 ms
2021-04-02 17:18:59.752 febs [http-nio-11101-exec-2] INFO  c.s.b.sys.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2021-04-02 17:18:59.924 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-04-02 17:18:59 | 耗时 10 ms | SQL 语句：
UPDATE t_user SET last_login_time='2021-04-02T17:18:59.870+0800', user_type=0 WHERE username = 'sysadmin';
2021-04-02 17:18:59.980 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-04-02 17:18:59 | 耗时 54 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sysadmin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 17:19:00.091 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-04-02 17:19:00 | 耗时 10 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'sysadmin', '2021-04-02T17:19:00.067+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1' );
2021-04-02 17:19:00.282 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-04-02 17:19:00 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='-1';
2021-04-02 17:19:00.424 febs [http-nio-11101-exec-3] INFO  p6spy - 2021-04-02 17:19:00 | 耗时 60 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-04-02 17:19:00.804 febs [http-nio-11101-exec-4] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 17:19:00.896 febs [http-nio-11101-exec-4] INFO  p6spy - 2021-04-02 17:19:00 | 耗时 12 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin') order by m.order_num;
2021-04-02 17:19:42.894 febs [http-nio-11101-exec-5] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 17:19:42.996 febs [http-nio-11101-exec-5] INFO  p6spy - 2021-04-02 17:19:42 | 耗时 29 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 and u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 17:19:43.073 febs [http-nio-11101-exec-5] INFO  p6spy - 2021-04-02 17:19:43 | 耗时 64 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 and u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-04-02 17:19:48.776 febs [http-nio-11101-exec-6] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 17:19:48.797 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 17:19:48 | 耗时 11 ms | SQL 语句：
SELECT DEPT_ID,parent_id,type,dept_name,order_num,create_time,modify_time,dept_code,tenant_id,dept_address,longitude,latitude,province,city,county,town FROM t_dept ORDER BY order_num ASC;
2021-04-02 17:19:48.810 febs [http-nio-11101-exec-6] INFO  p6spy - 2021-04-02 17:19:48 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role ) TOTAL;
2021-04-02 17:19:48.817 febs [http-nio-11101-exec-6] INFO  p6spy - 2021-04-02 17:19:48 | 耗时 6 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role LIMIT 0,10;
2021-04-02 17:20:01.739 febs [http-nio-11101-exec-8] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 17:20:01.797 febs [http-nio-11101-exec-8] INFO  p6spy - 2021-04-02 17:20:01 | 耗时 38 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = '22';
2021-04-02 17:20:01.830 febs [http-nio-11101-exec-8] INFO  p6spy - 2021-04-02 17:20:01 | 耗时 14 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = '22';
2021-04-02 17:20:01.939 febs [http-nio-11101-exec-8] INFO  p6spy - 2021-04-02 17:20:01 | 耗时 100 ms | SQL 语句：
INSERT INTO t_user ( username, password, dept_id, tenant_id, mobile, status, create_time, gender, avatar, user_type, is_xcx, is_show ) VALUES ( '22', '06ab1d51575a32185708eb8945a71535', 139893173706031104, 0, '13333333333', '1', '2021-04-02T17:20:01.830+0800', '2', 'default.jpg', 0, 0, 1 );
2021-04-02 17:20:01.963 febs [http-nio-11101-exec-8] INFO  p6spy - 2021-04-02 17:20:01 | 耗时 15 ms | SQL 语句：
INSERT INTO t_user_role ( user_id, role_id ) VALUES ( 182, 1 );
2021-04-02 17:20:01.978 febs [http-nio-11101-exec-8] INFO  p6spy - 2021-04-02 17:20:01 | 耗时 9 ms | SQL 语句：
INSERT INTO t_user_config ( USER_ID, theme, layout, multi_page, fix_siderbar, fix_header, color ) VALUES ( 182, 'dark', 'side', '0', '1', '1', 'rgb(66, 185, 131)' );
2021-04-02 17:20:02.035 febs [http-nio-11101-exec-8] INFO  p6spy - 2021-04-02 17:20:02 | 耗时 54 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = '22' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 17:20:02.097 febs [http-nio-11101-exec-8] INFO  p6spy - 2021-04-02 17:20:02 | 耗时 6 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = '22';
2021-04-02 17:20:02.117 febs [http-nio-11101-exec-8] INFO  p6spy - 2021-04-02 17:20:02 | 耗时 6 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = '22' and m.perms is not null and m.perms <> '';
2021-04-02 17:20:02.136 febs [http-nio-11101-exec-8] INFO  p6spy - 2021-04-02 17:20:02 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='182';
2021-04-02 17:20:02.244 febs [asyncTaskExecutor-1] INFO  p6spy - 2021-04-02 17:20:02 | 耗时 42 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'sysadmin', '新增用户', 407, 'com.smart.brd.sys.system.controller.UserController.addUser()', ' request: org.apache.shiro.web.servlet.ShiroHttpServletRequest@3b8d026b user: "User(userId=182, username=22, password=06ab1d51575a32185708eb8945a71535, deptId=139893173706031104, deptIds=null, tenantId=0, deptName=null, email=null, mobile=13333333333, status=1, createTime=Fri Apr 02 17:20:01 CST 2021, modifyTime=null, lastLoginTime=null, gender=2, description=null, avatar=default.jpg, roleId=1, roleName=null, expireTime=null, sortField=null, sortOrder=null, createTimeFrom=null, createTimeTo=null, id=null, userType=0, condition=null, openId=null, isXcx=0, isShow=1, createDept=null, province=null, city=null, county=null, town=null, housing=null)"', '127.0.0.1', '2021-04-02T17:20:02.193+0800', '内网IP|0|0|内网IP|内网IP' );
2021-04-02 17:20:02.725 febs [http-nio-11101-exec-9] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 17:20:02.761 febs [http-nio-11101-exec-9] INFO  p6spy - 2021-04-02 17:20:02 | 耗时 7 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 and u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 17:20:02.778 febs [http-nio-11101-exec-9] INFO  p6spy - 2021-04-02 17:20:02 | 耗时 13 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 and u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-04-02 17:22:04.467 febs [http-nio-11101-exec-10] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 17:22:04.517 febs [http-nio-11101-exec-10] INFO  p6spy - 2021-04-02 17:22:04 | 耗时 7 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role ) TOTAL;
2021-04-02 17:22:04.524 febs [http-nio-11101-exec-10] INFO  p6spy - 2021-04-02 17:22:04 | 耗时 5 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role LIMIT 0,10;
2021-04-02 17:31:20.192 febs [http-nio-11101-exec-11] INFO  p6spy - 2021-04-02 17:31:20 | 耗时 49 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-04-02 17:31:20.344 febs [http-nio-11101-exec-12] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 17:31:20.357 febs [http-nio-11101-exec-12] INFO  p6spy - 2021-04-02 17:31:20 | 耗时 11 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin') order by m.order_num;
2021-04-02 17:31:24.602 febs [http-nio-11101-exec-13] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 17:31:24.650 febs [http-nio-11101-exec-13] INFO  p6spy - 2021-04-02 17:31:24 | 耗时 16 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role ) TOTAL;
2021-04-02 17:31:24.677 febs [http-nio-11101-exec-13] INFO  p6spy - 2021-04-02 17:31:24 | 耗时 26 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role LIMIT 0,10;
2021-04-02 17:31:26.551 febs [http-nio-11101-exec-14] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 17:31:26.567 febs [http-nio-11101-exec-14] INFO  p6spy - 2021-04-02 17:31:26 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 and u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 17:31:26.606 febs [http-nio-11101-exec-14] INFO  p6spy - 2021-04-02 17:31:26 | 耗时 38 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 and u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-04-02 17:31:28.994 febs [http-nio-11101-exec-15] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 17:31:29.012 febs [http-nio-11101-exec-15] INFO  p6spy - 2021-04-02 17:31:29 | 耗时 7 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role ) TOTAL;
2021-04-02 17:31:29.018 febs [http-nio-11101-exec-15] INFO  p6spy - 2021-04-02 17:31:29 | 耗时 5 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role LIMIT 0,10;
2021-04-02 17:31:31.881 febs [http-nio-11101-exec-16] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 17:31:31.906 febs [http-nio-11101-exec-16] INFO  p6spy - 2021-04-02 17:31:31 | 耗时 10 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu ORDER BY order_num ASC;
2021-04-02 17:31:32.153 febs [http-nio-11101-exec-17] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 17:31:32.167 febs [http-nio-11101-exec-17] INFO  p6spy - 2021-04-02 17:31:32 | 耗时 5 ms | SQL 语句：
SELECT role_id,menu_id FROM t_role_menu WHERE role_id = '-1';
2021-04-02 17:31:38.098 febs [http-nio-11101-exec-18] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 17:31:38.134 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-02 17:31:38 | 耗时 4 ms | SQL 语句：
SELECT user_id,role_id FROM t_user_role WHERE role_id IN ('-1');
2021-04-02 17:31:38.146 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-02 17:31:38 | 耗时 9 ms | SQL 语句：
UPDATE t_role SET modify_time='2021-04-02T17:31:38.134+0800' WHERE ROLE_ID=-1;
2021-04-02 17:31:38.295 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-02 17:31:38 | 耗时 145 ms | SQL 语句：
DELETE FROM t_role_menu WHERE role_id = -1;
2021-04-02 17:31:38.357 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-02 17:31:38 | 耗时 60 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 5 );
2021-04-02 17:31:38.374 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-02 17:31:38 | 耗时 15 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9033 );
2021-04-02 17:31:38.465 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-02 17:31:38 | 耗时 90 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9034 );
2021-04-02 17:31:38.553 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-02 17:31:38 | 耗时 87 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9023 );
2021-04-02 17:31:38.611 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-02 17:31:38 | 耗时 57 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9024 );
2021-04-02 17:31:38.673 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-02 17:31:38 | 耗时 61 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 2 );
2021-04-02 17:31:38.688 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-02 17:31:38 | 耗时 13 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9027 );
2021-04-02 17:31:38.715 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-02 17:31:38 | 耗时 26 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9028 );
2021-04-02 17:31:38.732 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-02 17:31:38 | 耗时 15 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 12 );
2021-04-02 17:31:38.763 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-02 17:31:38 | 耗时 30 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9047 );
2021-04-02 17:31:38.805 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-02 17:31:38 | 耗时 41 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 13 );
2021-04-02 17:31:38.870 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-02 17:31:38 | 耗时 64 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9048 );
2021-04-02 17:31:39.032 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-02 17:31:39 | 耗时 160 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9 );
2021-04-02 17:31:39.180 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-02 17:31:39 | 耗时 148 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9044 );
2021-04-02 17:31:39.376 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-02 17:31:39 | 耗时 195 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 10 );
2021-04-02 17:31:39.413 febs [http-nio-11101-exec-19] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 17:31:39.518 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-02 17:31:39 | 耗时 140 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9045 );
2021-04-02 17:31:39.555 febs [http-nio-11101-exec-19] INFO  p6spy - 2021-04-02 17:31:39 | 耗时 39 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 and u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 17:31:39.666 febs [http-nio-11101-exec-19] INFO  p6spy - 2021-04-02 17:31:39 | 耗时 110 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 and u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-04-02 17:31:39.883 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-02 17:31:39 | 耗时 364 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 3 );
2021-04-02 17:31:40.351 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-02 17:31:40 | 耗时 459 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9029 );
2021-04-02 17:31:41.228 febs [http-nio-11101-exec-20] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 17:31:41.777 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-02 17:31:41 | 耗时 1425 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9030 );
2021-04-02 17:31:42.165 febs [http-nio-11101-exec-20] INFO  p6spy - 2021-04-02 17:31:42 | 耗时 385 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role ) TOTAL;
2021-04-02 17:31:42.311 febs [http-nio-11101-exec-20] INFO  p6spy - 2021-04-02 17:31:42 | 耗时 145 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role LIMIT 0,10;
2021-04-02 17:31:42.352 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-02 17:31:42 | 耗时 571 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9031 );
2021-04-02 17:31:42.406 febs [http-nio-11101-exec-21] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 17:31:42.412 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-02 17:31:42 | 耗时 56 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 4 );
2021-04-02 17:31:42.452 febs [http-nio-11101-exec-21] INFO  p6spy - 2021-04-02 17:31:42 | 耗时 39 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 and u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 17:31:42.524 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-02 17:31:42 | 耗时 111 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9032 );
2021-04-02 17:31:42.537 febs [http-nio-11101-exec-21] INFO  p6spy - 2021-04-02 17:31:42 | 耗时 84 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 and u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-04-02 17:31:42.553 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-02 17:31:42 | 耗时 27 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 11 );
2021-04-02 17:31:42.621 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-02 17:31:42 | 耗时 67 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9046 );
2021-04-02 17:31:42.693 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-02 17:31:42 | 耗时 71 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 14 );
2021-04-02 17:31:42.720 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-02 17:31:42 | 耗时 25 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9049 );
2021-04-02 17:31:42.793 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-02 17:31:42 | 耗时 71 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9050 );
2021-04-02 17:31:42.920 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-02 17:31:42 | 耗时 125 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9051 );
2021-04-02 17:31:42.927 febs [http-nio-11101-exec-22] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 17:31:42.943 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-02 17:31:42 | 耗时 21 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9052 );
2021-04-02 17:31:42.956 febs [http-nio-11101-exec-22] INFO  p6spy - 2021-04-02 17:31:42 | 耗时 21 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role ) TOTAL;
2021-04-02 17:31:43.055 febs [http-nio-11101-exec-22] INFO  p6spy - 2021-04-02 17:31:43 | 耗时 97 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role LIMIT 0,10;
2021-04-02 17:31:43.062 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-02 17:31:43 | 耗时 117 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9053 );
2021-04-02 17:31:43.078 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-02 17:31:43 | 耗时 14 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9054 );
2021-04-02 17:31:43.134 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-02 17:31:43 | 耗时 55 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 6 );
2021-04-02 17:31:43.264 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-02 17:31:43 | 耗时 128 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9035 );
2021-04-02 17:31:43.379 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-02 17:31:43 | 耗时 114 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9036 );
2021-04-02 17:31:43.465 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-02 17:31:43 | 耗时 85 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9037 );
2021-04-02 17:31:43.527 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-02 17:31:43 | 耗时 60 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 7 );
2021-04-02 17:31:43.585 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-02 17:31:43 | 耗时 55 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9038 );
2021-04-02 17:31:43.687 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-02 17:31:43 | 耗时 98 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9039 );
2021-04-02 17:31:43.748 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-02 17:31:43 | 耗时 60 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9040 );
2021-04-02 17:31:43.790 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-02 17:31:43 | 耗时 41 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 8 );
2021-04-02 17:31:43.821 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-02 17:31:43 | 耗时 30 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9041 );
2021-04-02 17:31:43.864 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-02 17:31:43 | 耗时 41 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9042 );
2021-04-02 17:31:43.927 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-02 17:31:43 | 耗时 62 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9043 );
2021-04-02 17:31:43.997 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-02 17:31:43 | 耗时 69 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9057 );
2021-04-02 17:31:44.063 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-02 17:31:44 | 耗时 65 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 9025 );
2021-04-02 17:31:44.132 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-02 17:31:44 | 耗时 67 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( -1, 1 );
2021-04-02 17:31:44.195 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-02 17:31:44 | 耗时 61 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE USER_ID='-1';
2021-04-02 17:31:44.300 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-02 17:31:44 | 耗时 104 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin';
2021-04-02 17:31:44.521 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-02 17:31:44 | 耗时 90 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'sysadmin' and m.perms is not null and m.perms <> '';
2021-04-02 17:31:44.720 febs [asyncTaskExecutor-2] INFO  p6spy - 2021-04-02 17:31:44 | 耗时 9 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'sysadmin', '修改角色', 6481, 'com.smart.brd.sys.system.controller.RoleController.updateRole()', ' request: org.apache.shiro.web.servlet.ShiroHttpServletRequest@304a0a3b role: "Role(roleId=-1, roleName=null, remark=null, createTime=null, modifyTime=Fri Apr 02 17:31:38 CST 2021, createDept=null, createTimeFrom=null, createTimeTo=null, menuId=5,9033,9034,9023,9024,2,9027,9028,12,9047,13,9048,9,9044,10,9045,3,9029,9030,9031,4,9032,11,9046,14,9049,9050,9051,9052,9053,9054,6,9035,9036,9037,7,9038,9039,9040,8,9041,9042,9043,9057,9025,1)"', '127.0.0.1', '2021-04-02T17:31:44.709+0800', '内网IP|0|0|内网IP|内网IP' );
2021-04-02 17:31:44.954 febs [http-nio-11101-exec-23] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 17:31:44.963 febs [http-nio-11101-exec-23] INFO  p6spy - 2021-04-02 17:31:44 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role ) TOTAL;
2021-04-02 17:31:44.969 febs [http-nio-11101-exec-23] INFO  p6spy - 2021-04-02 17:31:44 | 耗时 5 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time,create_dept FROM t_role LIMIT 0,10;
2021-04-02 17:31:45.200 febs [http-nio-11101-exec-24] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 17:31:45.212 febs [http-nio-11101-exec-24] INFO  p6spy - 2021-04-02 17:31:45 | 耗时 7 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 and u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 17:31:45.254 febs [http-nio-11101-exec-24] INFO  p6spy - 2021-04-02 17:31:45 | 耗时 41 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 and u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-04-02 17:31:47.048 febs [http-nio-11101-exec-25] INFO  p6spy - 2021-04-02 17:31:47 | 耗时 60 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-04-02 17:31:47.151 febs [http-nio-11101-exec-27] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 17:31:47.164 febs [http-nio-11101-exec-27] INFO  p6spy - 2021-04-02 17:31:47 | 耗时 10 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin') order by m.order_num;
2021-04-02 17:31:47.534 febs [http-nio-11101-exec-28] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 17:31:47.551 febs [http-nio-11101-exec-28] INFO  p6spy - 2021-04-02 17:31:47 | 耗时 11 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 and u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 17:31:47.581 febs [http-nio-11101-exec-28] INFO  p6spy - 2021-04-02 17:31:47 | 耗时 30 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 and u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-04-02 17:31:48.702 febs [http-nio-11101-exec-26] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 17:31:48.721 febs [http-nio-11101-exec-26] INFO  p6spy - 2021-04-02 17:31:48 | 耗时 9 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu ORDER BY order_num ASC;
2021-04-02 17:31:56.477 febs [http-nio-11101-exec-29] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 17:31:56.504 febs [http-nio-11101-exec-29] INFO  p6spy - 2021-04-02 17:31:56 | 耗时 19 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu ORDER BY order_num ASC;
2021-04-02 17:32:00.655 febs [http-nio-11101-exec-31] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 17:32:00.677 febs [http-nio-11101-exec-31] INFO  p6spy - 2021-04-02 17:32:00 | 耗时 8 ms | SQL 语句：
UPDATE t_menu SET parent_id=0, menu_name='养殖场管理', path='/farmManagement', type='0', order_num=0.0, modify_time='2021-04-02T17:32:00.667+0800' WHERE MENU_ID=NULL;
2021-04-02 17:32:00.683 febs [http-nio-11101-exec-31] INFO  p6spy - 2021-04-02 17:32:00 | 耗时 4 ms | SQL 语句：
SELECT user_id FROM t_user_role WHERE role_id IN (SELECT rm.role_id FROM t_role_menu rm WHERE rm.menu_id = 'null');
2021-04-02 17:32:00.707 febs [asyncTaskExecutor-3] INFO  p6spy - 2021-04-02 17:32:00 | 耗时 8 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'sysadmin', '修改菜单/按钮', 36, 'com.smart.brd.sys.system.controller.MenuController.updateMenu()', ' menu: "Menu(menuId=null, parentId=0, menuName=养殖场管理, path=/farmManagement, component=null, perms=null, icon=null, type=0, orderNum=0.0, createTime=null, modifyTime=Fri Apr 02 17:32:00 CST 2021, createTimeFrom=null, createTimeTo=null, selectType=null)"', '127.0.0.1', '2021-04-02T17:32:00.698+0800', '内网IP|0|0|内网IP|内网IP' );
2021-04-02 17:32:00.923 febs [http-nio-11101-exec-30] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 17:32:00.943 febs [http-nio-11101-exec-30] INFO  p6spy - 2021-04-02 17:32:00 | 耗时 9 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu ORDER BY order_num ASC;
2021-04-02 17:32:03.340 febs [http-nio-11101-exec-33] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 17:32:03.359 febs [http-nio-11101-exec-33] INFO  p6spy - 2021-04-02 17:32:03 | 耗时 10 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu ORDER BY order_num ASC;
2021-04-02 17:32:06.613 febs [http-nio-11101-exec-32] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 17:32:06.630 febs [http-nio-11101-exec-32] INFO  p6spy - 2021-04-02 17:32:06 | 耗时 9 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu ORDER BY order_num ASC;
2021-04-02 17:32:15.255 febs [http-nio-11101-exec-34] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 17:32:15.273 febs [http-nio-11101-exec-34] INFO  p6spy - 2021-04-02 17:32:15 | 耗时 10 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu ORDER BY order_num ASC;
2021-04-02 17:32:23.153 febs [http-nio-11101-exec-35] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 17:32:23.169 febs [http-nio-11101-exec-35] INFO  p6spy - 2021-04-02 17:32:23 | 耗时 9 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu ORDER BY order_num ASC;
2021-04-02 17:32:25.925 febs [http-nio-11101-exec-36] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 17:32:25.945 febs [http-nio-11101-exec-36] INFO  p6spy - 2021-04-02 17:32:25 | 耗时 8 ms | SQL 语句：
UPDATE t_menu SET parent_id=0, menu_name='权限管理', path='/auths', type='0', order_num=0.0, modify_time='2021-04-02T17:32:25.935+0800' WHERE MENU_ID=NULL;
2021-04-02 17:32:25.953 febs [http-nio-11101-exec-36] INFO  p6spy - 2021-04-02 17:32:25 | 耗时 7 ms | SQL 语句：
SELECT user_id FROM t_user_role WHERE role_id IN (SELECT rm.role_id FROM t_role_menu rm WHERE rm.menu_id = 'null');
2021-04-02 17:32:26.026 febs [asyncTaskExecutor-4] INFO  p6spy - 2021-04-02 17:32:26 | 耗时 54 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'sysadmin', '修改菜单/按钮', 38, 'com.smart.brd.sys.system.controller.MenuController.updateMenu()', ' menu: "Menu(menuId=null, parentId=0, menuName=权限管理, path=/auths, component=null, perms=null, icon=null, type=0, orderNum=0.0, createTime=null, modifyTime=Fri Apr 02 17:32:25 CST 2021, createTimeFrom=null, createTimeTo=null, selectType=null)"', '127.0.0.1', '2021-04-02T17:32:25.970+0800', '内网IP|0|0|内网IP|内网IP' );
2021-04-02 17:32:26.338 febs [http-nio-11101-exec-37] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 17:32:26.354 febs [http-nio-11101-exec-37] INFO  p6spy - 2021-04-02 17:32:26 | 耗时 13 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu ORDER BY order_num ASC;
2021-04-02 17:32:30.667 febs [http-nio-11101-exec-38] INFO  p6spy - 2021-04-02 17:32:30 | 耗时 61 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-04-02 17:32:30.717 febs [http-nio-11101-exec-39] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 17:32:30.730 febs [http-nio-11101-exec-39] INFO  p6spy - 2021-04-02 17:32:30 | 耗时 10 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin') order by m.order_num;
2021-04-02 17:32:31.093 febs [http-nio-11101-exec-40] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 17:32:31.117 febs [http-nio-11101-exec-40] INFO  p6spy - 2021-04-02 17:32:31 | 耗时 17 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu ORDER BY order_num ASC;
2021-04-02 17:32:33.202 febs [http-nio-11101-exec-41] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 17:32:33.223 febs [http-nio-11101-exec-41] INFO  p6spy - 2021-04-02 17:32:33 | 耗时 14 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu ORDER BY order_num ASC;
2021-04-02 17:32:38.582 febs [http-nio-11101-exec-42] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 17:32:38.601 febs [http-nio-11101-exec-42] INFO  p6spy - 2021-04-02 17:32:38 | 耗时 11 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu ORDER BY order_num ASC;
2021-04-02 17:32:43.284 febs [http-nio-11101-exec-43] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 17:32:43.304 febs [http-nio-11101-exec-43] INFO  p6spy - 2021-04-02 17:32:43 | 耗时 10 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu ORDER BY order_num ASC;
2021-04-02 17:32:50.457 febs [http-nio-11101-exec-44] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 17:32:50.495 febs [http-nio-11101-exec-44] INFO  p6spy - 2021-04-02 17:32:50 | 耗时 17 ms | SQL 语句：
UPDATE t_menu SET parent_id=0, menu_name='养殖场管理', path='/farmManagement', type='0', order_num=0.0, modify_time='2021-04-02T17:32:50.477+0800' WHERE MENU_ID=NULL;
2021-04-02 17:32:50.526 febs [http-nio-11101-exec-44] INFO  p6spy - 2021-04-02 17:32:50 | 耗时 31 ms | SQL 语句：
SELECT user_id FROM t_user_role WHERE role_id IN (SELECT rm.role_id FROM t_role_menu rm WHERE rm.menu_id = 'null');
2021-04-02 17:32:50.610 febs [asyncTaskExecutor-5] INFO  p6spy - 2021-04-02 17:32:50 | 耗时 9 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'sysadmin', '修改菜单/按钮', 134, 'com.smart.brd.sys.system.controller.MenuController.updateMenu()', ' menu: "Menu(menuId=null, parentId=0, menuName=养殖场管理, path=/farmManagement, component=null, perms=null, icon=null, type=0, orderNum=0.0, createTime=null, modifyTime=Fri Apr 02 17:32:50 CST 2021, createTimeFrom=null, createTimeTo=null, selectType=null)"', '127.0.0.1', '2021-04-02T17:32:50.599+0800', '内网IP|0|0|内网IP|内网IP' );
2021-04-02 17:32:50.721 febs [http-nio-11101-exec-45] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 17:32:50.741 febs [http-nio-11101-exec-45] INFO  p6spy - 2021-04-02 17:32:50 | 耗时 17 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu ORDER BY order_num ASC;
2021-04-02 17:35:20.040 febs [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-04-02 17:35:20.412 febs [restartedMain] INFO  c.a.n.c.c.i.LocalConfigInfoProcessor - LOCAL_SNAPSHOT_PATH:C:\Users\Dukzzz\nacos\config
2021-04-02 17:35:20.431 febs [restartedMain] INFO  c.a.nacos.client.config.impl.Limiter - limitTime:5.0
2021-04-02 17:35:20.762 febs [restartedMain] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-brd-sys2-local.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys2.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-brd-sys2,DEFAULT_GROUP'}]
2021-04-02 17:35:20.766 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - The following profiles are active: local
2021-04-02 17:35:21.761 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-04-02 17:35:21.763 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-04-02 17:35:21.806 febs [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 30ms. Found 0 Redis repository interfaces.
2021-04-02 17:35:22.055 febs [restartedMain] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=8c4fe861-2a7b-3271-bb5c-24bd86b9b2e5
2021-04-02 17:35:22.185 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [com.smart.brd.sys.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$8dc7190f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:35:22.256 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:35:22.321 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$aa788ec4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:35:22.328 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:35:22.331 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:35:22.367 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [com.smart.brd.sys.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$c886450b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:35:22.614 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.smart.brd.sys.common.config.RedisConfig$$EnhancerBySpringCGLIB$$59e2db5f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:35:22.629 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:35:22.632 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [com.smart.brd.sys.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:35:22.671 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:35:22.677 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [com.smart.brd.sys.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$78e62f31] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:35:22.679 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:35:22.685 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$7eb28a8d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:35:22.692 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:35:22.694 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:35:22.697 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2021-04-02 17:35:22.701 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2021-04-02 17:35:22.898 febs [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2021-04-02 17:35:22.898 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2021-04-02 17:35:22.898 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2021-04-02 17:35:22.898 febs [restartedMain] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2021-04-02 17:35:22.898 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:35:22.910 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:35:22.918 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:35:23.355 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:35:23.361 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:35:23.388 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:35:23.391 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy144] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:35:23.396 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:35:23.397 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy145] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:35:23.399 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [com.smart.brd.sys.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:35:23.436 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [com.smart.brd.sys.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:35:23.450 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userTokenServiceImpl' of type [com.smart.brd.sys.system.usertoken.service.impl.UserTokenServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:35:23.454 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:35:23.455 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy148] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:35:23.456 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [com.smart.brd.sys.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:35:23.472 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:35:23.473 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy150] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:35:23.473 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [com.smart.brd.sys.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:35:23.511 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:35:23.512 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy152] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:35:23.513 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [com.smart.brd.sys.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:35:23.524 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:35:23.525 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deptMapper' of type [com.sun.proxy.$Proxy154] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:35:23.529 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:35:23.531 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy155] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:35:23.532 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [com.smart.brd.sys.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:35:23.544 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:35:23.546 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:35:23.549 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:35:23.553 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:35:23.554 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:35:23.557 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:35:23.559 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:35:23.563 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:35:23.568 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:35:23.570 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:35:23.573 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:35:23.575 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:35:23.590 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:35:23.606 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [com.smart.brd.sys.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:35:23.607 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [com.smart.brd.sys.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:35:23.607 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [com.smart.brd.sys.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:35:23.615 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:35:23.629 febs [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-02 17:35:23.983 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 11101 (http)
2021-04-02 17:35:23.990 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-11101"]
2021-04-02 17:35:23.991 febs [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2021-04-02 17:35:23.991 febs [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.31]
2021-04-02 17:35:24.074 febs [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2021-04-02 17:35:24.074 febs [restartedMain] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3291 ms
2021-04-02 17:35:24.167 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-04-02 17:35:24.175 febs [restartedMain] INFO  c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@6cc5c41b
2021-04-02 17:35:24.731 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2021-04-02 17:35:24.740 febs [restartedMain] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-02 17:35:24.740 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.2 created.
2021-04-02 17:35:24.740 febs [restartedMain] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2021-04-02 17:35:24.741 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-02 17:35:24.741 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2021-04-02 17:35:24.741 febs [restartedMain] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.2
2021-04-02 17:35:24.741 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@1c89baad
2021-04-02 17:35:24.794 febs [restartedMain] INFO  p6spy - 2021-04-02 17:35:24 | 耗时 6 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2021-04-02 17:35:25.524 febs [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2021-04-02 17:35:25.636 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2021-04-02 17:35:25.683 febs [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2021-04-02 17:35:25.830 febs [restartedMain] INFO  c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-04-02 17:35:26.045 febs [restartedMain] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2021-04-02 17:35:26.059 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-04-02 17:35:26.059 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Environment :null
2021-04-02 17:35:26.060 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - initializer namespace from System Property :null
2021-04-02 17:35:26.721 febs [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2021-04-02 17:35:26.729 febs [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2021-04-02 17:35:26.760 febs [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2021-04-02 17:35:26.770 febs [restartedMain] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2021-04-02 17:35:26.770 febs [restartedMain] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2021-04-02 17:35:26.784 febs [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-11101"]
2021-04-02 17:35:26.804 febs [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 11101 (http) with context path ''
2021-04-02 17:35:26.807 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [BEAT] adding beat: {"cluster":"DEFAULT","ip":"192.168.0.103","metadata":{"preserved.register.source":"SPRING_CLOUD"},"period":5000,"port":11101,"scheduled":false,"serviceName":"DEFAULT_GROUP@@brd-sys2","stopped":false,"weight":1.0} to beat map.
2021-04-02 17:35:26.854 febs [restartedMain] INFO  com.alibaba.nacos.client.naming - [REGISTER-SERVICE] public registering service DEFAULT_GROUP@@brd-sys2 with instance: {"clusterName":"DEFAULT","enabled":true,"ephemeral":true,"healthy":true,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000,"ip":"192.168.0.103","ipDeleteTimeout":30000,"metadata":{"preserved.register.source":"SPRING_CLOUD"},"port":11101,"weight":1.0}
2021-04-02 17:35:27.184 febs [restartedMain] INFO  c.a.c.n.r.NacosServiceRegistry - nacos registry, DEFAULT_GROUP brd-sys2 192.168.0.103:11101 register finished
2021-04-02 17:35:27.254 febs [scheduling-1] INFO  c.s.brd.sys.common.task.CacheTask - delete expired user
2021-04-02 17:35:27.311 febs [restartedMain] INFO  com.smart.brd.sys.BrdSysApplication - Started BrdSysApplication in 8.048 seconds (JVM running for 9.046)
2021-04-02 17:35:27.315 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - Redis连接中 ······
2021-04-02 17:35:27.343 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存初始化 ······
2021-04-02 17:35:27.344 febs [restartedMain] INFO  c.s.b.s.c.runner.CacheInitRunner - 缓存用户数据 ······
2021-04-02 17:35:27.381 febs [restartedMain] INFO  p6spy - 2021-04-02 17:35:27 | 耗时 9 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user;
2021-04-02 17:35:27.403 febs [restartedMain] INFO  p6spy - 2021-04-02 17:35:27 | 耗时 14 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sysadmin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 17:35:27.565 febs [restartedMain] INFO  p6spy - 2021-04-02 17:35:27 | 耗时 7 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin';
2021-04-02 17:35:27.600 febs [restartedMain] INFO  p6spy - 2021-04-02 17:35:27 | 耗时 7 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'sysadmin' and m.perms is not null and m.perms <> '';
2021-04-02 17:35:27.633 febs [restartedMain] INFO  p6spy - 2021-04-02 17:35:27 | 耗时 6 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='-1';
2021-04-02 17:35:27.700 febs [restartedMain] INFO  p6spy - 2021-04-02 17:35:27 | 耗时 64 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengcheng1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 17:35:27.763 febs [restartedMain] INFO  p6spy - 2021-04-02 17:35:27 | 耗时 7 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengcheng1';
2021-04-02 17:35:27.788 febs [restartedMain] INFO  p6spy - 2021-04-02 17:35:27 | 耗时 7 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengcheng1' and m.perms is not null and m.perms <> '';
2021-04-02 17:35:27.809 febs [restartedMain] INFO  p6spy - 2021-04-02 17:35:27 | 耗时 7 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='163';
2021-04-02 17:35:27.891 febs [restartedMain] INFO  p6spy - 2021-04-02 17:35:27 | 耗时 65 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yulin1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 17:35:27.955 febs [restartedMain] INFO  p6spy - 2021-04-02 17:35:27 | 耗时 6 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yulin1';
2021-04-02 17:35:27.979 febs [restartedMain] INFO  p6spy - 2021-04-02 17:35:27 | 耗时 8 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yulin1' and m.perms is not null and m.perms <> '';
2021-04-02 17:35:28.005 febs [restartedMain] INFO  p6spy - 2021-04-02 17:35:28 | 耗时 6 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='164';
2021-04-02 17:35:28.072 febs [restartedMain] INFO  p6spy - 2021-04-02 17:35:28 | 耗时 54 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengchengyonghu1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 17:35:28.135 febs [restartedMain] INFO  p6spy - 2021-04-02 17:35:28 | 耗时 6 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengchengyonghu1';
2021-04-02 17:35:28.156 febs [restartedMain] INFO  p6spy - 2021-04-02 17:35:28 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengchengyonghu1' and m.perms is not null and m.perms <> '';
2021-04-02 17:35:28.163 febs [restartedMain] INFO  p6spy - 2021-04-02 17:35:28 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='173';
2021-04-02 17:35:28.230 febs [restartedMain] INFO  p6spy - 2021-04-02 17:35:28 | 耗时 54 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengchengyonghu2' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 17:35:28.290 febs [restartedMain] INFO  p6spy - 2021-04-02 17:35:28 | 耗时 6 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengchengyonghu2';
2021-04-02 17:35:28.307 febs [restartedMain] INFO  p6spy - 2021-04-02 17:35:28 | 耗时 6 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengchengyonghu2' and m.perms is not null and m.perms <> '';
2021-04-02 17:35:28.313 febs [restartedMain] INFO  p6spy - 2021-04-02 17:35:28 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='174';
2021-04-02 17:35:28.379 febs [restartedMain] INFO  p6spy - 2021-04-02 17:35:28 | 耗时 54 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'chengcheng' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 17:35:28.439 febs [restartedMain] INFO  p6spy - 2021-04-02 17:35:28 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'chengcheng';
2021-04-02 17:35:28.459 febs [restartedMain] INFO  p6spy - 2021-04-02 17:35:28 | 耗时 6 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'chengcheng' and m.perms is not null and m.perms <> '';
2021-04-02 17:35:28.467 febs [restartedMain] INFO  p6spy - 2021-04-02 17:35:28 | 耗时 4 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='175';
2021-04-02 17:35:28.557 febs [restartedMain] INFO  p6spy - 2021-04-02 17:35:28 | 耗时 78 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yulinyonghu1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 17:35:28.619 febs [restartedMain] INFO  p6spy - 2021-04-02 17:35:28 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yulinyonghu1';
2021-04-02 17:35:28.637 febs [restartedMain] INFO  p6spy - 2021-04-02 17:35:28 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yulinyonghu1' and m.perms is not null and m.perms <> '';
2021-04-02 17:35:28.643 febs [restartedMain] INFO  p6spy - 2021-04-02 17:35:28 | 耗时 4 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='178';
2021-04-02 17:35:28.708 febs [restartedMain] INFO  p6spy - 2021-04-02 17:35:28 | 耗时 52 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'yulinyonghu2' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 17:35:28.766 febs [restartedMain] INFO  p6spy - 2021-04-02 17:35:28 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'yulinyonghu2';
2021-04-02 17:35:28.782 febs [restartedMain] INFO  p6spy - 2021-04-02 17:35:28 | 耗时 4 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'yulinyonghu2' and m.perms is not null and m.perms <> '';
2021-04-02 17:35:28.788 febs [restartedMain] INFO  p6spy - 2021-04-02 17:35:28 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='179';
2021-04-02 17:35:28.852 febs [restartedMain] INFO  p6spy - 2021-04-02 17:35:28 | 耗时 53 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'heyang1' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 17:35:28.915 febs [restartedMain] INFO  p6spy - 2021-04-02 17:35:28 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'heyang1';
2021-04-02 17:35:28.930 febs [restartedMain] INFO  p6spy - 2021-04-02 17:35:28 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'heyang1' and m.perms is not null and m.perms <> '';
2021-04-02 17:35:28.946 febs [restartedMain] INFO  p6spy - 2021-04-02 17:35:28 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='180';
2021-04-02 17:35:29.010 febs [restartedMain] INFO  p6spy - 2021-04-02 17:35:29 | 耗时 54 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.gender, u.is_xcx isXcx, u.is_show isShow, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = '22' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2021-04-02 17:35:29.068 febs [restartedMain] INFO  p6spy - 2021-04-02 17:35:29 | 耗时 4 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = '22';
2021-04-02 17:35:29.083 febs [restartedMain] INFO  p6spy - 2021-04-02 17:35:29 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = '22' and m.perms is not null and m.perms <> '';
2021-04-02 17:35:29.098 febs [restartedMain] INFO  p6spy - 2021-04-02 17:35:29 | 耗时 4 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='182';
2021-04-02 17:35:29.108 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2021-04-02 17:35:29.108 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2021-04-02 17:35:29.108 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2021-04-02 17:35:29.108 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner -                                                       
2021-04-02 17:35:29.108 febs [restartedMain] INFO  c.s.b.s.c.runner.StartedUpRunner - FEBS 启动完毕，时间：2021-04-02T17:35:29.108
2021-04-02 17:35:29.110 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2+DEFAULT_GROUP
2021-04-02 17:35:29.111 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2, group=DEFAULT_GROUP, cnt=1
2021-04-02 17:35:29.111 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2.yaml+DEFAULT_GROUP
2021-04-02 17:35:29.111 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2.yaml, group=DEFAULT_GROUP, cnt=1
2021-04-02 17:35:29.111 febs [restartedMain] INFO  c.a.n.c.config.impl.ClientWorker - [fixed-172.22.1.21_8500] [subscribe] brd-sys2-local.yaml+DEFAULT_GROUP
2021-04-02 17:35:29.111 febs [restartedMain] INFO  c.a.n.client.config.impl.CacheData - [fixed-172.22.1.21_8500] [add-listener] ok, tenant=, dataId=brd-sys2-local.yaml, group=DEFAULT_GROUP, cnt=1
2021-04-02 17:35:38.099 febs [http-nio-11101-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-04-02 17:35:38.099 febs [http-nio-11101-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2021-04-02 17:35:38.110 febs [http-nio-11101-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 11 ms
2021-04-02 17:35:38.309 febs [http-nio-11101-exec-1] INFO  p6spy - 2021-04-02 17:35:38 | 耗时 56 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-04-02 17:35:38.389 febs [http-nio-11101-exec-4] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 17:35:38.467 febs [http-nio-11101-exec-4] INFO  p6spy - 2021-04-02 17:35:38 | 耗时 25 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin') order by m.order_num;
2021-04-02 17:35:38.946 febs [http-nio-11101-exec-3] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 17:35:38.982 febs [http-nio-11101-exec-3] INFO  p6spy - 2021-04-02 17:35:38 | 耗时 9 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu ORDER BY order_num ASC;
2021-04-02 17:35:41.603 febs [http-nio-11101-exec-2] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 17:35:41.619 febs [http-nio-11101-exec-2] INFO  p6spy - 2021-04-02 17:35:41 | 耗时 9 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu ORDER BY order_num ASC;
2021-04-02 17:35:45.672 febs [http-nio-11101-exec-5] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 17:35:45.713 febs [http-nio-11101-exec-5] INFO  p6spy - 2021-04-02 17:35:45 | 耗时 9 ms | SQL 语句：
UPDATE t_menu SET parent_id=0, menu_name='养殖场管理', path='/farmManagement', type='0', order_num=2.0, modify_time='2021-04-02T17:35:45.697+0800' WHERE MENU_ID=NULL;
2021-04-02 17:35:45.719 febs [http-nio-11101-exec-5] INFO  p6spy - 2021-04-02 17:35:45 | 耗时 4 ms | SQL 语句：
SELECT user_id FROM t_user_role WHERE role_id IN (SELECT rm.role_id FROM t_role_menu rm WHERE rm.menu_id = 'null');
2021-04-02 17:35:45.804 febs [asyncTaskExecutor-1] INFO  p6spy - 2021-04-02 17:35:45 | 耗时 11 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'sysadmin', '修改菜单/按钮', 85, 'com.smart.brd.sys.system.controller.MenuController.updateMenu()', ' menu: "Menu(menuId=null, parentId=0, menuName=养殖场管理, path=/farmManagement, component=null, perms=null, icon=null, type=0, orderNum=2.0, createTime=null, modifyTime=Fri Apr 02 17:35:45 CST 2021, createTimeFrom=null, createTimeTo=null, selectType=null)"', '127.0.0.1', '2021-04-02T17:35:45.786+0800', '内网IP|0|0|内网IP|内网IP' );
2021-04-02 17:35:45.856 febs [http-nio-11101-exec-8] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 17:35:45.869 febs [http-nio-11101-exec-8] INFO  p6spy - 2021-04-02 17:35:45 | 耗时 9 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu ORDER BY order_num ASC;
2021-04-02 17:35:47.869 febs [http-nio-11101-exec-9] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 17:35:47.891 febs [http-nio-11101-exec-9] INFO  p6spy - 2021-04-02 17:35:47 | 耗时 11 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu ORDER BY order_num ASC;
2021-04-02 17:38:38.066 febs [http-nio-11101-exec-11] INFO  p6spy - 2021-04-02 17:38:38 | 耗时 57 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-04-02 17:38:38.229 febs [http-nio-11101-exec-6] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 17:38:38.243 febs [http-nio-11101-exec-6] INFO  p6spy - 2021-04-02 17:38:38 | 耗时 11 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin') order by m.order_num;
2021-04-02 17:38:38.588 febs [http-nio-11101-exec-10] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 17:38:38.602 febs [http-nio-11101-exec-10] INFO  p6spy - 2021-04-02 17:38:38 | 耗时 11 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu ORDER BY order_num ASC;
2021-04-02 17:39:16.670 febs [http-nio-11101-exec-7] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 17:39:16.760 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 17:39:16 | 耗时 38 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 and u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 17:39:16.815 febs [http-nio-11101-exec-7] INFO  p6spy - 2021-04-02 17:39:16 | 耗时 50 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 and u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-04-02 17:39:23.898 febs [http-nio-11101-exec-12] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 17:39:23.946 febs [http-nio-11101-exec-12] INFO  p6spy - 2021-04-02 17:39:23 | 耗时 30 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE USER_ID='182';
2021-04-02 17:39:24.025 febs [http-nio-11101-exec-12] INFO  p6spy - 2021-04-02 17:39:24 | 耗时 11 ms | SQL 语句：
DELETE FROM t_user WHERE USER_ID IN ( '182' );
2021-04-02 17:39:24.038 febs [http-nio-11101-exec-12] INFO  p6spy - 2021-04-02 17:39:24 | 耗时 9 ms | SQL 语句：
DELETE FROM t_user_role WHERE user_id = 182;
2021-04-02 17:39:24.054 febs [http-nio-11101-exec-12] INFO  p6spy - 2021-04-02 17:39:24 | 耗时 14 ms | SQL 语句：
DELETE FROM t_user_config WHERE USER_ID IN ( '182' );
2021-04-02 17:39:24.123 febs [asyncTaskExecutor-2] INFO  p6spy - 2021-04-02 17:39:24 | 耗时 10 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'sysadmin', '删除用户', 163, 'com.smart.brd.sys.system.controller.UserController.deleteUsers()', ' userIds: "182"', '127.0.0.1', '2021-04-02T17:39:24.111+0800', '内网IP|0|0|内网IP|内网IP' );
2021-04-02 17:39:24.144 febs [http-nio-11101-exec-15] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 17:39:24.159 febs [http-nio-11101-exec-15] INFO  p6spy - 2021-04-02 17:39:24 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 and u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 17:39:24.192 febs [http-nio-11101-exec-15] INFO  p6spy - 2021-04-02 17:39:24 | 耗时 31 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 and u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-04-02 17:41:34.182 febs [http-nio-11101-exec-14] INFO  p6spy - 2021-04-02 17:41:34 | 耗时 54 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-04-02 17:41:34.346 febs [http-nio-11101-exec-13] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 17:41:34.359 febs [http-nio-11101-exec-13] INFO  p6spy - 2021-04-02 17:41:34 | 耗时 11 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin') order by m.order_num;
2021-04-02 17:56:49.816 febs [http-nio-11101-exec-17] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 17:56:49.845 febs [http-nio-11101-exec-17] INFO  p6spy - 2021-04-02 17:56:49 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 and u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 17:56:49.862 febs [http-nio-11101-exec-17] INFO  p6spy - 2021-04-02 17:56:49 | 耗时 14 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 and u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-04-02 17:57:09.475 febs [http-nio-11101-exec-16] INFO  p6spy - 2021-04-02 17:57:09 | 耗时 60 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-04-02 17:57:09.596 febs [http-nio-11101-exec-18] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 17:57:09.628 febs [http-nio-11101-exec-18] INFO  p6spy - 2021-04-02 17:57:09 | 耗时 28 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin') order by m.order_num;
2021-04-02 17:57:16.641 febs [http-nio-11101-exec-19] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 17:57:16.658 febs [http-nio-11101-exec-19] INFO  p6spy - 2021-04-02 17:57:16 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 and u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2021-04-02 17:57:16.686 febs [http-nio-11101-exec-19] INFO  p6spy - 2021-04-02 17:57:16 | 耗时 27 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.is_xcx isXcx, u.is_show isShow, u.gender, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, u.EXPIRE_TIME, u.province, u.city, u.county, u.town, u.housing, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.is_show = 1 and u.user_id > 0 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.gender, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2021-04-02 18:08:37.295 febs [http-nio-11101-exec-20] INFO  p6spy - 2021-04-02 18:08:37 | 耗时 48 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,tenant_id,email,mobile,status,create_time,modify_time,last_login_time,gender,description,avatar,expire_time,user_type,open_id,is_xcx,is_show,create_dept,province,city,county,town,housing FROM t_user WHERE username = 'sysadmin';
2021-04-02 18:08:37.445 febs [http-nio-11101-exec-21] INFO  c.s.b.s.c.authentication.JWTUtil - token is valid
2021-04-02 18:08:37.458 febs [http-nio-11101-exec-21] INFO  p6spy - 2021-04-02 18:08:37 | 耗时 10 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sysadmin') order by m.order_num;
